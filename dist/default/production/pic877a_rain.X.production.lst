

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 12 21:54:13 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 2.20
    68                           ; Generated 12/02/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F877A Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  0081                     	;# 
   137  0085                     	;# 
   138  0086                     	;# 
   139  0087                     	;# 
   140  0088                     	;# 
   141  0089                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0088                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0093                     	;# 
   328  0094                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0008                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000D                     	;# 
   355  000E                     	;# 
   356  000E                     	;# 
   357  000F                     	;# 
   358  0010                     	;# 
   359  0011                     	;# 
   360  0012                     	;# 
   361  0013                     	;# 
   362  0014                     	;# 
   363  0015                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  001D                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  0081                     	;# 
   377  0085                     	;# 
   378  0086                     	;# 
   379  0087                     	;# 
   380  0088                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009C                     	;# 
   392  009D                     	;# 
   393  009E                     	;# 
   394  009F                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401                           
   402                           	psect	idataBANK0
   403  1206                     __pidataBANK0:
   404                           
   405                           ;initializer for _hour
   406  1206  3415               	retlw	21
   407  1207  3400               	retlw	0
   408                           
   409                           ;initializer for _min
   410  1208  3436               	retlw	54
   411  1209  3400               	retlw	0
   412                           
   413                           ;initializer for _BackLight_State
   414  120A  3408               	retlw	8
   415                           
   416                           	psect	idataBANK1
   417  120B                     __pidataBANK1:
   418                           
   419                           ;initializer for _year
   420  120B  3416               	retlw	22
   421  120C  3400               	retlw	0
   422                           
   423                           ;initializer for _month
   424  120D  3401               	retlw	1
   425  120E  3400               	retlw	0
   426                           
   427                           ;initializer for _date
   428  120F  340C               	retlw	12
   429  1210  3400               	retlw	0
   430                           
   431                           	psect	strings
   432  1000                     __pstrings:
   433  1000                     stringtab:
   434  1000                     __stringtab:
   435  1000                     stringcode:	
   436                           ;	String table - string pointers are 1 byte each
   437                           
   438  1000                     stringdir:
   439  1000  3010               	movlw	high stringdir
   440  1001  008A               	movwf	10
   441  1002  0804               	movf	4,w
   442  1003  0A84               	incf	4,f
   443  1004  0782               	addwf	2,f
   444  1005                     __stringbase:
   445  1005  3400               	retlw	0
   446  1006                     __end_of__stringtab:
   447  1006                     _dpowers:
   448  1006  3401               	retlw	1
   449  1007  3400               	retlw	0
   450  1008  3400               	retlw	0
   451  1009  3400               	retlw	0
   452  100A  340A               	retlw	10
   453  100B  3400               	retlw	0
   454  100C  3400               	retlw	0
   455  100D  3400               	retlw	0
   456  100E  3464               	retlw	100
   457  100F  3400               	retlw	0
   458  1010  3400               	retlw	0
   459  1011  3400               	retlw	0
   460  1012  34E8               	retlw	232
   461  1013  3403               	retlw	3
   462  1014  3400               	retlw	0
   463  1015  3400               	retlw	0
   464  1016  3410               	retlw	16
   465  1017  3427               	retlw	39
   466  1018  3400               	retlw	0
   467  1019  3400               	retlw	0
   468  101A  34A0               	retlw	160
   469  101B  3486               	retlw	134
   470  101C  3401               	retlw	1
   471  101D  3400               	retlw	0
   472  101E  3440               	retlw	64
   473  101F  3442               	retlw	66
   474  1020  340F               	retlw	15
   475  1021  3400               	retlw	0
   476  1022  3480               	retlw	128
   477  1023  3496               	retlw	150
   478  1024  3498               	retlw	152
   479  1025  3400               	retlw	0
   480  1026  3400               	retlw	0
   481  1027  34E1               	retlw	225
   482  1028  34F5               	retlw	245
   483  1029  3405               	retlw	5
   484  102A  3400               	retlw	0
   485  102B  34CA               	retlw	202
   486  102C  349A               	retlw	154
   487  102D  343B               	retlw	59
   488  102E                     __end_of_dpowers:
   489  102E                     STR_1:
   490  102E  3425               	retlw	37	;'%'
   491  102F  346C               	retlw	108	;'l'
   492  1030  3475               	retlw	117	;'u'
   493  1031  342E               	retlw	46	;'.'
   494  1032  3425               	retlw	37	;'%'
   495  1033  3436               	retlw	54	;'6'
   496  1034  342E               	retlw	46	;'.'
   497  1035  3436               	retlw	54	;'6'
   498  1036  346C               	retlw	108	;'l'
   499  1037  3475               	retlw	117	;'u'
   500  1038  3400               	retlw	0
   501                           
   502                           	psect	nvBANK0
   503  006D                     __pnvBANK0:
   504  006D                     _i2c_add:
   505  006D                     	ds	1
   506  000B                     _INTCONbits	set	11
   507  0003                     _STATUSbits	set	3
   508  0013                     _SSPBUF	set	19
   509  0014                     _SSPCON	set	20
   510  0008                     _PORTD	set	8
   511  0063                     _SSPIF	set	99
   512  0040                     _RD0	set	64
   513  0031                     _RB1	set	49
   514  0059                     _INTF	set	89
   515  005C                     _INTE	set	92
   516  005E                     _PEIE	set	94
   517  005F                     _GIE	set	95
   518  0093                     _SSPADD	set	147
   519  0094                     _SSPSTAT	set	148
   520  0091                     _SSPCON2	set	145
   521  0088                     _TRISD	set	136
   522  0086                     _TRISB	set	134
   523  048B                     _RCEN	set	1163
   524  048E                     _ACKSTAT	set	1166
   525  048C                     _ACKEN	set	1164
   526  048D                     _ACKDT	set	1165
   527  048A                     _PEN	set	1162
   528  0489                     _RSEN	set	1161
   529  0488                     _SEN	set	1160
   530  043C                     _TRISC4	set	1084
   531  043B                     _TRISC3	set	1083
   532  040F                     _nRBPU	set	1039
   533  010C                     _EEDATA	set	268
   534  010D                     _EEADR	set	269
   535  018D                     _EECON2	set	397
   536  018C                     _EECON1	set	396
   537  018C                     _EECON1bits	set	396
   538                           
   539                           	psect	cinit
   540  000F                     start_initialization:	
   541                           ; #config settings
   542                           
   543  000F                     __initialization:
   544                           
   545                           ; Initialize objects allocated to BANK1
   546  000F  1383               	bcf	3,7	;select IRP bank0
   547  0010  30B9               	movlw	low (__pdataBANK1+6)
   548  0011  00FD               	movwf	btemp+-1
   549  0012  3012               	movlw	high __pidataBANK1
   550  0013  00FE               	movwf	btemp
   551  0014  300B               	movlw	low __pidataBANK1
   552  0015  00FF               	movwf	btemp+1
   553  0016  30B3               	movlw	low __pdataBANK1
   554  0017  0084               	movwf	4
   555  0018  120A  158A  2005  120A  118A  	fcall	init_ram0
   556                           
   557                           ; Initialize objects allocated to BANK0
   558  001D  306D               	movlw	low (__pdataBANK0+5)
   559  001E  00FD               	movwf	btemp+-1
   560  001F  3012               	movlw	high __pidataBANK0
   561  0020  00FE               	movwf	btemp
   562  0021  3006               	movlw	low __pidataBANK0
   563  0022  00FF               	movwf	btemp+1
   564  0023  3068               	movlw	low __pdataBANK0
   565  0024  0084               	movwf	4
   566  0025  120A  158A  2005  120A  118A  	fcall	init_ram0
   567                           
   568                           ; Clear objects allocated to BANK1
   569  002A  30A0               	movlw	low __pbssBANK1
   570  002B  0084               	movwf	4
   571  002C  30B3               	movlw	low (__pbssBANK1+19)
   572  002D  160A  118A  2211  120A  118A  	fcall	clear_ram0
   573                           
   574                           ; Clear objects allocated to BANK0
   575  0032  3059               	movlw	low __pbssBANK0
   576  0033  0084               	movwf	4
   577  0034  3068               	movlw	low (__pbssBANK0+15)
   578  0035  160A  118A  2211  120A  118A  	fcall	clear_ram0
   579                           
   580                           ; Clear objects allocated to COMMON
   581  003A  01FA               	clrf	__pbssCOMMON& (0+127)
   582  003B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   583  003C                     end_of_initialization:	
   584                           ;End of C runtime variable initialization code
   585                           
   586  003C                     __end_of__initialization:
   587  003C  0183               	clrf	3
   588  003D  120A  158A  2BB0   	ljmp	_main	;jump to C main() function
   589                           
   590                           	psect	bssCOMMON
   591  007A                     __pbssCOMMON:
   592  007A                     _twelve_hundred:
   593  007A                     	ds	1
   594  007B                     _zero_six:
   595  007B                     	ds	1
   596                           
   597                           	psect	bssBANK0
   598  0059                     __pbssBANK0:
   599  0059                     _btn_press:
   600  0059                     	ds	4
   601  005D                     _rr:
   602  005D                     	ds	2
   603  005F                     _sec:
   604  005F                     	ds	2
   605  0061                     _RS:
   606  0061                     	ds	1
   607  0062                     _zero_zero:
   608  0062                     	ds	1
   609  0063                     _eighteen_hundred:
   610  0063                     	ds	1
   611  0064                     _button_press:
   612  0064                     	ds	1
   613  0065                     _flag2:
   614  0065                     	ds	1
   615  0066                     _flag1:
   616  0066                     	ds	1
   617  0067                     _flag:
   618  0067                     	ds	1
   619                           
   620                           	psect	dataBANK0
   621  0068                     __pdataBANK0:
   622  0068                     _hour:
   623  0068                     	ds	2
   624  006A                     _min:
   625  006A                     	ds	2
   626  006C                     _BackLight_State:
   627  006C                     	ds	1
   628                           
   629                           	psect	bssBANK1
   630  00A0                     __pbssBANK1:
   631  00A0                     ftoa@buf:
   632  00A0                     	ds	17
   633  00B1                     _status:
   634  00B1                     	ds	2
   635                           
   636                           	psect	dataBANK1
   637  00B3                     __pdataBANK1:
   638  00B3                     _year:
   639  00B3                     	ds	2
   640  00B5                     _month:
   641  00B5                     	ds	2
   642  00B7                     _date:
   643  00B7                     	ds	2
   644                           
   645                           	psect	inittext
   646  0801                     init_fetch0:	
   647                           ;	Called with low address in FSR and high address in W
   648                           
   649  0801  087E               	movf	btemp,w
   650  0802  008A               	movwf	10
   651  0803  087F               	movf	btemp+1,w
   652  0804  0082               	movwf	2
   653  0805                     init_ram0:	
   654                           ;Called with:
   655                           ;	high address of idata address in btemp 
   656                           ;	low address of idata address in btemp+1 
   657                           ;	low address of data in FSR
   658                           ;	high address + 1 of data in btemp-1
   659                           
   660  0805  120A  158A  2001  120A  158A  	fcall	init_fetch0
   661  080A  0080               	movwf	0
   662  080B  0A84               	incf	4,f
   663  080C  0804               	movf	4,w
   664  080D  067D               	xorwf	btemp+-1,w
   665  080E  1903               	btfsc	3,2
   666  080F  3400               	retlw	0
   667  0810  0AFF               	incf	btemp+1,f
   668  0811  1903               	btfsc	3,2
   669  0812  0AFE               	incf	btemp,f
   670  0813  2805               	goto	init_ram0
   671                           
   672                           	psect	clrtext
   673  1211                     clear_ram0:	
   674                           ;	Called with FSR containing the base address, and
   675                           ;	W with the last address+1
   676                           
   677  1211  0064               	clrwdt	;clear the watchdog before getting into this loop
   678  1212                     clrloop0:
   679  1212  0180               	clrf	0	;clear RAM location pointed to by FSR
   680  1213  0A84               	incf	4,f	;increment pointer
   681  1214  0604               	xorwf	4,w	;XOR with final address
   682  1215  1903               	btfsc	3,2	;have we reached the end yet?
   683  1216  3400               	retlw	0	;all done for this memory range, return
   684  1217  0604               	xorwf	4,w	;XOR again to restore value
   685  1218  2A12               	goto	clrloop0	;do the next byte
   686                           
   687                           	psect	cstackBANK1
   688  00B9                     __pcstackBANK1:
   689  00B9                     ??_main:
   690                           
   691                           ; 1 bytes @ 0x0
   692  00B9                     	ds	4
   693                           
   694                           	psect	cstackCOMMON
   695  0070                     __pcstackCOMMON:
   696  0070                     ?_isdigit:
   697  0070                     ?_I2C_Master_Start:	
   698                           ; 1 bit 
   699                           
   700  0070                     ?_I2C_Master_Write:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_I2C_Master_Stop:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_I2C_Master_Init:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_LCD_Init:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_write_x:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_reset:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_display_Time:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_eeprom_read:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_LCD_Write_Char:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_LCD_Write_F1:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_display_zero_six:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_display_twelve_hundred:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_display_eighteen_hundred:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_display_zero_zero:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_IO_Expander_Write:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_LCD_CMD:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_Update_Current_Date_Time:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_main:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_ISR_sample:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ??_ISR_sample:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_reset_eeprom:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_I2C_Master_Wait:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_LCD_Write_4Bit:	
   767                           ; 1 bytes @ 0x0
   768                           
   769                           
   770                           ; 1 bytes @ 0x0
   771  0070                     	ds	2
   772  0072                     ?___flge:
   773  0072                     ??_I2C_Master_Start:	
   774                           ; 1 bit 
   775                           
   776  0072                     ??_I2C_Master_Write:	
   777                           ; 1 bytes @ 0x2
   778                           
   779  0072                     ??_I2C_Master_Stop:	
   780                           ; 1 bytes @ 0x2
   781                           
   782  0072                     ??_I2C_Master_Init:	
   783                           ; 1 bytes @ 0x2
   784                           
   785  0072                     ?_eeprom_write:	
   786                           ; 1 bytes @ 0x2
   787                           
   788  0072                     ??_eeprom_read:	
   789                           ; 1 bytes @ 0x2
   790                           
   791  0072                     ??_isdigit:	
   792                           ; 1 bytes @ 0x2
   793                           
   794  0072                     ??_I2C_Master_Wait:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0072                     ?_I2C_Read:	
   798                           ; 1 bytes @ 0x2
   799                           
   800  0072                     ?__Umul8_16:	
   801                           ; 2 bytes @ 0x2
   802                           
   803  0072                     ?___wmul:	
   804                           ; 2 bytes @ 0x2
   805                           
   806  0072                     ?___awdiv:	
   807                           ; 2 bytes @ 0x2
   808                           
   809  0072                     ?___awmod:	
   810                           ; 2 bytes @ 0x2
   811                           
   812  0072                     ?___lldiv:	
   813                           ; 2 bytes @ 0x2
   814                           
   815  0072                     ?___flneg:	
   816                           ; 4 bytes @ 0x2
   817                           
   818  0072                     ?___fladd:	
   819                           ; 4 bytes @ 0x2
   820                           
   821  0072                     I2C_Master_Write@data:	
   822                           ; 4 bytes @ 0x2
   823                           
   824  0072                     eeprom_write@value:	
   825                           ; 1 bytes @ 0x2
   826                           
   827  0072                     __Umul8_16@multiplicand:	
   828                           ; 1 bytes @ 0x2
   829                           
   830  0072                     _isdigit$814:	
   831                           ; 1 bytes @ 0x2
   832                           
   833  0072                     I2C_Read@ack:	
   834                           ; 1 bytes @ 0x2
   835                           
   836  0072                     ___wmul@multiplier:	
   837                           ; 2 bytes @ 0x2
   838                           
   839  0072                     ___awdiv@divisor:	
   840                           ; 2 bytes @ 0x2
   841                           
   842  0072                     ___awmod@divisor:	
   843                           ; 2 bytes @ 0x2
   844                           
   845  0072                     ___lldiv@divisor:	
   846                           ; 2 bytes @ 0x2
   847                           
   848  0072                     ___flge@ff1:	
   849                           ; 4 bytes @ 0x2
   850                           
   851  0072                     ___flneg@f1:	
   852                           ; 4 bytes @ 0x2
   853                           
   854  0072                     ___fladd@b:	
   855                           ; 4 bytes @ 0x2
   856                           
   857                           
   858                           ; 4 bytes @ 0x2
   859  0072                     	ds	1
   860  0073                     ??_eeprom_write:
   861  0073                     ??_IO_Expander_Write:	
   862                           ; 1 bytes @ 0x3
   863                           
   864  0073                     IO_Expander_Write@Data:	
   865                           ; 1 bytes @ 0x3
   866                           
   867  0073                     eeprom_read@addr:	
   868                           ; 1 bytes @ 0x3
   869                           
   870  0073                     isdigit@c:	
   871                           ; 1 bytes @ 0x3
   872                           
   873                           
   874                           ; 1 bytes @ 0x3
   875  0073                     	ds	1
   876  0074                     ??_I2C_Read:
   877  0074                     ??__Umul8_16:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0074                     ??_LCD_Write_4Bit:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0074                     ?___xxtofl:	
   884                           ; 1 bytes @ 0x4
   885                           
   886  0074                     eeprom_write@addr:	
   887                           ; 4 bytes @ 0x4
   888                           
   889  0074                     ___wmul@multiplicand:	
   890                           ; 1 bytes @ 0x4
   891                           
   892  0074                     ___awdiv@dividend:	
   893                           ; 2 bytes @ 0x4
   894                           
   895  0074                     ___awmod@dividend:	
   896                           ; 2 bytes @ 0x4
   897                           
   898  0074                     ___xxtofl@val:	
   899                           ; 2 bytes @ 0x4
   900                           
   901                           
   902                           ; 4 bytes @ 0x4
   903  0074                     	ds	1
   904  0075                     ??_reset:
   905  0075                     ??_reset_eeprom:	
   906                           ; 1 bytes @ 0x5
   907                           
   908  0075                     LCD_Write_4Bit@Nibble:	
   909                           ; 1 bytes @ 0x5
   910                           
   911                           
   912                           ; 1 bytes @ 0x5
   913  0075                     	ds	1
   914  0076                     ??_LCD_Write_Char:
   915  0076                     ??_LCD_CMD:	
   916                           ; 1 bytes @ 0x6
   917                           
   918  0076                     ??___wmul:	
   919                           ; 1 bytes @ 0x6
   920                           
   921  0076                     ??___awdiv:	
   922                           ; 1 bytes @ 0x6
   923                           
   924  0076                     ??___awmod:	
   925                           ; 1 bytes @ 0x6
   926                           
   927  0076                     ??___flneg:	
   928                           ; 1 bytes @ 0x6
   929                           
   930  0076                     ___fltol@sign1:	
   931                           ; 1 bytes @ 0x6
   932                           
   933  0076                     reset_eeprom@i:	
   934                           ; 1 bytes @ 0x6
   935                           
   936  0076                     I2C_Read@incoming:	
   937                           ; 2 bytes @ 0x6
   938                           
   939  0076                     ___wmul@product:	
   940                           ; 2 bytes @ 0x6
   941                           
   942  0076                     ___lldiv@dividend:	
   943                           ; 2 bytes @ 0x6
   944                           
   945  0076                     ___flge@ff2:	
   946                           ; 4 bytes @ 0x6
   947                           
   948  0076                     ___fladd@a:	
   949                           ; 4 bytes @ 0x6
   950                           
   951                           
   952                           ; 4 bytes @ 0x6
   953  0076                     	ds	1
   954  0077                     LCD_CMD@CMD:
   955  0077                     LCD_Write_Char@Data:	
   956                           ; 1 bytes @ 0x7
   957                           
   958  0077                     ___awmod@counter:	
   959                           ; 1 bytes @ 0x7
   960                           
   961  0077                     ___fltol@exp1:	
   962                           ; 1 bytes @ 0x7
   963                           
   964                           
   965                           ; 1 bytes @ 0x7
   966  0077                     	ds	1
   967  0078                     ??_LCD_Init:
   968  0078                     ?_LCD_Set_Cursor:	
   969                           ; 1 bytes @ 0x8
   970                           
   971  0078                     ??_LCD_Write_F1:	
   972                           ; 1 bytes @ 0x8
   973                           
   974  0078                     ??_display_zero_six:	
   975                           ; 1 bytes @ 0x8
   976                           
   977  0078                     ??_display_twelve_hundred:	
   978                           ; 1 bytes @ 0x8
   979                           
   980  0078                     ??_display_eighteen_hundred:	
   981                           ; 1 bytes @ 0x8
   982                           
   983  0078                     ??_display_zero_zero:	
   984                           ; 1 bytes @ 0x8
   985                           
   986  0078                     ?_BCD_2_DEC:	
   987                           ; 1 bytes @ 0x8
   988                           
   989  0078                     LCD_Set_Cursor@COL:	
   990                           ; 2 bytes @ 0x8
   991                           
   992  0078                     ___awmod@sign:	
   993                           ; 1 bytes @ 0x8
   994                           
   995  0078                     BCD_2_DEC@to_convert:	
   996                           ; 1 bytes @ 0x8
   997                           
   998                           
   999                           ; 2 bytes @ 0x8
  1000  0078                     	ds	1
  1001  0079                     ??_LCD_Set_Cursor:
  1002  0079                     ??_display_Time:	
  1003                           ; 1 bytes @ 0x9
  1004                           
  1005  0079                     LCD_Set_Cursor@ROW:	
  1006                           ; 1 bytes @ 0x9
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x9
  1010  0079                     	ds	1
  1011  007A                     ??_Update_Current_Date_Time:
  1012  007A                     ??___flsub:	
  1013                           ; 1 bytes @ 0xA
  1014                           
  1015                           
  1016                           	psect	cstackBANK0
  1017  0020                     __pcstackBANK0:	
  1018                           ; 1 bytes @ 0xA
  1019                           
  1020  0020                     ??_write_x:
  1021  0020                     ??_BCD_2_DEC:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0020                     ??___lldiv:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0020                     ??___flge:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0020                     ??___fladd:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0020                     ??___xxtofl:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0020                     LCD_Init@I2C_Add:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0020                     LCD_Write_F1@Str:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0020                     ___awdiv@counter:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0020                     display_zero_six@i:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     display_twelve_hundred@i:	
  1049                           ; 2 bytes @ 0x0
  1050                           
  1051  0020                     display_eighteen_hundred@i:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054  0020                     display_zero_zero@i:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057  0020                     __Umul8_16@product:	
  1058                           ; 2 bytes @ 0x0
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x0
  1062  0020                     	ds	1
  1063  0021                     ___awdiv@sign:
  1064  0021                     LCD_Write_F1@i:	
  1065                           ; 1 bytes @ 0x1
  1066                           
  1067  0021                     ___lldiv@quotient:	
  1068                           ; 2 bytes @ 0x1
  1069                           
  1070                           
  1071                           ; 4 bytes @ 0x1
  1072  0021                     	ds	1
  1073  0022                     ___awdiv@quotient:
  1074  0022                     __Umul8_16@word_mpld:	
  1075                           ; 2 bytes @ 0x2
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x2
  1079  0022                     	ds	1
  1080  0023                     write_x@i:
  1081                           
  1082                           ; 2 bytes @ 0x3
  1083  0023                     	ds	1
  1084  0024                     display_Time@min_0:
  1085  0024                     __Umul8_16@multiplier:	
  1086                           ; 1 bytes @ 0x4
  1087                           
  1088  0024                     ___xxtofl@sign:	
  1089                           ; 1 bytes @ 0x4
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0x4
  1093  0024                     	ds	1
  1094  0025                     ?___flmul:
  1095  0025                     display_Time@min_1:	
  1096                           ; 4 bytes @ 0x5
  1097                           
  1098  0025                     ___lldiv@counter:	
  1099                           ; 1 bytes @ 0x5
  1100                           
  1101  0025                     ___xxtofl@exp:	
  1102                           ; 1 bytes @ 0x5
  1103                           
  1104  0025                     write_x@i_181:	
  1105                           ; 1 bytes @ 0x5
  1106                           
  1107  0025                     ___flmul@b:	
  1108                           ; 2 bytes @ 0x5
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x5
  1112  0025                     	ds	1
  1113  0026                     ?___llmod:
  1114  0026                     display_Time@hour_0:	
  1115                           ; 4 bytes @ 0x6
  1116                           
  1117  0026                     ___llmod@divisor:	
  1118                           ; 1 bytes @ 0x6
  1119                           
  1120  0026                     ___xxtofl@arg:	
  1121                           ; 4 bytes @ 0x6
  1122                           
  1123                           
  1124                           ; 4 bytes @ 0x6
  1125  0026                     	ds	1
  1126  0027                     display_Time@hour_1:
  1127  0027                     write_x@i_182:	
  1128                           ; 1 bytes @ 0x7
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0x7
  1132  0027                     	ds	1
  1133  0028                     ___fladd@signs:
  1134                           
  1135                           ; 1 bytes @ 0x8
  1136  0028                     	ds	1
  1137  0029                     ___fladd@aexp:
  1138  0029                     write_x@i_183:	
  1139                           ; 1 bytes @ 0x9
  1140                           
  1141  0029                     ___flmul@a:	
  1142                           ; 2 bytes @ 0x9
  1143                           
  1144                           
  1145                           ; 4 bytes @ 0x9
  1146  0029                     	ds	1
  1147  002A                     ___fladd@bexp:
  1148  002A                     ___llmod@dividend:	
  1149                           ; 1 bytes @ 0xA
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0xA
  1153  002A                     	ds	1
  1154  002B                     ___fladd@grs:
  1155                           
  1156                           ; 1 bytes @ 0xB
  1157  002B                     	ds	1
  1158  002C                     ?___fleq:
  1159  002C                     ?___flsub:	
  1160                           ; 1 bit 
  1161                           
  1162  002C                     ___fleq@ff1:	
  1163                           ; 4 bytes @ 0xC
  1164                           
  1165  002C                     ___flsub@a:	
  1166                           ; 4 bytes @ 0xC
  1167                           
  1168                           
  1169                           ; 4 bytes @ 0xC
  1170  002C                     	ds	1
  1171  002D                     ??___flmul:
  1172                           
  1173                           ; 1 bytes @ 0xD
  1174  002D                     	ds	1
  1175  002E                     ??___llmod:
  1176                           
  1177                           ; 1 bytes @ 0xE
  1178  002E                     	ds	1
  1179  002F                     ___llmod@counter:
  1180                           
  1181                           ; 1 bytes @ 0xF
  1182  002F                     	ds	1
  1183  0030                     ?_sprintf:
  1184  0030                     sprintf@f:	
  1185                           ; 2 bytes @ 0x10
  1186                           
  1187  0030                     ___fleq@ff2:	
  1188                           ; 1 bytes @ 0x10
  1189                           
  1190  0030                     ___flsub@b:	
  1191                           ; 4 bytes @ 0x10
  1192                           
  1193                           
  1194                           ; 4 bytes @ 0x10
  1195  0030                     	ds	2
  1196  0032                     ___flmul@sign:
  1197                           
  1198                           ; 1 bytes @ 0x12
  1199  0032                     	ds	1
  1200  0033                     ___flmul@aexp:
  1201                           
  1202                           ; 1 bytes @ 0x13
  1203  0033                     	ds	1
  1204  0034                     ??___fleq:
  1205  0034                     ___flmul@grs:	
  1206                           ; 1 bytes @ 0x14
  1207                           
  1208                           
  1209                           ; 4 bytes @ 0x14
  1210  0034                     	ds	4
  1211  0038                     ___flmul@bexp:
  1212                           
  1213                           ; 1 bytes @ 0x18
  1214  0038                     	ds	1
  1215  0039                     ??_sprintf:
  1216  0039                     ___flmul@prod:	
  1217                           ; 1 bytes @ 0x19
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x19
  1221  0039                     	ds	4
  1222  003D                     ___flmul@temp:
  1223                           
  1224                           ; 2 bytes @ 0x1D
  1225  003D                     	ds	1
  1226  003E                     sprintf@flag:
  1227                           
  1228                           ; 1 bytes @ 0x1E
  1229  003E                     	ds	1
  1230  003F                     ?___fltol:
  1231  003F                     sprintf@ap:	
  1232                           ; 4 bytes @ 0x1F
  1233                           
  1234  003F                     ___fltol@f1:	
  1235                           ; 1 bytes @ 0x1F
  1236                           
  1237                           
  1238                           ; 4 bytes @ 0x1F
  1239  003F                     	ds	1
  1240  0040                     sprintf@val:
  1241                           
  1242                           ; 4 bytes @ 0x20
  1243  0040                     	ds	3
  1244  0043                     ??___fltol:
  1245                           
  1246                           ; 1 bytes @ 0x23
  1247  0043                     	ds	1
  1248  0044                     sprintf@sp:
  1249                           
  1250                           ; 1 bytes @ 0x24
  1251  0044                     	ds	1
  1252  0045                     sprintf@width:
  1253                           
  1254                           ; 2 bytes @ 0x25
  1255  0045                     	ds	2
  1256  0047                     sprintf@prec:
  1257                           
  1258                           ; 2 bytes @ 0x27
  1259  0047                     	ds	2
  1260  0049                     sprintf@c:
  1261                           
  1262                           ; 1 bytes @ 0x29
  1263  0049                     	ds	1
  1264  004A                     ?_ftoa:
  1265  004A                     ftoa@f:	
  1266                           ; 1 bytes @ 0x2A
  1267                           
  1268                           
  1269                           ; 4 bytes @ 0x2A
  1270  004A                     	ds	4
  1271  004E                     ftoa@status:
  1272                           
  1273                           ; 1 bytes @ 0x2E
  1274  004E                     	ds	1
  1275  004F                     ??_ftoa:
  1276                           
  1277                           ; 1 bytes @ 0x2F
  1278  004F                     	ds	1
  1279  0050                     ftoa@rem:
  1280                           
  1281                           ; 4 bytes @ 0x30
  1282  0050                     	ds	4
  1283  0054                     ftoa@l:
  1284                           
  1285                           ; 4 bytes @ 0x34
  1286  0054                     	ds	4
  1287  0058                     ftoa@cp:
  1288                           
  1289                           ; 1 bytes @ 0x38
  1290  0058                     	ds	1
  1291                           
  1292                           	psect	maintext
  1293  0BB0                     __pmaintext:	
  1294 ;;
  1295 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1296 ;;
  1297 ;; *************** function _main *****************
  1298 ;; Defined at:
  1299 ;;		line 50 in file "rg_877a.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : B00/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0
  1315 ;;      Temps:          0       0       4       0       0
  1316 ;;      Totals:         0       0       4       0       0
  1317 ;;Total ram usage:        4 bytes
  1318 ;; Hardware stack levels required when called: 7
  1319 ;; This function calls:
  1320 ;;		_I2C_Master_Init
  1321 ;;		_LCD_Init
  1322 ;;		_LCD_Set_Cursor
  1323 ;;		_LCD_Write_Char
  1324 ;;		_LCD_Write_F1
  1325 ;;		_Update_Current_Date_Time
  1326 ;;		___fladd
  1327 ;;		___fleq
  1328 ;;		___fltol
  1329 ;;		___xxtofl
  1330 ;;		_display_Time
  1331 ;;		_display_eighteen_hundred
  1332 ;;		_display_twelve_hundred
  1333 ;;		_display_zero_six
  1334 ;;		_display_zero_zero
  1335 ;;		_eeprom_read
  1336 ;;		_eeprom_write
  1337 ;;		_ftoa
  1338 ;;		_reset
  1339 ;;		_write_x
  1340 ;; This function is called by:
  1341 ;;		Startup code after reset
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _main
  1347  0BB0                     _main:
  1348  0BB0                     l4316:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1351                           
  1352                           
  1353                           ;rg_877a.c: 51: TRISB = 0xFF;
  1354  0BB0  30FF               	movlw	255
  1355  0BB1  1683               	bsf	3,5	;RP0=1, select bank1
  1356  0BB2  1303               	bcf	3,6	;RP1=0, select bank1
  1357  0BB3  0086               	movwf	6	;volatile
  1358  0BB4                     l4318:
  1359                           
  1360                           ;rg_877a.c: 52: TRISD = 0x00;
  1361  0BB4  0188               	clrf	8	;volatile
  1362  0BB5                     l4320:
  1363                           
  1364                           ;rg_877a.c: 54: PORTD = 0x00;
  1365  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0BB7  0188               	clrf	8	;volatile
  1368  0BB8                     l4322:
  1369                           
  1370                           ;rg_877a.c: 56: nRBPU = 0;
  1371  0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  1372  0BB9  1303               	bcf	3,6	;RP1=0, select bank1
  1373  0BBA  1381               	bcf	1,7	;volatile
  1374  0BBB                     l4324:
  1375                           
  1376                           ;rg_877a.c: 57: GIE = 1;
  1377  0BBB  178B               	bsf	11,7	;volatile
  1378  0BBC                     l4326:
  1379                           
  1380                           ;rg_877a.c: 58: PEIE = 1;
  1381  0BBC  170B               	bsf	11,6	;volatile
  1382  0BBD                     l4328:
  1383                           
  1384                           ;rg_877a.c: 59: INTE = 1;
  1385  0BBD  160B               	bsf	11,4	;volatile
  1386  0BBE                     l4330:
  1387                           
  1388                           ;rg_877a.c: 60: INTF = 0;
  1389  0BBE  108B               	bcf	11,1	;volatile
  1390  0BBF                     l4332:
  1391                           
  1392                           ;rg_877a.c: 61: flag = 0;
  1393  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  1395  0BC1  01E7               	clrf	_flag
  1396  0BC2                     l4334:
  1397                           
  1398                           ;rg_877a.c: 63: I2C_Master_Init();
  1399  0BC2  160A  118A  2236  120A  158A  	fcall	_I2C_Master_Init
  1400  0BC7                     l4336:
  1401                           
  1402                           ;rg_877a.c: 64: LCD_Init(0x4E);
  1403  0BC7  304E               	movlw	78
  1404  0BC8  120A  158A  2014  120A  158A  	fcall	_LCD_Init
  1405  0BCD                     l4338:
  1406                           
  1407                           ;rg_877a.c: 70: Update_Current_Date_Time();
  1408  0BCD  120A  158A  22D7  120A  158A  	fcall	_Update_Current_Date_Time
  1409  0BD2                     l4340:
  1410                           
  1411                           ;rg_877a.c: 73: write_x();
  1412  0BD2  120A  118A  2629  120A  158A  	fcall	_write_x
  1413  0BD7                     l4342:
  1414                           
  1415                           ;rg_877a.c: 74: flag1 = 1;
  1416  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0BD9  01E6               	clrf	_flag1
  1419  0BDA  0AE6               	incf	_flag1,f
  1420  0BDB                     l4344:
  1421                           
  1422                           ;rg_877a.c: 75: flag2 = 0;
  1423  0BDB  01E5               	clrf	_flag2
  1424  0BDC                     l4346:
  1425                           
  1426                           ;rg_877a.c: 77: if(RB1 == 0) reset();
  1427  0BDC  1886               	btfsc	6,1	;volatile
  1428  0BDD  2BDF               	goto	u6021
  1429  0BDE  2BE0               	goto	u6020
  1430  0BDF                     u6021:
  1431  0BDF  2BE5               	goto	l4350
  1432  0BE0                     u6020:
  1433  0BE0                     l4348:
  1434  0BE0  160A  118A  23BD  120A  158A  	fcall	_reset
  1435  0BE5                     l4350:
  1436                           
  1437                           ;rg_877a.c: 79: if(flag == 1){
  1438  0BE5  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0BE7  0367               	decf	_flag,w
  1441  0BE8  1D03               	btfss	3,2
  1442  0BE9  2BEB               	goto	u6031
  1443  0BEA  2BEC               	goto	u6030
  1444  0BEB                     u6031:
  1445  0BEB  2CA9               	goto	l4378
  1446  0BEC                     u6030:
  1447  0BEC                     l4352:
  1448                           
  1449                           ;rg_877a.c: 80: RD0 = 1;
  1450  0BEC  1408               	bsf	8,0	;volatile
  1451  0BED                     l4354:
  1452                           
  1453                           ;rg_877a.c: 81: btn_press += 0.5;
  1454  0BED  303F               	movlw	63
  1455  0BEE  00F5               	movwf	___fladd@b+3
  1456  0BEF  3000               	movlw	0
  1457  0BF0  00F4               	movwf	___fladd@b+2
  1458  0BF1  3000               	movlw	0
  1459  0BF2  00F3               	movwf	___fladd@b+1
  1460  0BF3  3000               	movlw	0
  1461  0BF4  00F2               	movwf	___fladd@b
  1462  0BF5  085C               	movf	_btn_press+3,w
  1463  0BF6  00F9               	movwf	___fladd@a+3
  1464  0BF7  085B               	movf	_btn_press+2,w
  1465  0BF8  00F8               	movwf	___fladd@a+2
  1466  0BF9  085A               	movf	_btn_press+1,w
  1467  0BFA  00F7               	movwf	___fladd@a+1
  1468  0BFB  0859               	movf	_btn_press,w
  1469  0BFC  00F6               	movwf	___fladd@a
  1470  0BFD  120A  118A  23A1  120A  158A  	fcall	___fladd
  1471  0C02  0875               	movf	?___fladd+3,w
  1472  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0C05  00DC               	movwf	_btn_press+3
  1475  0C06  0874               	movf	?___fladd+2,w
  1476  0C07  00DB               	movwf	_btn_press+2
  1477  0C08  0873               	movf	?___fladd+1,w
  1478  0C09  00DA               	movwf	_btn_press+1
  1479  0C0A  0872               	movf	?___fladd,w
  1480  0C0B  00D9               	movwf	_btn_press
  1481  0C0C                     l4356:
  1482                           
  1483                           ;rg_877a.c: 82: rr = (int)btn_press;
  1484  0C0C  085C               	movf	_btn_press+3,w
  1485  0C0D  00C2               	movwf	___fltol@f1+3
  1486  0C0E  085B               	movf	_btn_press+2,w
  1487  0C0F  00C1               	movwf	___fltol@f1+2
  1488  0C10  085A               	movf	_btn_press+1,w
  1489  0C11  00C0               	movwf	___fltol@f1+1
  1490  0C12  0859               	movf	_btn_press,w
  1491  0C13  00BF               	movwf	___fltol@f1
  1492  0C14  160A  118A  2784  120A  158A  	fcall	___fltol
  1493  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0C1B  0840               	movf	?___fltol+1,w
  1496  0C1C  00DE               	movwf	_rr+1
  1497  0C1D  083F               	movf	?___fltol,w
  1498  0C1E  00DD               	movwf	_rr
  1499  0C1F                     l4358:
  1500                           
  1501                           ;rg_877a.c: 83: if(btn_press-0.5 != rr) flag1 = 0;
  1502  0C1F  085C               	movf	_btn_press+3,w
  1503  0C20  00F9               	movwf	___fladd@a+3
  1504  0C21  085B               	movf	_btn_press+2,w
  1505  0C22  00F8               	movwf	___fladd@a+2
  1506  0C23  085A               	movf	_btn_press+1,w
  1507  0C24  00F7               	movwf	___fladd@a+1
  1508  0C25  0859               	movf	_btn_press,w
  1509  0C26  00F6               	movwf	___fladd@a
  1510  0C27  30BF               	movlw	191
  1511  0C28  00F5               	movwf	___fladd@b+3
  1512  0C29  3000               	movlw	0
  1513  0C2A  00F4               	movwf	___fladd@b+2
  1514  0C2B  3000               	movlw	0
  1515  0C2C  00F3               	movwf	___fladd@b+1
  1516  0C2D  3000               	movlw	0
  1517  0C2E  00F2               	movwf	___fladd@b
  1518  0C2F  120A  118A  23A1  120A  158A  	fcall	___fladd
  1519  0C34  0875               	movf	?___fladd+3,w
  1520  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0C37  00AF               	movwf	___fleq@ff1+3
  1523  0C38  0874               	movf	?___fladd+2,w
  1524  0C39  00AE               	movwf	___fleq@ff1+2
  1525  0C3A  0873               	movf	?___fladd+1,w
  1526  0C3B  00AD               	movwf	___fleq@ff1+1
  1527  0C3C  0872               	movf	?___fladd,w
  1528  0C3D  00AC               	movwf	___fleq@ff1
  1529  0C3E  085D               	movf	_rr,w
  1530  0C3F  00F4               	movwf	___xxtofl@val
  1531  0C40  085E               	movf	_rr+1,w
  1532  0C41  00F5               	movwf	___xxtofl@val+1
  1533  0C42  3000               	movlw	0
  1534  0C43  1BF5               	btfsc	___xxtofl@val+1,7
  1535  0C44  30FF               	movlw	255
  1536  0C45  00F6               	movwf	___xxtofl@val+2
  1537  0C46  00F7               	movwf	___xxtofl@val+3
  1538  0C47  3001               	movlw	1
  1539  0C48  120A  158A  2146  120A  158A  	fcall	___xxtofl
  1540  0C4D  0877               	movf	?___xxtofl+3,w
  1541  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0C4F  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0C50  00B3               	movwf	___fleq@ff2+3
  1544  0C51  0876               	movf	?___xxtofl+2,w
  1545  0C52  00B2               	movwf	___fleq@ff2+2
  1546  0C53  0875               	movf	?___xxtofl+1,w
  1547  0C54  00B1               	movwf	___fleq@ff2+1
  1548  0C55  0874               	movf	?___xxtofl,w
  1549  0C56  00B0               	movwf	___fleq@ff2
  1550  0C57  160A  118A  25B4  120A  158A  	fcall	___fleq
  1551  0C5C  1803               	btfsc	3,0
  1552  0C5D  2C5F               	goto	u6041
  1553  0C5E  2C60               	goto	u6040
  1554  0C5F                     u6041:
  1555  0C5F  2C63               	goto	l4362
  1556  0C60                     u6040:
  1557  0C60                     l4360:
  1558  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0C62  01E6               	clrf	_flag1
  1561  0C63                     l4362:
  1562                           
  1563                           ;rg_877a.c: 84: eeprom_write(0, rr);
  1564  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0C65  085D               	movf	_rr,w
  1567  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0C68  00B9               	movwf	??_main^(0+128)
  1570  0C69  0839               	movf	??_main^(0+128),w
  1571  0C6A  00F2               	movwf	eeprom_write@value
  1572  0C6B  3000               	movlw	0
  1573  0C6C  160A  118A  2414  120A  158A  	fcall	_eeprom_write
  1574  0C71                     l4364:
  1575                           
  1576                           ;rg_877a.c: 85: eeprom_write(1, flag1);
  1577  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0C73  0866               	movf	_flag1,w
  1580  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  1581  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  1582  0C76  00B9               	movwf	??_main^(0+128)
  1583  0C77  0839               	movf	??_main^(0+128),w
  1584  0C78  00F2               	movwf	eeprom_write@value
  1585  0C79  3001               	movlw	1
  1586  0C7A  160A  118A  2414  120A  158A  	fcall	_eeprom_write
  1587  0C7F                     l4366:
  1588                           
  1589                           ;rg_877a.c: 86: eeprom_write(2, flag2);
  1590  0C7F  01F2               	clrf	eeprom_write@value
  1591  0C80  3002               	movlw	2
  1592  0C81  160A  118A  2414  120A  158A  	fcall	_eeprom_write
  1593  0C86                     l4368:
  1594                           
  1595                           ;rg_877a.c: 87: LCD_Set_Cursor(1, 9);
  1596  0C86  3009               	movlw	9
  1597  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0C89  00B9               	movwf	??_main^(0+128)
  1600  0C8A  0839               	movf	??_main^(0+128),w
  1601  0C8B  00F8               	movwf	LCD_Set_Cursor@COL
  1602  0C8C  3001               	movlw	1
  1603  0C8D  160A  118A  2441  120A  158A  	fcall	_LCD_Set_Cursor
  1604  0C92                     l4370:
  1605                           
  1606                           ;rg_877a.c: 88: display_Time();
  1607  0C92  120A  118A  275E  120A  158A  	fcall	_display_Time
  1608  0C97                     l4372:
  1609                           
  1610                           ;rg_877a.c: 89: _delay((unsigned long)((250)*(8000000/4000.0)));
  1611  0C97  3003               	movlw	3
  1612  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0C9A  00BB               	movwf	(??_main^(0+128)+2)
  1615  0C9B  308A               	movlw	138
  1616  0C9C  00BA               	movwf	(??_main^(0+128)+1)
  1617  0C9D  3055               	movlw	85
  1618  0C9E  00B9               	movwf	??_main^(0+128)
  1619  0C9F                     u6127:
  1620  0C9F  0BB9               	decfsz	??_main^(0+128),f
  1621  0CA0  2C9F               	goto	u6127
  1622  0CA1  0BBA               	decfsz	(??_main^(0+128)+1),f
  1623  0CA2  2C9F               	goto	u6127
  1624  0CA3  0BBB               	decfsz	(??_main^(0+128)+2),f
  1625  0CA4  2C9F               	goto	u6127
  1626  0CA5                     l4374:
  1627                           
  1628                           ;rg_877a.c: 90: RD0 = 0;
  1629  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  1630  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0CA7  1008               	bcf	8,0	;volatile
  1632  0CA8                     l4376:
  1633                           
  1634                           ;rg_877a.c: 91: flag = 0;
  1635  0CA8  01E7               	clrf	_flag
  1636  0CA9                     l4378:
  1637                           
  1638                           ;rg_877a.c: 93: };rg_877a.c: 96: btn_press = eeprom_read(0);
  1639  0CA9  3000               	movlw	0
  1640  0CAA  160A  118A  2272  120A  158A  	fcall	_eeprom_read
  1641  0CAF  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0CB0  1303               	bcf	3,6	;RP1=0, select bank1
  1643  0CB1  00B9               	movwf	??_main^(0+128)
  1644  0CB2  01BA               	clrf	(??_main^(0+128)+1)
  1645  0CB3  01BB               	clrf	(??_main^(0+128)+2)
  1646  0CB4  01BC               	clrf	(??_main^(0+128)+3)
  1647  0CB5  083C               	movf	(??_main+3)^(0+128),w
  1648  0CB6  00F7               	movwf	___xxtofl@val+3
  1649  0CB7  083B               	movf	(??_main+2)^(0+128),w
  1650  0CB8  00F6               	movwf	___xxtofl@val+2
  1651  0CB9  083A               	movf	(??_main+1)^(0+128),w
  1652  0CBA  00F5               	movwf	___xxtofl@val+1
  1653  0CBB  0839               	movf	??_main^(0+128),w
  1654  0CBC  00F4               	movwf	___xxtofl@val
  1655  0CBD  3000               	movlw	0
  1656  0CBE  120A  158A  2146  120A  158A  	fcall	___xxtofl
  1657  0CC3  0877               	movf	?___xxtofl+3,w
  1658  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0CC6  00DC               	movwf	_btn_press+3
  1661  0CC7  0876               	movf	?___xxtofl+2,w
  1662  0CC8  00DB               	movwf	_btn_press+2
  1663  0CC9  0875               	movf	?___xxtofl+1,w
  1664  0CCA  00DA               	movwf	_btn_press+1
  1665  0CCB  0874               	movf	?___xxtofl,w
  1666  0CCC  00D9               	movwf	_btn_press
  1667  0CCD                     l4380:
  1668                           
  1669                           ;rg_877a.c: 97: flag1 = eeprom_read(1);
  1670  0CCD  3001               	movlw	1
  1671  0CCE  160A  118A  2272  120A  158A  	fcall	_eeprom_read
  1672  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  1674  0CD5  00B9               	movwf	??_main^(0+128)
  1675  0CD6  0839               	movf	??_main^(0+128),w
  1676  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0CD9  00E6               	movwf	_flag1
  1679  0CDA                     l4382:
  1680                           
  1681                           ;rg_877a.c: 98: flag2 = eeprom_read(2);
  1682  0CDA  3002               	movlw	2
  1683  0CDB  160A  118A  2272  120A  158A  	fcall	_eeprom_read
  1684  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0CE2  00B9               	movwf	??_main^(0+128)
  1687  0CE3  0839               	movf	??_main^(0+128),w
  1688  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0CE6  00E5               	movwf	_flag2
  1691  0CE7                     l4384:
  1692                           
  1693                           ;rg_877a.c: 100: if(flag1 == 1 && flag2 == 0) btn_press += 0.5;
  1694  0CE7  0366               	decf	_flag1,w
  1695  0CE8  1D03               	btfss	3,2
  1696  0CE9  2CEB               	goto	u6051
  1697  0CEA  2CEC               	goto	u6050
  1698  0CEB                     u6051:
  1699  0CEB  2D10               	goto	l4390
  1700  0CEC                     u6050:
  1701  0CEC                     l4386:
  1702  0CEC  0865               	movf	_flag2,w
  1703  0CED  1D03               	btfss	3,2
  1704  0CEE  2CF0               	goto	u6061
  1705  0CEF  2CF1               	goto	u6060
  1706  0CF0                     u6061:
  1707  0CF0  2D10               	goto	l4390
  1708  0CF1                     u6060:
  1709  0CF1                     l4388:
  1710  0CF1  303F               	movlw	63
  1711  0CF2  00F5               	movwf	___fladd@b+3
  1712  0CF3  3000               	movlw	0
  1713  0CF4  00F4               	movwf	___fladd@b+2
  1714  0CF5  3000               	movlw	0
  1715  0CF6  00F3               	movwf	___fladd@b+1
  1716  0CF7  3000               	movlw	0
  1717  0CF8  00F2               	movwf	___fladd@b
  1718  0CF9  085C               	movf	_btn_press+3,w
  1719  0CFA  00F9               	movwf	___fladd@a+3
  1720  0CFB  085B               	movf	_btn_press+2,w
  1721  0CFC  00F8               	movwf	___fladd@a+2
  1722  0CFD  085A               	movf	_btn_press+1,w
  1723  0CFE  00F7               	movwf	___fladd@a+1
  1724  0CFF  0859               	movf	_btn_press,w
  1725  0D00  00F6               	movwf	___fladd@a
  1726  0D01  120A  118A  23A1  120A  158A  	fcall	___fladd
  1727  0D06  0875               	movf	?___fladd+3,w
  1728  0D07  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0D08  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0D09  00DC               	movwf	_btn_press+3
  1731  0D0A  0874               	movf	?___fladd+2,w
  1732  0D0B  00DB               	movwf	_btn_press+2
  1733  0D0C  0873               	movf	?___fladd+1,w
  1734  0D0D  00DA               	movwf	_btn_press+1
  1735  0D0E  0872               	movf	?___fladd,w
  1736  0D0F  00D9               	movwf	_btn_press
  1737  0D10                     l4390:
  1738                           
  1739                           ;rg_877a.c: 102: button_press = ftoa(btn_press, &status);
  1740  0D10  085C               	movf	_btn_press+3,w
  1741  0D11  00CD               	movwf	ftoa@f+3
  1742  0D12  085B               	movf	_btn_press+2,w
  1743  0D13  00CC               	movwf	ftoa@f+2
  1744  0D14  085A               	movf	_btn_press+1,w
  1745  0D15  00CB               	movwf	ftoa@f+1
  1746  0D16  0859               	movf	_btn_press,w
  1747  0D17  00CA               	movwf	ftoa@f
  1748  0D18  30B1               	movlw	(low (_status| 0))& (0+255)
  1749  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  1750  0D1A  1303               	bcf	3,6	;RP1=0, select bank1
  1751  0D1B  00B9               	movwf	??_main^(0+128)
  1752  0D1C  0839               	movf	??_main^(0+128),w
  1753  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0D1F  00CE               	movwf	ftoa@status
  1756  0D20  120A  158A  2202  120A  158A  	fcall	_ftoa
  1757  0D25  1683               	bsf	3,5	;RP0=1, select bank1
  1758  0D26  1303               	bcf	3,6	;RP1=0, select bank1
  1759  0D27  00BA               	movwf	(??_main+1)^(0+128)
  1760  0D28  083A               	movf	(??_main+1)^(0+128),w
  1761  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0D2B  00E4               	movwf	_button_press
  1764  0D2C                     l4392:
  1765                           
  1766                           ;rg_877a.c: 104: LCD_Set_Cursor(1, 1);
  1767  0D2C  01F8               	clrf	LCD_Set_Cursor@COL
  1768  0D2D  0AF8               	incf	LCD_Set_Cursor@COL,f
  1769  0D2E  3001               	movlw	1
  1770  0D2F  160A  118A  2441  120A  158A  	fcall	_LCD_Set_Cursor
  1771                           
  1772                           ;rg_877a.c: 105: LCD_Write_Char(67);
  1773  0D34  3043               	movlw	67
  1774  0D35  160A  118A  22DC  120A  158A  	fcall	_LCD_Write_Char
  1775                           
  1776                           ;rg_877a.c: 106: LCD_Write_Char(45);
  1777  0D3A  302D               	movlw	45
  1778  0D3B  160A  118A  22DC  120A  158A  	fcall	_LCD_Write_Char
  1779  0D40                     l4394:
  1780                           
  1781                           ;rg_877a.c: 107: LCD_Write_F1(button_press);
  1782  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0D42  0864               	movf	_button_press,w
  1785  0D43  160A  118A  2342  120A  158A  	fcall	_LCD_Write_F1
  1786  0D48                     l4396:
  1787                           
  1788                           ;rg_877a.c: 109: LCD_Set_Cursor(2, 16);
  1789  0D48  3010               	movlw	16
  1790  0D49  1683               	bsf	3,5	;RP0=1, select bank1
  1791  0D4A  1303               	bcf	3,6	;RP1=0, select bank1
  1792  0D4B  00B9               	movwf	??_main^(0+128)
  1793  0D4C  0839               	movf	??_main^(0+128),w
  1794  0D4D  00F8               	movwf	LCD_Set_Cursor@COL
  1795  0D4E  3002               	movlw	2
  1796  0D4F  160A  118A  2441  120A  158A  	fcall	_LCD_Set_Cursor
  1797  0D54                     l4398:
  1798                           
  1799                           ;rg_877a.c: 110: LCD_Write_Char(80);
  1800  0D54  3050               	movlw	80
  1801  0D55  160A  118A  22DC  120A  158A  	fcall	_LCD_Write_Char
  1802  0D5A                     l4400:
  1803                           
  1804                           ;rg_877a.c: 112: LCD_Set_Cursor(2, 5);
  1805  0D5A  3005               	movlw	5
  1806  0D5B  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0D5C  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0D5D  00B9               	movwf	??_main^(0+128)
  1809  0D5E  0839               	movf	??_main^(0+128),w
  1810  0D5F  00F8               	movwf	LCD_Set_Cursor@COL
  1811  0D60  3002               	movlw	2
  1812  0D61  160A  118A  2441  120A  158A  	fcall	_LCD_Set_Cursor
  1813  0D66                     l4402:
  1814                           
  1815                           ;rg_877a.c: 113: if(sec<=15){
  1816  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0D68  0860               	movf	_sec+1,w
  1819  0D69  3A80               	xorlw	128
  1820  0D6A  00FF               	movwf	btemp+1
  1821  0D6B  3080               	movlw	128
  1822  0D6C  027F               	subwf	btemp+1,w
  1823  0D6D  1D03               	skipz
  1824  0D6E  2D71               	goto	u6075
  1825  0D6F  3010               	movlw	16
  1826  0D70  025F               	subwf	_sec,w
  1827  0D71                     u6075:
  1828  0D71  1803               	skipnc
  1829  0D72  2D74               	goto	u6071
  1830  0D73  2D75               	goto	u6070
  1831  0D74                     u6071:
  1832  0D74  2D7B               	goto	l4406
  1833  0D75                     u6070:
  1834  0D75                     l4404:
  1835                           
  1836                           ;rg_877a.c: 114: display_zero_six();
  1837  0D75  160A  118A  24AD  120A  158A  	fcall	_display_zero_six
  1838                           
  1839                           ;rg_877a.c: 115: }
  1840  0D7A  2DAA               	goto	l4416
  1841  0D7B                     l4406:
  1842                           
  1843                           ;rg_877a.c: 116: else if(sec<=30){
  1844  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0D7D  0860               	movf	_sec+1,w
  1847  0D7E  3A80               	xorlw	128
  1848  0D7F  00FF               	movwf	btemp+1
  1849  0D80  3080               	movlw	128
  1850  0D81  027F               	subwf	btemp+1,w
  1851  0D82  1D03               	skipz
  1852  0D83  2D86               	goto	u6085
  1853  0D84  301F               	movlw	31
  1854  0D85  025F               	subwf	_sec,w
  1855  0D86                     u6085:
  1856  0D86  1803               	skipnc
  1857  0D87  2D89               	goto	u6081
  1858  0D88  2D8A               	goto	u6080
  1859  0D89                     u6081:
  1860  0D89  2D90               	goto	l4410
  1861  0D8A                     u6080:
  1862  0D8A                     l4408:
  1863                           
  1864                           ;rg_877a.c: 117: display_twelve_hundred();
  1865  0D8A  160A  118A  246F  120A  158A  	fcall	_display_twelve_hundred
  1866                           
  1867                           ;rg_877a.c: 118: }
  1868  0D8F  2DAA               	goto	l4416
  1869  0D90                     l4410:
  1870                           
  1871                           ;rg_877a.c: 119: else if(sec<=45){
  1872  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0D92  0860               	movf	_sec+1,w
  1875  0D93  3A80               	xorlw	128
  1876  0D94  00FF               	movwf	btemp+1
  1877  0D95  3080               	movlw	128
  1878  0D96  027F               	subwf	btemp+1,w
  1879  0D97  1D03               	skipz
  1880  0D98  2D9B               	goto	u6095
  1881  0D99  302E               	movlw	46
  1882  0D9A  025F               	subwf	_sec,w
  1883  0D9B                     u6095:
  1884  0D9B  1803               	skipnc
  1885  0D9C  2D9E               	goto	u6091
  1886  0D9D  2D9F               	goto	u6090
  1887  0D9E                     u6091:
  1888  0D9E  2DA5               	goto	l4414
  1889  0D9F                     u6090:
  1890  0D9F                     l4412:
  1891                           
  1892                           ;rg_877a.c: 120: display_eighteen_hundred();
  1893  0D9F  160A  118A  24EB  120A  158A  	fcall	_display_eighteen_hundred
  1894                           
  1895                           ;rg_877a.c: 121: }
  1896  0DA4  2DAA               	goto	l4416
  1897  0DA5                     l4414:
  1898                           
  1899                           ;rg_877a.c: 122: else{;rg_877a.c: 123: display_zero_zero();
  1900  0DA5  160A  118A  252B  120A  158A  	fcall	_display_zero_zero
  1901  0DAA                     l4416:
  1902                           
  1903                           ;rg_877a.c: 124: };rg_877a.c: 125: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1904  0DAA  300B               	movlw	11
  1905  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  1907  0DAD  00BB               	movwf	(??_main^(0+128)+2)
  1908  0DAE  3026               	movlw	38
  1909  0DAF  00BA               	movwf	(??_main^(0+128)+1)
  1910  0DB0  305D               	movlw	93
  1911  0DB1  00B9               	movwf	??_main^(0+128)
  1912  0DB2                     u6137:
  1913  0DB2  0BB9               	decfsz	??_main^(0+128),f
  1914  0DB3  2DB2               	goto	u6137
  1915  0DB4  0BBA               	decfsz	(??_main^(0+128)+1),f
  1916  0DB5  2DB2               	goto	u6137
  1917  0DB6  0BBB               	decfsz	(??_main^(0+128)+2),f
  1918  0DB7  2DB2               	goto	u6137
  1919  0DB8  2BCD               	goto	l4338
  1920  0DB9  120A  118A  280C   	ljmp	start
  1921  0DBC                     __end_of_main:
  1922                           
  1923                           	psect	text1
  1924  0629                     __ptext1:	
  1925 ;; *************** function _write_x *****************
  1926 ;; Defined at:
  1927 ;;		line 228 in file "rg_877a.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  i               2    9[BANK0 ] int 
  1932 ;;  i               2    7[BANK0 ] int 
  1933 ;;  i               2    5[BANK0 ] int 
  1934 ;;  i               2    3[BANK0 ] int 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       0       0       0       0
  1945 ;;      Locals:         0       8       0       0       0
  1946 ;;      Temps:          0       3       0       0       0
  1947 ;;      Totals:         0      11       0       0       0
  1948 ;;Total ram usage:       11 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 3
  1951 ;; This function calls:
  1952 ;;		_eeprom_write
  1953 ;;		_reset
  1954 ;;		_reset_eeprom
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function _write_x
  1962  0629                     _write_x:
  1963  0629                     l4092:	
  1964                           ;incstack = 0
  1965                           ; Regs used in _write_x: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1966                           
  1967                           
  1968                           ;rg_877a.c: 230: if(hour == 14 && min == 0 && sec == 0){
  1969  0629  300E               	movlw	14
  1970  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1971  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1972  062C  0668               	xorwf	_hour,w
  1973  062D  0469               	iorwf	_hour+1,w
  1974  062E  1D03               	btfss	3,2
  1975  062F  2E31               	goto	u5771
  1976  0630  2E32               	goto	u5770
  1977  0631                     u5771:
  1978  0631  2E7C               	goto	l4114
  1979  0632                     u5770:
  1980  0632                     l4094:
  1981  0632  086A               	movf	_min,w
  1982  0633  046B               	iorwf	_min+1,w
  1983  0634  1D03               	btfss	3,2
  1984  0635  2E37               	goto	u5781
  1985  0636  2E38               	goto	u5780
  1986  0637                     u5781:
  1987  0637  2E7C               	goto	l4114
  1988  0638                     u5780:
  1989  0638                     l4096:
  1990  0638  085F               	movf	_sec,w
  1991  0639  0460               	iorwf	_sec+1,w
  1992  063A  1D03               	btfss	3,2
  1993  063B  2E3D               	goto	u5791
  1994  063C  2E3E               	goto	u5790
  1995  063D                     u5791:
  1996  063D  2E7C               	goto	l4114
  1997  063E                     u5790:
  1998  063E                     l4098:
  1999                           
  2000                           ;rg_877a.c: 231: for (int i=0;i<5;i++){
  2001  063E  01A3               	clrf	write_x@i
  2002  063F  01A4               	clrf	write_x@i+1
  2003  0640                     l4104:
  2004                           
  2005                           ;rg_877a.c: 232: eeprom_write(i+6, button_press[i]);
  2006  0640  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0641  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0642  0823               	movf	write_x@i,w
  2009  0643  0764               	addwf	_button_press,w
  2010  0644  00A0               	movwf	??_write_x
  2011  0645  0820               	movf	??_write_x,w
  2012  0646  0084               	movwf	4
  2013  0647  1383               	bcf	3,7	;select IRP bank0
  2014  0648  0800               	movf	0,w
  2015  0649  00A1               	movwf	??_write_x+1
  2016  064A  0821               	movf	??_write_x+1,w
  2017  064B  00F2               	movwf	eeprom_write@value
  2018  064C  0823               	movf	write_x@i,w
  2019  064D  3E06               	addlw	6
  2020  064E  160A  118A  2414  120A  118A  	fcall	_eeprom_write
  2021  0653                     l4106:
  2022  0653  3001               	movlw	1
  2023  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0656  07A3               	addwf	write_x@i,f
  2026  0657  1803               	skipnc
  2027  0658  0AA4               	incf	write_x@i+1,f
  2028  0659  3000               	movlw	0
  2029  065A  07A4               	addwf	write_x@i+1,f
  2030  065B                     l4108:
  2031  065B  0824               	movf	write_x@i+1,w
  2032  065C  3A80               	xorlw	128
  2033  065D  00FF               	movwf	btemp+1
  2034  065E  3080               	movlw	128
  2035  065F  027F               	subwf	btemp+1,w
  2036  0660  1D03               	skipz
  2037  0661  2E64               	goto	u5805
  2038  0662  3005               	movlw	5
  2039  0663  0223               	subwf	write_x@i,w
  2040  0664                     u5805:
  2041  0664  1C03               	skipc
  2042  0665  2E67               	goto	u5801
  2043  0666  2E68               	goto	u5800
  2044  0667                     u5801:
  2045  0667  2E40               	goto	l4104
  2046  0668                     u5800:
  2047  0668                     l4110:
  2048                           
  2049                           ;rg_877a.c: 233: };rg_877a.c: 234: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2050  0668  300B               	movlw	11
  2051  0669  1283               	bcf	3,5	;RP0=0, select bank0
  2052  066A  1303               	bcf	3,6	;RP1=0, select bank0
  2053  066B  00A2               	movwf	??_write_x+2
  2054  066C  3026               	movlw	38
  2055  066D  00A1               	movwf	??_write_x+1
  2056  066E  305D               	movlw	93
  2057  066F  00A0               	movwf	??_write_x
  2058  0670                     u6147:
  2059  0670  0BA0               	decfsz	??_write_x,f
  2060  0671  2E70               	goto	u6147
  2061  0672  0BA1               	decfsz	??_write_x+1,f
  2062  0673  2E70               	goto	u6147
  2063  0674  0BA2               	decfsz	??_write_x+2,f
  2064  0675  2E70               	goto	u6147
  2065  0676                     l4112:
  2066                           
  2067                           ;rg_877a.c: 235: reset();
  2068  0676  160A  118A  23BD  120A  118A  	fcall	_reset
  2069                           
  2070                           ;rg_877a.c: 236: }
  2071  067B  2F5D               	goto	l187
  2072  067C                     l4114:
  2073                           
  2074                           ;rg_877a.c: 239: else if(hour == 20 && min == 0 && sec == 0){
  2075  067C  3014               	movlw	20
  2076  067D  0668               	xorwf	_hour,w
  2077  067E  0469               	iorwf	_hour+1,w
  2078  067F  1D03               	btfss	3,2
  2079  0680  2E82               	goto	u5811
  2080  0681  2E83               	goto	u5810
  2081  0682                     u5811:
  2082  0682  2EBA               	goto	l4136
  2083  0683                     u5810:
  2084  0683                     l4116:
  2085  0683  086A               	movf	_min,w
  2086  0684  046B               	iorwf	_min+1,w
  2087  0685  1D03               	btfss	3,2
  2088  0686  2E88               	goto	u5821
  2089  0687  2E89               	goto	u5820
  2090  0688                     u5821:
  2091  0688  2EBA               	goto	l4136
  2092  0689                     u5820:
  2093  0689                     l4118:
  2094  0689  085F               	movf	_sec,w
  2095  068A  0460               	iorwf	_sec+1,w
  2096  068B  1D03               	btfss	3,2
  2097  068C  2E8E               	goto	u5831
  2098  068D  2E8F               	goto	u5830
  2099  068E                     u5831:
  2100  068E  2EBA               	goto	l4136
  2101  068F                     u5830:
  2102  068F                     l4120:
  2103                           
  2104                           ;rg_877a.c: 240: for (int i=0;i<5;i++){
  2105  068F  01A5               	clrf	write_x@i_181
  2106  0690  01A6               	clrf	write_x@i_181+1
  2107  0691                     l4126:
  2108                           
  2109                           ;rg_877a.c: 241: eeprom_write(i+11, button_press[i]);
  2110  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0693  0825               	movf	write_x@i_181,w
  2113  0694  0764               	addwf	_button_press,w
  2114  0695  00A0               	movwf	??_write_x
  2115  0696  0820               	movf	??_write_x,w
  2116  0697  0084               	movwf	4
  2117  0698  1383               	bcf	3,7	;select IRP bank0
  2118  0699  0800               	movf	0,w
  2119  069A  00A1               	movwf	??_write_x+1
  2120  069B  0821               	movf	??_write_x+1,w
  2121  069C  00F2               	movwf	eeprom_write@value
  2122  069D  0825               	movf	write_x@i_181,w
  2123  069E  3E0B               	addlw	11
  2124  069F  160A  118A  2414  120A  118A  	fcall	_eeprom_write
  2125  06A4                     l4128:
  2126  06A4  3001               	movlw	1
  2127  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2128  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2129  06A7  07A5               	addwf	write_x@i_181,f
  2130  06A8  1803               	skipnc
  2131  06A9  0AA6               	incf	write_x@i_181+1,f
  2132  06AA  3000               	movlw	0
  2133  06AB  07A6               	addwf	write_x@i_181+1,f
  2134  06AC                     l4130:
  2135  06AC  0826               	movf	write_x@i_181+1,w
  2136  06AD  3A80               	xorlw	128
  2137  06AE  00FF               	movwf	btemp+1
  2138  06AF  3080               	movlw	128
  2139  06B0  027F               	subwf	btemp+1,w
  2140  06B1  1D03               	skipz
  2141  06B2  2EB5               	goto	u5845
  2142  06B3  3005               	movlw	5
  2143  06B4  0225               	subwf	write_x@i_181,w
  2144  06B5                     u5845:
  2145  06B5  1C03               	skipc
  2146  06B6  2EB8               	goto	u5841
  2147  06B7  2EB9               	goto	u5840
  2148  06B8                     u5841:
  2149  06B8  2E91               	goto	l4126
  2150  06B9                     u5840:
  2151  06B9  2E68               	goto	l4110
  2152  06BA                     l4136:
  2153                           
  2154                           ;rg_877a.c: 247: else if(hour == 2 && min == 0 && sec == 0){
  2155  06BA  3002               	movlw	2
  2156  06BB  0668               	xorwf	_hour,w
  2157  06BC  0469               	iorwf	_hour+1,w
  2158  06BD  1D03               	btfss	3,2
  2159  06BE  2EC0               	goto	u5851
  2160  06BF  2EC1               	goto	u5850
  2161  06C0                     u5851:
  2162  06C0  2EF8               	goto	l4158
  2163  06C1                     u5850:
  2164  06C1                     l4138:
  2165  06C1  086A               	movf	_min,w
  2166  06C2  046B               	iorwf	_min+1,w
  2167  06C3  1D03               	btfss	3,2
  2168  06C4  2EC6               	goto	u5861
  2169  06C5  2EC7               	goto	u5860
  2170  06C6                     u5861:
  2171  06C6  2EF8               	goto	l4158
  2172  06C7                     u5860:
  2173  06C7                     l4140:
  2174  06C7  085F               	movf	_sec,w
  2175  06C8  0460               	iorwf	_sec+1,w
  2176  06C9  1D03               	btfss	3,2
  2177  06CA  2ECC               	goto	u5871
  2178  06CB  2ECD               	goto	u5870
  2179  06CC                     u5871:
  2180  06CC  2EF8               	goto	l4158
  2181  06CD                     u5870:
  2182  06CD                     l4142:
  2183                           
  2184                           ;rg_877a.c: 248: for (int i=0;i<5;i++){
  2185  06CD  01A7               	clrf	write_x@i_182
  2186  06CE  01A8               	clrf	write_x@i_182+1
  2187  06CF                     l4148:
  2188                           
  2189                           ;rg_877a.c: 249: eeprom_write(i+16, button_press[i]);
  2190  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  2191  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  2192  06D1  0827               	movf	write_x@i_182,w
  2193  06D2  0764               	addwf	_button_press,w
  2194  06D3  00A0               	movwf	??_write_x
  2195  06D4  0820               	movf	??_write_x,w
  2196  06D5  0084               	movwf	4
  2197  06D6  1383               	bcf	3,7	;select IRP bank0
  2198  06D7  0800               	movf	0,w
  2199  06D8  00A1               	movwf	??_write_x+1
  2200  06D9  0821               	movf	??_write_x+1,w
  2201  06DA  00F2               	movwf	eeprom_write@value
  2202  06DB  0827               	movf	write_x@i_182,w
  2203  06DC  3E10               	addlw	16
  2204  06DD  160A  118A  2414  120A  118A  	fcall	_eeprom_write
  2205  06E2                     l4150:
  2206  06E2  3001               	movlw	1
  2207  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  2208  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  2209  06E5  07A7               	addwf	write_x@i_182,f
  2210  06E6  1803               	skipnc
  2211  06E7  0AA8               	incf	write_x@i_182+1,f
  2212  06E8  3000               	movlw	0
  2213  06E9  07A8               	addwf	write_x@i_182+1,f
  2214  06EA                     l4152:
  2215  06EA  0828               	movf	write_x@i_182+1,w
  2216  06EB  3A80               	xorlw	128
  2217  06EC  00FF               	movwf	btemp+1
  2218  06ED  3080               	movlw	128
  2219  06EE  027F               	subwf	btemp+1,w
  2220  06EF  1D03               	skipz
  2221  06F0  2EF3               	goto	u5885
  2222  06F1  3005               	movlw	5
  2223  06F2  0227               	subwf	write_x@i_182,w
  2224  06F3                     u5885:
  2225  06F3  1C03               	skipc
  2226  06F4  2EF6               	goto	u5881
  2227  06F5  2EF7               	goto	u5880
  2228  06F6                     u5881:
  2229  06F6  2ECF               	goto	l4148
  2230  06F7                     u5880:
  2231  06F7  2E68               	goto	l4110
  2232  06F8                     l4158:
  2233                           
  2234                           ;rg_877a.c: 256: else if(hour == 8 && min == 0 && sec == 0){
  2235  06F8  3008               	movlw	8
  2236  06F9  0668               	xorwf	_hour,w
  2237  06FA  0469               	iorwf	_hour+1,w
  2238  06FB  1D03               	btfss	3,2
  2239  06FC  2EFE               	goto	u5891
  2240  06FD  2EFF               	goto	u5890
  2241  06FE                     u5891:
  2242  06FE  2F36               	goto	l4180
  2243  06FF                     u5890:
  2244  06FF                     l4160:
  2245  06FF  086A               	movf	_min,w
  2246  0700  046B               	iorwf	_min+1,w
  2247  0701  1D03               	btfss	3,2
  2248  0702  2F04               	goto	u5901
  2249  0703  2F05               	goto	u5900
  2250  0704                     u5901:
  2251  0704  2F36               	goto	l4180
  2252  0705                     u5900:
  2253  0705                     l4162:
  2254  0705  085F               	movf	_sec,w
  2255  0706  0460               	iorwf	_sec+1,w
  2256  0707  1D03               	btfss	3,2
  2257  0708  2F0A               	goto	u5911
  2258  0709  2F0B               	goto	u5910
  2259  070A                     u5911:
  2260  070A  2F36               	goto	l4180
  2261  070B                     u5910:
  2262  070B                     l4164:
  2263                           
  2264                           ;rg_877a.c: 257: for (int i=0;i<5;i++){
  2265  070B  01A9               	clrf	write_x@i_183
  2266  070C  01AA               	clrf	write_x@i_183+1
  2267  070D                     l4170:
  2268                           
  2269                           ;rg_877a.c: 258: eeprom_write(i+21, button_press[i]);
  2270  070D  1283               	bcf	3,5	;RP0=0, select bank0
  2271  070E  1303               	bcf	3,6	;RP1=0, select bank0
  2272  070F  0829               	movf	write_x@i_183,w
  2273  0710  0764               	addwf	_button_press,w
  2274  0711  00A0               	movwf	??_write_x
  2275  0712  0820               	movf	??_write_x,w
  2276  0713  0084               	movwf	4
  2277  0714  1383               	bcf	3,7	;select IRP bank0
  2278  0715  0800               	movf	0,w
  2279  0716  00A1               	movwf	??_write_x+1
  2280  0717  0821               	movf	??_write_x+1,w
  2281  0718  00F2               	movwf	eeprom_write@value
  2282  0719  0829               	movf	write_x@i_183,w
  2283  071A  3E15               	addlw	21
  2284  071B  160A  118A  2414  120A  118A  	fcall	_eeprom_write
  2285  0720                     l4172:
  2286  0720  3001               	movlw	1
  2287  0721  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0722  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0723  07A9               	addwf	write_x@i_183,f
  2290  0724  1803               	skipnc
  2291  0725  0AAA               	incf	write_x@i_183+1,f
  2292  0726  3000               	movlw	0
  2293  0727  07AA               	addwf	write_x@i_183+1,f
  2294  0728                     l4174:
  2295  0728  082A               	movf	write_x@i_183+1,w
  2296  0729  3A80               	xorlw	128
  2297  072A  00FF               	movwf	btemp+1
  2298  072B  3080               	movlw	128
  2299  072C  027F               	subwf	btemp+1,w
  2300  072D  1D03               	skipz
  2301  072E  2F31               	goto	u5925
  2302  072F  3005               	movlw	5
  2303  0730  0229               	subwf	write_x@i_183,w
  2304  0731                     u5925:
  2305  0731  1C03               	skipc
  2306  0732  2F34               	goto	u5921
  2307  0733  2F35               	goto	u5920
  2308  0734                     u5921:
  2309  0734  2F0D               	goto	l4170
  2310  0735                     u5920:
  2311  0735  2E68               	goto	l4110
  2312  0736                     l4180:
  2313                           
  2314                           ;rg_877a.c: 265: else if(hour == 9 && min == 0 && sec == 0){
  2315  0736  3009               	movlw	9
  2316  0737  0668               	xorwf	_hour,w
  2317  0738  0469               	iorwf	_hour+1,w
  2318  0739  1D03               	btfss	3,2
  2319  073A  2F3C               	goto	u5931
  2320  073B  2F3D               	goto	u5930
  2321  073C                     u5931:
  2322  073C  2F5D               	goto	l177
  2323  073D                     u5930:
  2324  073D                     l4182:
  2325  073D  086A               	movf	_min,w
  2326  073E  046B               	iorwf	_min+1,w
  2327  073F  1D03               	btfss	3,2
  2328  0740  2F42               	goto	u5941
  2329  0741  2F43               	goto	u5940
  2330  0742                     u5941:
  2331  0742  2F5D               	goto	l177
  2332  0743                     u5940:
  2333  0743                     l4184:
  2334  0743  085F               	movf	_sec,w
  2335  0744  0460               	iorwf	_sec+1,w
  2336  0745  1D03               	btfss	3,2
  2337  0746  2F48               	goto	u5951
  2338  0747  2F49               	goto	u5950
  2339  0748                     u5951:
  2340  0748  2F5D               	goto	l177
  2341  0749                     u5950:
  2342  0749                     l4186:
  2343                           
  2344                           ;rg_877a.c: 266: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2345  0749  300B               	movlw	11
  2346  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2347  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2348  074C  00A2               	movwf	??_write_x+2
  2349  074D  3026               	movlw	38
  2350  074E  00A1               	movwf	??_write_x+1
  2351  074F  305D               	movlw	93
  2352  0750  00A0               	movwf	??_write_x
  2353  0751                     u6157:
  2354  0751  0BA0               	decfsz	??_write_x,f
  2355  0752  2F51               	goto	u6157
  2356  0753  0BA1               	decfsz	??_write_x+1,f
  2357  0754  2F51               	goto	u6157
  2358  0755  0BA2               	decfsz	??_write_x+2,f
  2359  0756  2F51               	goto	u6157
  2360  0757                     l4188:
  2361                           
  2362                           ;rg_877a.c: 267: reset_eeprom();
  2363  0757  160A  118A  256B  120A  118A  	fcall	_reset_eeprom
  2364  075C  2F5D               	goto	l187
  2365  075D                     l177:
  2366  075D                     l187:
  2367  075D  0008               	return
  2368  075E                     __end_of_write_x:
  2369                           
  2370                           	psect	text2
  2371  156B                     __ptext2:	
  2372 ;; *************** function _reset_eeprom *****************
  2373 ;; Defined at:
  2374 ;;		line 215 in file "rg_877a.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  i               2    6[COMMON] int 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         0       0       0       0       0
  2389 ;;      Locals:         2       0       0       0       0
  2390 ;;      Temps:          1       0       0       0       0
  2391 ;;      Totals:         3       0       0       0       0
  2392 ;;Total ram usage:        3 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 2
  2395 ;; This function calls:
  2396 ;;		_eeprom_write
  2397 ;; This function is called by:
  2398 ;;		_write_x
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           
  2403                           ;psect for function _reset_eeprom
  2404  156B                     _reset_eeprom:
  2405  156B                     l2670:	
  2406                           ;incstack = 0
  2407                           ; Regs used in _reset_eeprom: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2408                           
  2409                           
  2410                           ;rg_877a.c: 216: for(int i=6;i<26;i++){
  2411  156B  3006               	movlw	6
  2412  156C  00F6               	movwf	reset_eeprom@i
  2413  156D  3000               	movlw	0
  2414  156E  00F7               	movwf	reset_eeprom@i+1
  2415  156F                     l2676:
  2416                           
  2417                           ;rg_877a.c: 217: if(i == 7 || i == 12 || i == 17 || i == 22){
  2418  156F  3007               	movlw	7
  2419  1570  0676               	xorwf	reset_eeprom@i,w
  2420  1571  0477               	iorwf	reset_eeprom@i+1,w
  2421  1572  1903               	btfsc	3,2
  2422  1573  2D75               	goto	u3111
  2423  1574  2D76               	goto	u3110
  2424  1575                     u3111:
  2425  1575  2D8B               	goto	l2684
  2426  1576                     u3110:
  2427  1576                     l2678:
  2428  1576  300C               	movlw	12
  2429  1577  0676               	xorwf	reset_eeprom@i,w
  2430  1578  0477               	iorwf	reset_eeprom@i+1,w
  2431  1579  1903               	btfsc	3,2
  2432  157A  2D7C               	goto	u3121
  2433  157B  2D7D               	goto	u3120
  2434  157C                     u3121:
  2435  157C  2D8B               	goto	l2684
  2436  157D                     u3120:
  2437  157D                     l2680:
  2438  157D  3011               	movlw	17
  2439  157E  0676               	xorwf	reset_eeprom@i,w
  2440  157F  0477               	iorwf	reset_eeprom@i+1,w
  2441  1580  1903               	btfsc	3,2
  2442  1581  2D83               	goto	u3131
  2443  1582  2D84               	goto	u3130
  2444  1583                     u3131:
  2445  1583  2D8B               	goto	l2684
  2446  1584                     u3130:
  2447  1584                     l2682:
  2448  1584  3016               	movlw	22
  2449  1585  0676               	xorwf	reset_eeprom@i,w
  2450  1586  0477               	iorwf	reset_eeprom@i+1,w
  2451  1587  1D03               	btfss	3,2
  2452  1588  2D8A               	goto	u3141
  2453  1589  2D8B               	goto	u3140
  2454  158A                     u3141:
  2455  158A  2D96               	goto	l2686
  2456  158B                     u3140:
  2457  158B                     l2684:
  2458                           
  2459                           ;rg_877a.c: 218: eeprom_write(i, '.');
  2460  158B  302E               	movlw	46
  2461  158C  00F5               	movwf	??_reset_eeprom
  2462  158D  0875               	movf	??_reset_eeprom,w
  2463  158E  00F2               	movwf	eeprom_write@value
  2464  158F  0876               	movf	reset_eeprom@i,w
  2465  1590  160A  118A  2414  160A  118A  	fcall	_eeprom_write
  2466                           
  2467                           ;rg_877a.c: 219: }
  2468  1595  2DA0               	goto	l2688
  2469  1596                     l2686:
  2470                           
  2471                           ;rg_877a.c: 220: else{;rg_877a.c: 221: eeprom_write(i, '0');
  2472  1596  3030               	movlw	48
  2473  1597  00F5               	movwf	??_reset_eeprom
  2474  1598  0875               	movf	??_reset_eeprom,w
  2475  1599  00F2               	movwf	eeprom_write@value
  2476  159A  0876               	movf	reset_eeprom@i,w
  2477  159B  160A  118A  2414  160A  118A  	fcall	_eeprom_write
  2478  15A0                     l2688:
  2479  15A0  3001               	movlw	1
  2480  15A1  07F6               	addwf	reset_eeprom@i,f
  2481  15A2  1803               	skipnc
  2482  15A3  0AF7               	incf	reset_eeprom@i+1,f
  2483  15A4  3000               	movlw	0
  2484  15A5  07F7               	addwf	reset_eeprom@i+1,f
  2485  15A6                     l2690:
  2486  15A6  0877               	movf	reset_eeprom@i+1,w
  2487  15A7  3A80               	xorlw	128
  2488  15A8  00FF               	movwf	btemp+1
  2489  15A9  3080               	movlw	128
  2490  15AA  027F               	subwf	btemp+1,w
  2491  15AB  1D03               	skipz
  2492  15AC  2DAF               	goto	u3155
  2493  15AD  301A               	movlw	26
  2494  15AE  0276               	subwf	reset_eeprom@i,w
  2495  15AF                     u3155:
  2496  15AF  1C03               	skipc
  2497  15B0  2DB2               	goto	u3151
  2498  15B1  2DB3               	goto	u3150
  2499  15B2                     u3151:
  2500  15B2  2D6F               	goto	l2676
  2501  15B3                     u3150:
  2502  15B3                     l167:
  2503  15B3  0008               	return
  2504  15B4                     __end_of_reset_eeprom:
  2505                           
  2506                           	psect	text3
  2507  13BD                     __ptext3:	
  2508 ;; *************** function _reset *****************
  2509 ;; Defined at:
  2510 ;;		line 207 in file "rg_877a.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         0       0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 2
  2531 ;; This function calls:
  2532 ;;		_eeprom_write
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;;		_write_x
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _reset
  2541  13BD                     _reset:
  2542  13BD                     l2650:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _reset: [wreg+status,2+status,0+pclath+cstack]
  2545                           
  2546                           
  2547                           ;rg_877a.c: 208: eeprom_write(2, 1);
  2548  13BD  01F2               	clrf	eeprom_write@value
  2549  13BE  0AF2               	incf	eeprom_write@value,f
  2550  13BF  3002               	movlw	2
  2551  13C0  160A  118A  2414  160A  118A  	fcall	_eeprom_write
  2552  13C5                     l2652:
  2553                           
  2554                           ;rg_877a.c: 209: if(flag == 1) btn_press = 0.5;
  2555  13C5  1283               	bcf	3,5	;RP0=0, select bank0
  2556  13C6  1303               	bcf	3,6	;RP1=0, select bank0
  2557  13C7  0367               	decf	_flag,w
  2558  13C8  1D03               	btfss	3,2
  2559  13C9  2BCB               	goto	u3081
  2560  13CA  2BCC               	goto	u3080
  2561  13CB                     u3081:
  2562  13CB  2BD5               	goto	l2656
  2563  13CC                     u3080:
  2564  13CC                     l2654:
  2565  13CC  303F               	movlw	63
  2566  13CD  00DC               	movwf	_btn_press+3
  2567  13CE  3000               	movlw	0
  2568  13CF  00DB               	movwf	_btn_press+2
  2569  13D0  3000               	movlw	0
  2570  13D1  00DA               	movwf	_btn_press+1
  2571  13D2  3000               	movlw	0
  2572  13D3  00D9               	movwf	_btn_press
  2573  13D4  2BDD               	goto	l2658
  2574  13D5                     l2656:
  2575                           
  2576                           ;rg_877a.c: 210: else btn_press = 0.0;
  2577  13D5  3000               	movlw	0
  2578  13D6  00DC               	movwf	_btn_press+3
  2579  13D7  3000               	movlw	0
  2580  13D8  00DB               	movwf	_btn_press+2
  2581  13D9  3000               	movlw	0
  2582  13DA  00DA               	movwf	_btn_press+1
  2583  13DB  3000               	movlw	0
  2584  13DC  00D9               	movwf	_btn_press
  2585  13DD                     l2658:
  2586                           
  2587                           ;rg_877a.c: 211: rr = 0;
  2588  13DD  01DD               	clrf	_rr
  2589  13DE  01DE               	clrf	_rr+1
  2590  13DF                     l2660:
  2591                           
  2592                           ;rg_877a.c: 212: eeprom_write(0, 0);
  2593  13DF  01F2               	clrf	eeprom_write@value
  2594  13E0  3000               	movlw	0
  2595  13E1  160A  118A  2414  160A  118A  	fcall	_eeprom_write
  2596  13E6                     l158:
  2597  13E6  0008               	return
  2598  13E7                     __end_of_reset:
  2599                           
  2600                           	psect	text4
  2601  1414                     __ptext4:	
  2602 ;; *************** function _eeprom_write *****************
  2603 ;; Defined at:
  2604 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/pic/__eewrite.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  addr            1    wreg     unsigned char 
  2607 ;;  value           1    2[COMMON] unsigned char 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  addr            1    4[COMMON] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         1       0       0       0       0
  2620 ;;      Locals:         1       0       0       0       0
  2621 ;;      Temps:          1       0       0       0       0
  2622 ;;      Totals:         3       0       0       0       0
  2623 ;;Total ram usage:        3 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 1
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;;		_reset
  2631 ;;		_reset_eeprom
  2632 ;;		_write_x
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _eeprom_write
  2638  1414                     _eeprom_write:
  2639                           
  2640                           ;incstack = 0
  2641                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2642                           ;eeprom_write@addr stored from wreg
  2643  1414  00F4               	movwf	eeprom_write@addr
  2644  1415                     l430:	
  2645                           ;__eewrite.c: 8: do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value
      +                          ); EECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } I
      +                          NTCONbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1;
      +                           EE
  2646                           
  2647  1415                     l431:
  2648  1415  1683               	bsf	3,5	;RP0=1, select bank3
  2649  1416  1703               	bsf	3,6	;RP1=1, select bank3
  2650  1417  188C               	btfsc	12,1	;volsfr
  2651  1418  2C1A               	goto	u2351
  2652  1419  2C1B               	goto	u2350
  2653  141A                     u2351:
  2654  141A  2C15               	goto	l431
  2655  141B                     u2350:
  2656  141B                     l2326:
  2657  141B  0874               	movf	eeprom_write@addr,w
  2658  141C  1283               	bcf	3,5	;RP0=0, select bank2
  2659  141D  1703               	bsf	3,6	;RP1=1, select bank2
  2660  141E  008D               	movwf	13	;volatile
  2661  141F  0872               	movf	eeprom_write@value,w
  2662  1420  008C               	movwf	12	;volatile
  2663  1421                     l2328:
  2664  1421  303F               	movlw	63
  2665  1422  00F3               	movwf	??_eeprom_write
  2666  1423  0873               	movf	??_eeprom_write,w
  2667  1424  1683               	bsf	3,5	;RP0=1, select bank3
  2668  1425  1703               	bsf	3,6	;RP1=1, select bank3
  2669  1426  058C               	andwf	12,f	;volsfr
  2670  1427                     l2330:
  2671  1427  1283               	bcf	3,5	;RP0=0, select bank0
  2672  1428  1303               	bcf	3,6	;RP1=0, select bank0
  2673  1429  1003               	bcf	3,0	;volatile
  2674  142A                     l2332:
  2675  142A  1F8B               	btfss	11,7	;volatile
  2676  142B  2C2D               	goto	u2361
  2677  142C  2C2E               	goto	u2360
  2678  142D                     u2361:
  2679  142D  2C2F               	goto	l434
  2680  142E                     u2360:
  2681  142E                     l2334:
  2682  142E  1403               	bsf	3,0	;volatile
  2683  142F                     l434:
  2684  142F  138B               	bcf	11,7	;volatile
  2685  1430  1683               	bsf	3,5	;RP0=1, select bank3
  2686  1431  1703               	bsf	3,6	;RP1=1, select bank3
  2687  1432  150C               	bsf	12,2	;volsfr
  2688  1433                     l2336:
  2689  1433  3055               	movlw	85
  2690  1434  008D               	movwf	13	;volsfr
  2691  1435  30AA               	movlw	170
  2692  1436  008D               	movwf	13	;volsfr
  2693  1437                     l2338:
  2694  1437  148C               	bsf	12,1	;volsfr
  2695  1438                     l2340:
  2696  1438  110C               	bcf	12,2	;volsfr
  2697  1439                     l2342:
  2698  1439  1283               	bcf	3,5	;RP0=0, select bank0
  2699  143A  1303               	bcf	3,6	;RP1=0, select bank0
  2700  143B  1C03               	btfss	3,0	;volatile
  2701  143C  2C3E               	goto	u2371
  2702  143D  2C3F               	goto	u2370
  2703  143E                     u2371:
  2704  143E  2C40               	goto	l437
  2705  143F                     u2370:
  2706  143F                     l2344:
  2707  143F  178B               	bsf	11,7	;volatile
  2708  1440                     l437:
  2709  1440  0008               	return
  2710  1441                     __end_of_eeprom_write:
  2711                           
  2712                           	psect	text5
  2713  0A02                     __ptext5:	
  2714 ;; *************** function _ftoa *****************
  2715 ;; Defined at:
  2716 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/ftoa.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  f               4   42[BANK0 ] float 
  2719 ;;  status          1   46[BANK0 ] PTR int 
  2720 ;;		 -> status(2), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  l               4   52[BANK0 ] unsigned long 
  2723 ;;  rem             4   48[BANK0 ] unsigned long 
  2724 ;;  cp              1   56[BANK0 ] PTR unsigned char 
  2725 ;;		 -> ftoa@buf(17), 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      PTR unsigned char 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       5       0       0       0
  2736 ;;      Locals:         0       9       0       0       0
  2737 ;;      Temps:          0       1       0       0       0
  2738 ;;      Totals:         0      15       0       0       0
  2739 ;;Total ram usage:       15 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 3
  2742 ;; This function calls:
  2743 ;;		___flge
  2744 ;;		___flmul
  2745 ;;		___flneg
  2746 ;;		___flsub
  2747 ;;		___fltol
  2748 ;;		___xxtofl
  2749 ;;		_sprintf
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _ftoa
  2757  0A02                     _ftoa:
  2758  0A02                     l4224:	
  2759                           ;incstack = 0
  2760                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2761                           
  2762  0A02  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  2763  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0A05  00CF               	movwf	??_ftoa
  2766  0A06  084F               	movf	??_ftoa,w
  2767  0A07  00D8               	movwf	ftoa@cp
  2768  0A08                     l4226:
  2769  0A08  084D               	movf	ftoa@f+3,w
  2770  0A09  00F5               	movwf	___flge@ff1+3
  2771  0A0A  084C               	movf	ftoa@f+2,w
  2772  0A0B  00F4               	movwf	___flge@ff1+2
  2773  0A0C  084B               	movf	ftoa@f+1,w
  2774  0A0D  00F3               	movwf	___flge@ff1+1
  2775  0A0E  084A               	movf	ftoa@f,w
  2776  0A0F  00F2               	movwf	___flge@ff1
  2777  0A10  3000               	movlw	0
  2778  0A11  00F9               	movwf	___flge@ff2+3
  2779  0A12  3000               	movlw	0
  2780  0A13  00F8               	movwf	___flge@ff2+2
  2781  0A14  3000               	movlw	0
  2782  0A15  00F7               	movwf	___flge@ff2+1
  2783  0A16  3000               	movlw	0
  2784  0A17  00F6               	movwf	___flge@ff2
  2785  0A18  120A  158A  20A2  120A  158A  	fcall	___flge
  2786  0A1D  1803               	btfsc	3,0
  2787  0A1E  2A20               	goto	u5961
  2788  0A1F  2A21               	goto	u5960
  2789  0A20                     u5961:
  2790  0A20  2A45               	goto	l4234
  2791  0A21                     u5960:
  2792  0A21                     l4228:
  2793  0A21  302D               	movlw	45
  2794  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0A24  00CF               	movwf	??_ftoa
  2797  0A25  0858               	movf	ftoa@cp,w
  2798  0A26  0084               	movwf	4
  2799  0A27  084F               	movf	??_ftoa,w
  2800  0A28  1383               	bcf	3,7	;select IRP bank0
  2801  0A29  0080               	movwf	0
  2802  0A2A                     l4230:
  2803  0A2A  3001               	movlw	1
  2804  0A2B  00CF               	movwf	??_ftoa
  2805  0A2C  084F               	movf	??_ftoa,w
  2806  0A2D  07D8               	addwf	ftoa@cp,f
  2807  0A2E                     l4232:
  2808  0A2E  084D               	movf	ftoa@f+3,w
  2809  0A2F  00F5               	movwf	___flneg@f1+3
  2810  0A30  084C               	movf	ftoa@f+2,w
  2811  0A31  00F4               	movwf	___flneg@f1+2
  2812  0A32  084B               	movf	ftoa@f+1,w
  2813  0A33  00F3               	movwf	___flneg@f1+1
  2814  0A34  084A               	movf	ftoa@f,w
  2815  0A35  00F2               	movwf	___flneg@f1
  2816  0A36  160A  118A  222B  120A  158A  	fcall	___flneg
  2817  0A3B  0875               	movf	?___flneg+3,w
  2818  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  2820  0A3E  00CD               	movwf	ftoa@f+3
  2821  0A3F  0874               	movf	?___flneg+2,w
  2822  0A40  00CC               	movwf	ftoa@f+2
  2823  0A41  0873               	movf	?___flneg+1,w
  2824  0A42  00CB               	movwf	ftoa@f+1
  2825  0A43  0872               	movf	?___flneg,w
  2826  0A44  00CA               	movwf	ftoa@f
  2827  0A45                     l4234:
  2828  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0A47  084D               	movf	ftoa@f+3,w
  2831  0A48  00C2               	movwf	___fltol@f1+3
  2832  0A49  084C               	movf	ftoa@f+2,w
  2833  0A4A  00C1               	movwf	___fltol@f1+2
  2834  0A4B  084B               	movf	ftoa@f+1,w
  2835  0A4C  00C0               	movwf	___fltol@f1+1
  2836  0A4D  084A               	movf	ftoa@f,w
  2837  0A4E  00BF               	movwf	___fltol@f1
  2838  0A4F  160A  118A  2784  120A  158A  	fcall	___fltol
  2839  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  2840  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  2841  0A56  0842               	movf	?___fltol+3,w
  2842  0A57  00D7               	movwf	ftoa@l+3
  2843  0A58  0841               	movf	?___fltol+2,w
  2844  0A59  00D6               	movwf	ftoa@l+2
  2845  0A5A  0840               	movf	?___fltol+1,w
  2846  0A5B  00D5               	movwf	ftoa@l+1
  2847  0A5C  083F               	movf	?___fltol,w
  2848  0A5D  00D4               	movwf	ftoa@l
  2849  0A5E                     l4236:
  2850  0A5E  0857               	movf	ftoa@l+3,w
  2851  0A5F  00F7               	movwf	___xxtofl@val+3
  2852  0A60  0856               	movf	ftoa@l+2,w
  2853  0A61  00F6               	movwf	___xxtofl@val+2
  2854  0A62  0855               	movf	ftoa@l+1,w
  2855  0A63  00F5               	movwf	___xxtofl@val+1
  2856  0A64  0854               	movf	ftoa@l,w
  2857  0A65  00F4               	movwf	___xxtofl@val
  2858  0A66  3000               	movlw	0
  2859  0A67  120A  158A  2146  120A  158A  	fcall	___xxtofl
  2860  0A6C  0877               	movf	?___xxtofl+3,w
  2861  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0A6F  00AF               	movwf	___flsub@a+3
  2864  0A70  0876               	movf	?___xxtofl+2,w
  2865  0A71  00AE               	movwf	___flsub@a+2
  2866  0A72  0875               	movf	?___xxtofl+1,w
  2867  0A73  00AD               	movwf	___flsub@a+1
  2868  0A74  0874               	movf	?___xxtofl,w
  2869  0A75  00AC               	movwf	___flsub@a
  2870  0A76  084D               	movf	ftoa@f+3,w
  2871  0A77  00B3               	movwf	___flsub@b+3
  2872  0A78  084C               	movf	ftoa@f+2,w
  2873  0A79  00B2               	movwf	___flsub@b+2
  2874  0A7A  084B               	movf	ftoa@f+1,w
  2875  0A7B  00B1               	movwf	___flsub@b+1
  2876  0A7C  084A               	movf	ftoa@f,w
  2877  0A7D  00B0               	movwf	___flsub@b
  2878  0A7E  160A  118A  22F9  120A  158A  	fcall	___flsub
  2879  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0A85  082F               	movf	?___flsub+3,w
  2882  0A86  00CD               	movwf	ftoa@f+3
  2883  0A87  082E               	movf	?___flsub+2,w
  2884  0A88  00CC               	movwf	ftoa@f+2
  2885  0A89  082D               	movf	?___flsub+1,w
  2886  0A8A  00CB               	movwf	ftoa@f+1
  2887  0A8B  082C               	movf	?___flsub,w
  2888  0A8C  00CA               	movwf	ftoa@f
  2889  0A8D                     l4238:
  2890  0A8D  084D               	movf	ftoa@f+3,w
  2891  0A8E  00AC               	movwf	___flmul@a+3
  2892  0A8F  084C               	movf	ftoa@f+2,w
  2893  0A90  00AB               	movwf	___flmul@a+2
  2894  0A91  084B               	movf	ftoa@f+1,w
  2895  0A92  00AA               	movwf	___flmul@a+1
  2896  0A93  084A               	movf	ftoa@f,w
  2897  0A94  00A9               	movwf	___flmul@a
  2898  0A95  3049               	movlw	73
  2899  0A96  00A8               	movwf	___flmul@b+3
  2900  0A97  3074               	movlw	116
  2901  0A98  00A7               	movwf	___flmul@b+2
  2902  0A99  3024               	movlw	36
  2903  0A9A  00A6               	movwf	___flmul@b+1
  2904  0A9B  3000               	movlw	0
  2905  0A9C  00A5               	movwf	___flmul@b
  2906  0A9D  120A  118A  2040  120A  158A  	fcall	___flmul
  2907  0AA2  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0AA3  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0AA4  0828               	movf	?___flmul+3,w
  2910  0AA5  00C2               	movwf	___fltol@f1+3
  2911  0AA6  0827               	movf	?___flmul+2,w
  2912  0AA7  00C1               	movwf	___fltol@f1+2
  2913  0AA8  0826               	movf	?___flmul+1,w
  2914  0AA9  00C0               	movwf	___fltol@f1+1
  2915  0AAA  0825               	movf	?___flmul,w
  2916  0AAB  00BF               	movwf	___fltol@f1
  2917  0AAC  160A  118A  2784  120A  158A  	fcall	___fltol
  2918  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0AB3  0842               	movf	?___fltol+3,w
  2921  0AB4  00D3               	movwf	ftoa@rem+3
  2922  0AB5  0841               	movf	?___fltol+2,w
  2923  0AB6  00D2               	movwf	ftoa@rem+2
  2924  0AB7  0840               	movf	?___fltol+1,w
  2925  0AB8  00D1               	movwf	ftoa@rem+1
  2926  0AB9  083F               	movf	?___fltol,w
  2927  0ABA  00D0               	movwf	ftoa@rem
  2928  0ABB                     l4240:
  2929  0ABB  3029               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2930  0ABC  00CF               	movwf	??_ftoa
  2931  0ABD  084F               	movf	??_ftoa,w
  2932  0ABE  00B0               	movwf	sprintf@f
  2933  0ABF  0857               	movf	ftoa@l+3,w
  2934  0AC0  00B4               	movwf	?_sprintf+4
  2935  0AC1  0856               	movf	ftoa@l+2,w
  2936  0AC2  00B3               	movwf	?_sprintf+3
  2937  0AC3  0855               	movf	ftoa@l+1,w
  2938  0AC4  00B2               	movwf	?_sprintf+2
  2939  0AC5  0854               	movf	ftoa@l,w
  2940  0AC6  00B1               	movwf	?_sprintf+1
  2941  0AC7  0853               	movf	ftoa@rem+3,w
  2942  0AC8  00B8               	movwf	?_sprintf+8
  2943  0AC9  0852               	movf	ftoa@rem+2,w
  2944  0ACA  00B7               	movwf	?_sprintf+7
  2945  0ACB  0851               	movf	ftoa@rem+1,w
  2946  0ACC  00B6               	movwf	?_sprintf+6
  2947  0ACD  0850               	movf	ftoa@rem,w
  2948  0ACE  00B5               	movwf	?_sprintf+5
  2949  0ACF  0858               	movf	ftoa@cp,w
  2950  0AD0  120A  158A  25BC  120A  158A  	fcall	_sprintf
  2951  0AD5                     l4242:
  2952  0AD5  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  2953  0AD6                     l897:
  2954  0AD6  0008               	return
  2955  0AD7                     __end_of_ftoa:
  2956                           
  2957                           	psect	text6
  2958  0DBC                     __ptext6:	
  2959 ;; *************** function _sprintf *****************
  2960 ;; Defined at:
  2961 ;;		line 505 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/doprnt.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  sp              1    wreg     PTR unsigned char 
  2964 ;;		 -> ftoa@buf(17), 
  2965 ;;  f               1   16[BANK0 ] PTR const unsigned char 
  2966 ;;		 -> STR_1(11), 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  sp              1   36[BANK0 ] PTR unsigned char 
  2969 ;;		 -> ftoa@buf(17), 
  2970 ;;  val             4   32[BANK0 ] unsigned long 
  2971 ;;  tmpval          4    0        struct .
  2972 ;;  prec            2   39[BANK0 ] int 
  2973 ;;  width           2   37[BANK0 ] int 
  2974 ;;  cp              2    0        PTR const unsigned char 
  2975 ;;  len             2    0        unsigned int 
  2976 ;;  c               1   41[BANK0 ] unsigned char 
  2977 ;;  ap              1   31[BANK0 ] PTR void [1]
  2978 ;;		 -> ?_sprintf(2), 
  2979 ;;  flag            1   30[BANK0 ] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  2   16[BANK0 ] int 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       9       0       0       0
  2990 ;;      Locals:         0      12       0       0       0
  2991 ;;      Temps:          0       5       0       0       0
  2992 ;;      Totals:         0      26       0       0       0
  2993 ;;Total ram usage:       26 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 2
  2996 ;; This function calls:
  2997 ;;		___lldiv
  2998 ;;		___llmod
  2999 ;;		___wmul
  3000 ;;		_isdigit
  3001 ;; This function is called by:
  3002 ;;		_ftoa
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _sprintf
  3008  0DBC                     _sprintf:
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3012                           ;sprintf@sp stored from wreg
  3013  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0DBE  00C4               	movwf	sprintf@sp
  3016  0DBF                     l3956:
  3017                           
  3018                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  3019  0DBF  3031               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3020  0DC0  00B9               	movwf	??_sprintf
  3021  0DC1  0839               	movf	??_sprintf,w
  3022  0DC2  00BF               	movwf	sprintf@ap
  3023                           
  3024                           ;doprnt.c: 553: while((c = *f++)) {
  3025  0DC3  2FE9               	goto	l4054
  3026  0DC4                     l3958:
  3027                           
  3028                           ;doprnt.c: 555: if(c != '%')
  3029  0DC4  3025               	movlw	37
  3030  0DC5  0649               	xorwf	sprintf@c,w
  3031  0DC6  1903               	btfsc	3,2
  3032  0DC7  2DC9               	goto	u5581
  3033  0DC8  2DCA               	goto	u5580
  3034  0DC9                     u5581:
  3035  0DC9  2DD6               	goto	l3964
  3036  0DCA                     u5580:
  3037  0DCA                     l3960:
  3038                           
  3039                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3040  0DCA  0849               	movf	sprintf@c,w
  3041  0DCB  00B9               	movwf	??_sprintf
  3042  0DCC  0844               	movf	sprintf@sp,w
  3043  0DCD  0084               	movwf	4
  3044  0DCE  0839               	movf	??_sprintf,w
  3045  0DCF  1383               	bcf	3,7	;select IRP bank0
  3046  0DD0  0080               	movwf	0
  3047  0DD1                     l3962:
  3048  0DD1  3001               	movlw	1
  3049  0DD2  00B9               	movwf	??_sprintf
  3050  0DD3  0839               	movf	??_sprintf,w
  3051  0DD4  07C4               	addwf	sprintf@sp,f
  3052                           
  3053                           ;doprnt.c: 559: continue;
  3054  0DD5  2FE9               	goto	l4054
  3055  0DD6                     l3964:
  3056                           
  3057                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  3058  0DD6  01C5               	clrf	sprintf@width
  3059  0DD7  01C6               	clrf	sprintf@width+1
  3060                           
  3061                           ;doprnt.c: 565: flag = 0;
  3062  0DD8  01BE               	clrf	sprintf@flag
  3063  0DD9                     l3966:
  3064                           
  3065                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  3066  0DD9  0830               	movf	sprintf@f,w
  3067  0DDA  0084               	movwf	4
  3068  0DDB  160A  118A  2000  120A  158A  	fcall	stringdir
  3069  0DE0  160A  118A  2260  120A  158A  	fcall	_isdigit
  3070  0DE5  1C03               	btfss	3,0
  3071  0DE6  2DE8               	goto	u5591
  3072  0DE7  2DE9               	goto	u5590
  3073  0DE8                     u5591:
  3074  0DE8  2E29               	goto	l3978
  3075  0DE9                     u5590:
  3076  0DE9                     l3968:
  3077                           
  3078                           ;doprnt.c: 615: width = 0;
  3079  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0DEB  01C5               	clrf	sprintf@width
  3082  0DEC  01C6               	clrf	sprintf@width+1
  3083  0DED                     l3970:
  3084                           
  3085                           ;doprnt.c: 617: width *= 10;
  3086  0DED  300A               	movlw	10
  3087  0DEE  00F2               	movwf	___wmul@multiplier
  3088  0DEF  3000               	movlw	0
  3089  0DF0  00F3               	movwf	___wmul@multiplier+1
  3090  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  3092  0DF3  0846               	movf	sprintf@width+1,w
  3093  0DF4  00F5               	movwf	___wmul@multiplicand+1
  3094  0DF5  0845               	movf	sprintf@width,w
  3095  0DF6  00F4               	movwf	___wmul@multiplicand
  3096  0DF7  160A  118A  231D  120A  158A  	fcall	___wmul
  3097  0DFC  0873               	movf	?___wmul+1,w
  3098  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  3100  0DFF  00C6               	movwf	sprintf@width+1
  3101  0E00  0872               	movf	?___wmul,w
  3102  0E01  00C5               	movwf	sprintf@width
  3103  0E02                     l3972:
  3104                           
  3105                           ;doprnt.c: 618: width += *f++ - '0';
  3106  0E02  0830               	movf	sprintf@f,w
  3107  0E03  0084               	movwf	4
  3108  0E04  160A  118A  2000  120A  158A  	fcall	stringdir
  3109  0E09  3ED0               	addlw	208
  3110  0E0A  00B9               	movwf	??_sprintf
  3111  0E0B  30FF               	movlw	255
  3112  0E0C  1803               	skipnc
  3113  0E0D  3000               	movlw	0
  3114  0E0E  00BA               	movwf	??_sprintf+1
  3115  0E0F  0839               	movf	??_sprintf,w
  3116  0E10  07C5               	addwf	sprintf@width,f
  3117  0E11  1803               	skipnc
  3118  0E12  0AC6               	incf	sprintf@width+1,f
  3119  0E13  083A               	movf	??_sprintf+1,w
  3120  0E14  07C6               	addwf	sprintf@width+1,f
  3121  0E15                     l3974:
  3122  0E15  3001               	movlw	1
  3123  0E16  00B9               	movwf	??_sprintf
  3124  0E17  0839               	movf	??_sprintf,w
  3125  0E18  07B0               	addwf	sprintf@f,f
  3126  0E19                     l3976:
  3127                           
  3128                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  3129  0E19  0830               	movf	sprintf@f,w
  3130  0E1A  0084               	movwf	4
  3131  0E1B  160A  118A  2000  120A  158A  	fcall	stringdir
  3132  0E20  160A  118A  2260  120A  158A  	fcall	_isdigit
  3133  0E25  1803               	btfsc	3,0
  3134  0E26  2E28               	goto	u5601
  3135  0E27  2E29               	goto	u5600
  3136  0E28                     u5601:
  3137  0E28  2DED               	goto	l3970
  3138  0E29                     u5600:
  3139  0E29                     l3978:
  3140                           
  3141                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  3142  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0E2B  0830               	movf	sprintf@f,w
  3145  0E2C  0084               	movwf	4
  3146  0E2D  160A  118A  2000  120A  158A  	fcall	stringdir
  3147  0E32  3A2E               	xorlw	46
  3148  0E33  1D03               	skipz
  3149  0E34  2E36               	goto	u5611
  3150  0E35  2E37               	goto	u5610
  3151  0E36                     u5611:
  3152  0E36  2E7B               	goto	l3992
  3153  0E37                     u5610:
  3154  0E37                     l3980:
  3155                           
  3156                           ;doprnt.c: 630: f++;
  3157  0E37  3001               	movlw	1
  3158  0E38  00B9               	movwf	??_sprintf
  3159  0E39  0839               	movf	??_sprintf,w
  3160  0E3A  07B0               	addwf	sprintf@f,f
  3161  0E3B                     l3982:
  3162                           
  3163                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  3164  0E3B  01C7               	clrf	sprintf@prec
  3165  0E3C  01C8               	clrf	sprintf@prec+1
  3166                           
  3167                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  3168  0E3D  2E6A               	goto	l3990
  3169  0E3E                     l3984:
  3170                           
  3171                           ;doprnt.c: 647: prec *= 10;
  3172  0E3E  300A               	movlw	10
  3173  0E3F  00F2               	movwf	___wmul@multiplier
  3174  0E40  3000               	movlw	0
  3175  0E41  00F3               	movwf	___wmul@multiplier+1
  3176  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0E44  0848               	movf	sprintf@prec+1,w
  3179  0E45  00F5               	movwf	___wmul@multiplicand+1
  3180  0E46  0847               	movf	sprintf@prec,w
  3181  0E47  00F4               	movwf	___wmul@multiplicand
  3182  0E48  160A  118A  231D  120A  158A  	fcall	___wmul
  3183  0E4D  0873               	movf	?___wmul+1,w
  3184  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0E50  00C8               	movwf	sprintf@prec+1
  3187  0E51  0872               	movf	?___wmul,w
  3188  0E52  00C7               	movwf	sprintf@prec
  3189  0E53                     l3986:
  3190                           
  3191                           ;doprnt.c: 648: prec += *f++ - '0';
  3192  0E53  0830               	movf	sprintf@f,w
  3193  0E54  0084               	movwf	4
  3194  0E55  160A  118A  2000  120A  158A  	fcall	stringdir
  3195  0E5A  3ED0               	addlw	208
  3196  0E5B  00B9               	movwf	??_sprintf
  3197  0E5C  30FF               	movlw	255
  3198  0E5D  1803               	skipnc
  3199  0E5E  3000               	movlw	0
  3200  0E5F  00BA               	movwf	??_sprintf+1
  3201  0E60  0839               	movf	??_sprintf,w
  3202  0E61  07C7               	addwf	sprintf@prec,f
  3203  0E62  1803               	skipnc
  3204  0E63  0AC8               	incf	sprintf@prec+1,f
  3205  0E64  083A               	movf	??_sprintf+1,w
  3206  0E65  07C8               	addwf	sprintf@prec+1,f
  3207  0E66                     l3988:
  3208  0E66  3001               	movlw	1
  3209  0E67  00B9               	movwf	??_sprintf
  3210  0E68  0839               	movf	??_sprintf,w
  3211  0E69  07B0               	addwf	sprintf@f,f
  3212  0E6A                     l3990:
  3213  0E6A  0830               	movf	sprintf@f,w
  3214  0E6B  0084               	movwf	4
  3215  0E6C  160A  118A  2000  120A  158A  	fcall	stringdir
  3216  0E71  160A  118A  2260  120A  158A  	fcall	_isdigit
  3217  0E76  1803               	btfsc	3,0
  3218  0E77  2E79               	goto	u5621
  3219  0E78  2E7A               	goto	u5620
  3220  0E79                     u5621:
  3221  0E79  2E3E               	goto	l3984
  3222  0E7A                     u5620:
  3223  0E7A  2E85               	goto	l3998
  3224  0E7B                     l3992:
  3225                           
  3226                           ;doprnt.c: 652: prec = 0;
  3227  0E7B  01C7               	clrf	sprintf@prec
  3228  0E7C  01C8               	clrf	sprintf@prec+1
  3229  0E7D  2E85               	goto	l3998
  3230  0E7E                     l923:	
  3231                           ;doprnt.c: 667: case 'l':
  3232                           
  3233                           
  3234                           ;doprnt.c: 669: flag |= 0x10;
  3235  0E7E  163E               	bsf	sprintf@flag,4
  3236                           
  3237                           ;doprnt.c: 670: goto loop;
  3238  0E7F  2E85               	goto	l3998
  3239  0E80                     l3994:
  3240                           
  3241                           ;doprnt.c: 844: flag |= 0xC0;
  3242  0E80  30C0               	movlw	192
  3243  0E81  00B9               	movwf	??_sprintf
  3244  0E82  0839               	movf	??_sprintf,w
  3245  0E83  04BE               	iorwf	sprintf@flag,f
  3246                           
  3247                           ;doprnt.c: 845: break;
  3248  0E84  2E9C               	goto	l926
  3249  0E85                     l3998:
  3250  0E85  3001               	movlw	1
  3251  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0E88  07B0               	addwf	sprintf@f,f
  3254  0E89  30FF               	movlw	-1
  3255  0E8A  0730               	addwf	sprintf@f,w
  3256  0E8B  0084               	movwf	4
  3257  0E8C  160A  118A  2000  120A  158A  	fcall	stringdir
  3258  0E91  00C9               	movwf	sprintf@c
  3259                           
  3260                           ; Switch size 1, requested type "simple"
  3261                           ; Number of cases is 3, Range of values is 0 to 117
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte           10     6 (average)
  3265                           ; jumptable            260     6 (fixed)
  3266                           ;	Chosen strategy is simple_byte
  3267  0E92  3A00               	xorlw	0	; case 0
  3268  0E93  1903               	skipnz
  3269  0E94  2FFB               	goto	l4056
  3270  0E95  3A6C               	xorlw	108	; case 108
  3271  0E96  1903               	skipnz
  3272  0E97  2E7E               	goto	l923
  3273  0E98  3A19               	xorlw	25	; case 117
  3274  0E99  1903               	skipnz
  3275  0E9A  2E80               	goto	l3994
  3276  0E9B  2FE9               	goto	l4054
  3277  0E9C                     l926:
  3278                           
  3279                           ;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  3280  0E9C  1E3E               	btfss	sprintf@flag,4
  3281  0E9D  2E9F               	goto	u5631
  3282  0E9E  2EA0               	goto	u5630
  3283  0E9F                     u5631:
  3284  0E9F  2EB3               	goto	l4004
  3285  0EA0                     u5630:
  3286  0EA0                     l4000:
  3287                           
  3288                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  3289  0EA0  083F               	movf	sprintf@ap,w
  3290  0EA1  0084               	movwf	4
  3291  0EA2  1383               	bcf	3,7	;select IRP bank0
  3292  0EA3  0800               	movf	0,w
  3293  0EA4  00C0               	movwf	sprintf@val
  3294  0EA5  0A84               	incf	4,f
  3295  0EA6  0800               	movf	0,w
  3296  0EA7  00C1               	movwf	sprintf@val+1
  3297  0EA8  0A84               	incf	4,f
  3298  0EA9  0800               	movf	0,w
  3299  0EAA  00C2               	movwf	sprintf@val+2
  3300  0EAB  0A84               	incf	4,f
  3301  0EAC  0800               	movf	0,w
  3302  0EAD  00C3               	movwf	sprintf@val+3
  3303  0EAE                     l4002:
  3304  0EAE  3004               	movlw	4
  3305  0EAF  00B9               	movwf	??_sprintf
  3306  0EB0  0839               	movf	??_sprintf,w
  3307  0EB1  07BF               	addwf	sprintf@ap,f
  3308  0EB2  2EC5               	goto	l4008
  3309  0EB3                     l4004:
  3310                           
  3311                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  3312  0EB3  083F               	movf	sprintf@ap,w
  3313  0EB4  0084               	movwf	4
  3314  0EB5  1383               	bcf	3,7	;select IRP bank0
  3315  0EB6  0800               	movf	0,w
  3316  0EB7  00B9               	movwf	??_sprintf
  3317  0EB8  0A84               	incf	4,f
  3318  0EB9  0800               	movf	0,w
  3319  0EBA  00BA               	movwf	??_sprintf+1
  3320  0EBB  0839               	movf	??_sprintf,w
  3321  0EBC  00C0               	movwf	sprintf@val
  3322  0EBD  083A               	movf	??_sprintf+1,w
  3323  0EBE  00C1               	movwf	sprintf@val+1
  3324  0EBF  01C2               	clrf	sprintf@val+2
  3325  0EC0  01C3               	clrf	sprintf@val+3
  3326  0EC1                     l4006:
  3327  0EC1  3002               	movlw	2
  3328  0EC2  00B9               	movwf	??_sprintf
  3329  0EC3  0839               	movf	??_sprintf,w
  3330  0EC4  07BF               	addwf	sprintf@ap,f
  3331  0EC5                     l4008:
  3332                           
  3333                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  3334  0EC5  0847               	movf	sprintf@prec,w
  3335  0EC6  0448               	iorwf	sprintf@prec+1,w
  3336  0EC7  1D03               	btfss	3,2
  3337  0EC8  2ECA               	goto	u5641
  3338  0EC9  2ECB               	goto	u5640
  3339  0ECA                     u5641:
  3340  0ECA  2ED9               	goto	l4014
  3341  0ECB                     u5640:
  3342  0ECB                     l4010:
  3343  0ECB  0843               	movf	sprintf@val+3,w
  3344  0ECC  0442               	iorwf	sprintf@val+2,w
  3345  0ECD  0441               	iorwf	sprintf@val+1,w
  3346  0ECE  0440               	iorwf	sprintf@val,w
  3347  0ECF  1D03               	skipz
  3348  0ED0  2ED2               	goto	u5651
  3349  0ED1  2ED3               	goto	u5650
  3350  0ED2                     u5651:
  3351  0ED2  2ED9               	goto	l4014
  3352  0ED3                     u5650:
  3353  0ED3                     l4012:
  3354                           
  3355                           ;doprnt.c: 1317: prec++;
  3356  0ED3  3001               	movlw	1
  3357  0ED4  07C7               	addwf	sprintf@prec,f
  3358  0ED5  1803               	skipnc
  3359  0ED6  0AC8               	incf	sprintf@prec+1,f
  3360  0ED7  3000               	movlw	0
  3361  0ED8  07C8               	addwf	sprintf@prec+1,f
  3362  0ED9                     l4014:
  3363                           
  3364                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3365  0ED9  01C9               	clrf	sprintf@c
  3366  0EDA  0AC9               	incf	sprintf@c,f
  3367  0EDB                     l4020:
  3368                           
  3369                           ;doprnt.c: 1332: if(val < dpowers[c])
  3370  0EDB  0849               	movf	sprintf@c,w
  3371  0EDC  00B9               	movwf	??_sprintf
  3372  0EDD  3001               	movlw	1
  3373  0EDE                     u5665:
  3374  0EDE  1003               	clrc
  3375  0EDF  0DB9               	rlf	??_sprintf,f
  3376  0EE0  3EFF               	addlw	-1
  3377  0EE1  1D03               	skipz
  3378  0EE2  2EDE               	goto	u5665
  3379  0EE3  1003               	clrc
  3380  0EE4  0D39               	rlf	??_sprintf,w
  3381  0EE5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3382  0EE6  0084               	movwf	4
  3383  0EE7  160A  118A  2000  120A  158A  	fcall	stringdir
  3384  0EEC  00BA               	movwf	??_sprintf+1
  3385  0EED  160A  118A  2000  120A  158A  	fcall	stringdir
  3386  0EF2  00BB               	movwf	??_sprintf+2
  3387  0EF3  160A  118A  2000  120A  158A  	fcall	stringdir
  3388  0EF8  00BC               	movwf	??_sprintf+3
  3389  0EF9  160A  118A  2000  120A  158A  	fcall	stringdir
  3390  0EFE  00BD               	movwf	??_sprintf+4
  3391  0EFF  083D               	movf	??_sprintf+4,w
  3392  0F00  0243               	subwf	sprintf@val+3,w
  3393  0F01  1D03               	skipz
  3394  0F02  2F0D               	goto	u5675
  3395  0F03  083C               	movf	??_sprintf+3,w
  3396  0F04  0242               	subwf	sprintf@val+2,w
  3397  0F05  1D03               	skipz
  3398  0F06  2F0D               	goto	u5675
  3399  0F07  083B               	movf	??_sprintf+2,w
  3400  0F08  0241               	subwf	sprintf@val+1,w
  3401  0F09  1D03               	skipz
  3402  0F0A  2F0D               	goto	u5675
  3403  0F0B  083A               	movf	??_sprintf+1,w
  3404  0F0C  0240               	subwf	sprintf@val,w
  3405  0F0D                     u5675:
  3406  0F0D  1803               	skipnc
  3407  0F0E  2F10               	goto	u5671
  3408  0F0F  2F11               	goto	u5670
  3409  0F10                     u5671:
  3410  0F10  2F12               	goto	l4024
  3411  0F11                     u5670:
  3412  0F11  2F1C               	goto	l4026
  3413  0F12                     l4024:
  3414  0F12  3001               	movlw	1
  3415  0F13  00B9               	movwf	??_sprintf
  3416  0F14  0839               	movf	??_sprintf,w
  3417  0F15  07C9               	addwf	sprintf@c,f
  3418  0F16  300A               	movlw	10
  3419  0F17  0649               	xorwf	sprintf@c,w
  3420  0F18  1D03               	btfss	3,2
  3421  0F19  2F1B               	goto	u5681
  3422  0F1A  2F1C               	goto	u5680
  3423  0F1B                     u5681:
  3424  0F1B  2EDB               	goto	l4020
  3425  0F1C                     u5680:
  3426  0F1C                     l4026:
  3427                           
  3428                           ;doprnt.c: 1365: if(c < prec)
  3429  0F1C  0848               	movf	sprintf@prec+1,w
  3430  0F1D  3A80               	xorlw	128
  3431  0F1E  3C80               	sublw	128
  3432  0F1F  1D03               	skipz
  3433  0F20  2F23               	goto	u5695
  3434  0F21  0847               	movf	sprintf@prec,w
  3435  0F22  0249               	subwf	sprintf@c,w
  3436  0F23                     u5695:
  3437  0F23  1803               	skipnc
  3438  0F24  2F26               	goto	u5691
  3439  0F25  2F27               	goto	u5690
  3440  0F26                     u5691:
  3441  0F26  2F2E               	goto	l4030
  3442  0F27                     u5690:
  3443  0F27                     l4028:
  3444                           
  3445                           ;doprnt.c: 1366: c = (char)prec;
  3446  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0F29  0847               	movf	sprintf@prec,w
  3449  0F2A  00B9               	movwf	??_sprintf
  3450  0F2B  0839               	movf	??_sprintf,w
  3451  0F2C  00C9               	movwf	sprintf@c
  3452  0F2D  2F46               	goto	l934
  3453  0F2E                     l4030:
  3454                           
  3455                           ;doprnt.c: 1367: else if(prec < c)
  3456  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0F30  0848               	movf	sprintf@prec+1,w
  3459  0F31  3A80               	xorlw	128
  3460  0F32  00B9               	movwf	??_sprintf
  3461  0F33  3080               	movlw	128
  3462  0F34  0239               	subwf	??_sprintf,w
  3463  0F35  1D03               	skipz
  3464  0F36  2F39               	goto	u5705
  3465  0F37  0849               	movf	sprintf@c,w
  3466  0F38  0247               	subwf	sprintf@prec,w
  3467  0F39                     u5705:
  3468  0F39  1803               	skipnc
  3469  0F3A  2F3C               	goto	u5701
  3470  0F3B  2F3D               	goto	u5700
  3471  0F3C                     u5701:
  3472  0F3C  2F46               	goto	l934
  3473  0F3D                     u5700:
  3474  0F3D                     l4032:
  3475                           
  3476                           ;doprnt.c: 1368: prec = c;
  3477  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0F3F  0849               	movf	sprintf@c,w
  3480  0F40  00B9               	movwf	??_sprintf
  3481  0F41  01BA               	clrf	??_sprintf+1
  3482  0F42  0839               	movf	??_sprintf,w
  3483  0F43  00C7               	movwf	sprintf@prec
  3484  0F44  083A               	movf	??_sprintf+1,w
  3485  0F45  00C8               	movwf	sprintf@prec+1
  3486  0F46                     l934:
  3487                           
  3488                           ;doprnt.c: 1407: if(width > c)
  3489  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0F48  0846               	movf	sprintf@width+1,w
  3492  0F49  3A80               	xorlw	128
  3493  0F4A  3C80               	sublw	128
  3494  0F4B  1D03               	skipz
  3495  0F4C  2F4F               	goto	u5715
  3496  0F4D  0845               	movf	sprintf@width,w
  3497  0F4E  0249               	subwf	sprintf@c,w
  3498  0F4F                     u5715:
  3499  0F4F  1803               	skipnc
  3500  0F50  2F52               	goto	u5711
  3501  0F51  2F53               	goto	u5710
  3502  0F52                     u5711:
  3503  0F52  2F5F               	goto	l4036
  3504  0F53                     u5710:
  3505  0F53                     l4034:
  3506                           
  3507                           ;doprnt.c: 1408: width -= c;
  3508  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0F55  0849               	movf	sprintf@c,w
  3511  0F56  00B9               	movwf	??_sprintf
  3512  0F57  01BA               	clrf	??_sprintf+1
  3513  0F58  0839               	movf	??_sprintf,w
  3514  0F59  02C5               	subwf	sprintf@width,f
  3515  0F5A  083A               	movf	??_sprintf+1,w
  3516  0F5B  1C03               	skipc
  3517  0F5C  03C6               	decf	sprintf@width+1,f
  3518  0F5D  02C6               	subwf	sprintf@width+1,f
  3519  0F5E  2F63               	goto	l4038
  3520  0F5F                     l4036:
  3521                           
  3522                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  3523  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0F61  01C5               	clrf	sprintf@width
  3526  0F62  01C6               	clrf	sprintf@width+1
  3527  0F63                     l4038:
  3528                           
  3529                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  3530  0F63  0845               	movf	sprintf@width,w
  3531  0F64  0446               	iorwf	sprintf@width+1,w
  3532  0F65  1903               	btfsc	3,2
  3533  0F66  2F68               	goto	u5721
  3534  0F67  2F69               	goto	u5720
  3535  0F68                     u5721:
  3536  0F68  2FDB               	goto	l4052
  3537  0F69                     u5720:
  3538  0F69                     l4040:
  3539                           
  3540                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  3541  0F69  3020               	movlw	32
  3542  0F6A  00B9               	movwf	??_sprintf
  3543  0F6B  0844               	movf	sprintf@sp,w
  3544  0F6C  0084               	movwf	4
  3545  0F6D  0839               	movf	??_sprintf,w
  3546  0F6E  1383               	bcf	3,7	;select IRP bank0
  3547  0F6F  0080               	movwf	0
  3548  0F70                     l4042:
  3549  0F70  3001               	movlw	1
  3550  0F71  00B9               	movwf	??_sprintf
  3551  0F72  0839               	movf	??_sprintf,w
  3552  0F73  07C4               	addwf	sprintf@sp,f
  3553  0F74                     l4044:
  3554                           
  3555                           ;doprnt.c: 1457: while(--width);
  3556  0F74  30FF               	movlw	255
  3557  0F75  07C5               	addwf	sprintf@width,f
  3558  0F76  1803               	skipnc
  3559  0F77  0AC6               	incf	sprintf@width+1,f
  3560  0F78  30FF               	movlw	255
  3561  0F79  07C6               	addwf	sprintf@width+1,f
  3562  0F7A  0845               	movf	sprintf@width,w
  3563  0F7B  0446               	iorwf	sprintf@width+1,w
  3564  0F7C  1D03               	btfss	3,2
  3565  0F7D  2F7F               	goto	u5731
  3566  0F7E  2F80               	goto	u5730
  3567  0F7F                     u5731:
  3568  0F7F  2F69               	goto	l4040
  3569  0F80                     u5730:
  3570  0F80  2FDB               	goto	l4052
  3571  0F81                     l4046:
  3572                           
  3573                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  3574  0F81  3000               	movlw	0
  3575  0F82  00A9               	movwf	___llmod@divisor+3
  3576  0F83  3000               	movlw	0
  3577  0F84  00A8               	movwf	___llmod@divisor+2
  3578  0F85  3000               	movlw	0
  3579  0F86  00A7               	movwf	___llmod@divisor+1
  3580  0F87  300A               	movlw	10
  3581  0F88  00A6               	movwf	___llmod@divisor
  3582  0F89  0847               	movf	sprintf@prec,w
  3583  0F8A  00B9               	movwf	??_sprintf
  3584  0F8B  3001               	movlw	1
  3585  0F8C                     u5745:
  3586  0F8C  1003               	clrc
  3587  0F8D  0DB9               	rlf	??_sprintf,f
  3588  0F8E  3EFF               	addlw	-1
  3589  0F8F  1D03               	skipz
  3590  0F90  2F8C               	goto	u5745
  3591  0F91  1003               	clrc
  3592  0F92  0D39               	rlf	??_sprintf,w
  3593  0F93  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3594  0F94  0084               	movwf	4
  3595  0F95  160A  118A  2000  120A  158A  	fcall	stringdir
  3596  0F9A  00F2               	movwf	___lldiv@divisor
  3597  0F9B  160A  118A  2000  120A  158A  	fcall	stringdir
  3598  0FA0  00F3               	movwf	___lldiv@divisor+1
  3599  0FA1  160A  118A  2000  120A  158A  	fcall	stringdir
  3600  0FA6  00F4               	movwf	___lldiv@divisor+2
  3601  0FA7  160A  118A  2000  120A  158A  	fcall	stringdir
  3602  0FAC  00F5               	movwf	___lldiv@divisor+3
  3603  0FAD  0843               	movf	sprintf@val+3,w
  3604  0FAE  00F9               	movwf	___lldiv@dividend+3
  3605  0FAF  0842               	movf	sprintf@val+2,w
  3606  0FB0  00F8               	movwf	___lldiv@dividend+2
  3607  0FB1  0841               	movf	sprintf@val+1,w
  3608  0FB2  00F7               	movwf	___lldiv@dividend+1
  3609  0FB3  0840               	movf	sprintf@val,w
  3610  0FB4  00F6               	movwf	___lldiv@dividend
  3611  0FB5  160A  118A  26B3  120A  158A  	fcall	___lldiv
  3612  0FBA  0875               	movf	?___lldiv+3,w
  3613  0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0FBD  00AD               	movwf	___llmod@dividend+3
  3616  0FBE  0874               	movf	?___lldiv+2,w
  3617  0FBF  00AC               	movwf	___llmod@dividend+2
  3618  0FC0  0873               	movf	?___lldiv+1,w
  3619  0FC1  00AB               	movwf	___llmod@dividend+1
  3620  0FC2  0872               	movf	?___lldiv,w
  3621  0FC3  00AA               	movwf	___llmod@dividend
  3622  0FC4  160A  118A  2604  120A  158A  	fcall	___llmod
  3623  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0FCB  0826               	movf	?___llmod,w
  3626  0FCC  3E30               	addlw	48
  3627  0FCD  00BA               	movwf	??_sprintf+1
  3628  0FCE  083A               	movf	??_sprintf+1,w
  3629  0FCF  00C9               	movwf	sprintf@c
  3630  0FD0                     l4048:
  3631                           
  3632                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3633  0FD0  0849               	movf	sprintf@c,w
  3634  0FD1  00B9               	movwf	??_sprintf
  3635  0FD2  0844               	movf	sprintf@sp,w
  3636  0FD3  0084               	movwf	4
  3637  0FD4  0839               	movf	??_sprintf,w
  3638  0FD5  1383               	bcf	3,7	;select IRP bank0
  3639  0FD6  0080               	movwf	0
  3640  0FD7                     l4050:
  3641  0FD7  3001               	movlw	1
  3642  0FD8  00B9               	movwf	??_sprintf
  3643  0FD9  0839               	movf	??_sprintf,w
  3644  0FDA  07C4               	addwf	sprintf@sp,f
  3645  0FDB                     l4052:
  3646  0FDB  30FF               	movlw	255
  3647  0FDC  07C7               	addwf	sprintf@prec,f
  3648  0FDD  1803               	skipnc
  3649  0FDE  0AC8               	incf	sprintf@prec+1,f
  3650  0FDF  30FF               	movlw	255
  3651  0FE0  07C8               	addwf	sprintf@prec+1,f
  3652  0FE1  0A47               	incf	sprintf@prec,w
  3653  0FE2  1D03               	skipz
  3654  0FE3  2FE8               	goto	u5751
  3655  0FE4  0A48               	incf	sprintf@prec+1,w
  3656  0FE5  1D03               	btfss	3,2
  3657  0FE6  2FE8               	goto	u5751
  3658  0FE7  2FE9               	goto	u5750
  3659  0FE8                     u5751:
  3660  0FE8  2F81               	goto	l4046
  3661  0FE9                     u5750:
  3662  0FE9                     l4054:
  3663  0FE9  3001               	movlw	1
  3664  0FEA  07B0               	addwf	sprintf@f,f
  3665  0FEB  30FF               	movlw	-1
  3666  0FEC  0730               	addwf	sprintf@f,w
  3667  0FED  0084               	movwf	4
  3668  0FEE  160A  118A  2000  120A  158A  	fcall	stringdir
  3669  0FF3  00B9               	movwf	??_sprintf
  3670  0FF4  0839               	movf	??_sprintf,w
  3671  0FF5  00C9               	movwf	sprintf@c
  3672  0FF6  0849               	movf	sprintf@c,w
  3673  0FF7  1D03               	btfss	3,2
  3674  0FF8  2FFA               	goto	u5761
  3675  0FF9  2FFB               	goto	u5760
  3676  0FFA                     u5761:
  3677  0FFA  2DC4               	goto	l3958
  3678  0FFB                     u5760:
  3679  0FFB                     l4056:
  3680                           
  3681                           ;doprnt.c: 1564: *sp = 0;
  3682  0FFB  0844               	movf	sprintf@sp,w
  3683  0FFC  0084               	movwf	4
  3684  0FFD  1383               	bcf	3,7	;select IRP bank0
  3685  0FFE  0180               	clrf	0
  3686  0FFF                     l945:
  3687  0FFF  0008               	return
  3688  1000                     __end_of_sprintf:
  3689                           
  3690                           	psect	text7
  3691  1260                     __ptext7:	
  3692 ;; *************** function _isdigit *****************
  3693 ;; Defined at:
  3694 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/isdigit.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  c               1    wreg     unsigned char 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  c               1    3[COMMON] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;		None               void
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0       0       0       0       0
  3709 ;;      Locals:         2       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0
  3711 ;;      Totals:         2       0       0       0       0
  3712 ;;Total ram usage:        2 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; Hardware stack levels required when called: 1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_sprintf
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function _isdigit
  3724  1260                     _isdigit:
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3728                           ;isdigit@c stored from wreg
  3729  1260  00F3               	movwf	isdigit@c
  3730  1261                     l2618:
  3731  1261  01F2               	clrf	_isdigit$814
  3732  1262                     l2620:
  3733  1262  303A               	movlw	58
  3734  1263  0273               	subwf	isdigit@c,w
  3735  1264  1803               	skipnc
  3736  1265  2A67               	goto	u3041
  3737  1266  2A68               	goto	u3040
  3738  1267                     u3041:
  3739  1267  2A70               	goto	l2626
  3740  1268                     u3040:
  3741  1268                     l2622:
  3742  1268  3030               	movlw	48
  3743  1269  0273               	subwf	isdigit@c,w
  3744  126A  1C03               	skipc
  3745  126B  2A6D               	goto	u3051
  3746  126C  2A6E               	goto	u3050
  3747  126D                     u3051:
  3748  126D  2A70               	goto	l2626
  3749  126E                     u3050:
  3750  126E                     l2624:
  3751  126E  01F2               	clrf	_isdigit$814
  3752  126F  0AF2               	incf	_isdigit$814,f
  3753  1270                     l2626:
  3754  1270  0C72               	rrf	_isdigit$814,w
  3755  1271                     l950:
  3756  1271  0008               	return
  3757  1272                     __end_of_isdigit:
  3758                           
  3759                           	psect	text8
  3760  1604                     __ptext8:	
  3761 ;; *************** function ___llmod *****************
  3762 ;; Defined at:
  3763 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/llmod.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  divisor         4    6[BANK0 ] unsigned long 
  3766 ;;  dividend        4   10[BANK0 ] unsigned long 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  counter         1   15[BANK0 ] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  4    6[BANK0 ] unsigned long 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         0       8       0       0       0
  3779 ;;      Locals:         0       1       0       0       0
  3780 ;;      Temps:          0       1       0       0       0
  3781 ;;      Totals:         0      10       0       0       0
  3782 ;;Total ram usage:       10 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 1
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_sprintf
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           
  3793                           ;psect for function ___llmod
  3794  1604                     ___llmod:
  3795  1604                     l3624:	
  3796                           ;incstack = 0
  3797                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3798                           
  3799  1604  1283               	bcf	3,5	;RP0=0, select bank0
  3800  1605  1303               	bcf	3,6	;RP1=0, select bank0
  3801  1606  0829               	movf	___llmod@divisor+3,w
  3802  1607  0428               	iorwf	___llmod@divisor+2,w
  3803  1608  0427               	iorwf	___llmod@divisor+1,w
  3804  1609  0426               	iorwf	___llmod@divisor,w
  3805  160A  1903               	skipnz
  3806  160B  2E0D               	goto	u4731
  3807  160C  2E0E               	goto	u4730
  3808  160D                     u4731:
  3809  160D  2E51               	goto	l3640
  3810  160E                     u4730:
  3811  160E                     l3626:
  3812  160E  01AF               	clrf	___llmod@counter
  3813  160F  0AAF               	incf	___llmod@counter,f
  3814  1610  2E1E               	goto	l3630
  3815  1611                     l3628:
  3816  1611  3001               	movlw	1
  3817  1612  00AE               	movwf	??___llmod
  3818  1613                     u4745:
  3819  1613  1003               	clrc
  3820  1614  0DA6               	rlf	___llmod@divisor,f
  3821  1615  0DA7               	rlf	___llmod@divisor+1,f
  3822  1616  0DA8               	rlf	___llmod@divisor+2,f
  3823  1617  0DA9               	rlf	___llmod@divisor+3,f
  3824  1618  0BAE               	decfsz	??___llmod,f
  3825  1619  2E13               	goto	u4745
  3826  161A  3001               	movlw	1
  3827  161B  00AE               	movwf	??___llmod
  3828  161C  082E               	movf	??___llmod,w
  3829  161D  07AF               	addwf	___llmod@counter,f
  3830  161E                     l3630:
  3831  161E  1FA9               	btfss	___llmod@divisor+3,7
  3832  161F  2E21               	goto	u4751
  3833  1620  2E22               	goto	u4750
  3834  1621                     u4751:
  3835  1621  2E11               	goto	l3628
  3836  1622                     u4750:
  3837  1622                     l3632:
  3838  1622  0829               	movf	___llmod@divisor+3,w
  3839  1623  022D               	subwf	___llmod@dividend+3,w
  3840  1624  1D03               	skipz
  3841  1625  2E30               	goto	u4765
  3842  1626  0828               	movf	___llmod@divisor+2,w
  3843  1627  022C               	subwf	___llmod@dividend+2,w
  3844  1628  1D03               	skipz
  3845  1629  2E30               	goto	u4765
  3846  162A  0827               	movf	___llmod@divisor+1,w
  3847  162B  022B               	subwf	___llmod@dividend+1,w
  3848  162C  1D03               	skipz
  3849  162D  2E30               	goto	u4765
  3850  162E  0826               	movf	___llmod@divisor,w
  3851  162F  022A               	subwf	___llmod@dividend,w
  3852  1630                     u4765:
  3853  1630  1C03               	skipc
  3854  1631  2E33               	goto	u4761
  3855  1632  2E34               	goto	u4760
  3856  1633                     u4761:
  3857  1633  2E42               	goto	l3636
  3858  1634                     u4760:
  3859  1634                     l3634:
  3860  1634  0826               	movf	___llmod@divisor,w
  3861  1635  02AA               	subwf	___llmod@dividend,f
  3862  1636  0827               	movf	___llmod@divisor+1,w
  3863  1637  1C03               	skipc
  3864  1638  0F27               	incfsz	___llmod@divisor+1,w
  3865  1639  02AB               	subwf	___llmod@dividend+1,f
  3866  163A  0828               	movf	___llmod@divisor+2,w
  3867  163B  1C03               	skipc
  3868  163C  0F28               	incfsz	___llmod@divisor+2,w
  3869  163D  02AC               	subwf	___llmod@dividend+2,f
  3870  163E  0829               	movf	___llmod@divisor+3,w
  3871  163F  1C03               	skipc
  3872  1640  0F29               	incfsz	___llmod@divisor+3,w
  3873  1641  02AD               	subwf	___llmod@dividend+3,f
  3874  1642                     l3636:
  3875  1642  3001               	movlw	1
  3876  1643                     u4775:
  3877  1643  1003               	clrc
  3878  1644  0CA9               	rrf	___llmod@divisor+3,f
  3879  1645  0CA8               	rrf	___llmod@divisor+2,f
  3880  1646  0CA7               	rrf	___llmod@divisor+1,f
  3881  1647  0CA6               	rrf	___llmod@divisor,f
  3882  1648  3EFF               	addlw	-1
  3883  1649  1D03               	skipz
  3884  164A  2E43               	goto	u4775
  3885  164B                     l3638:
  3886  164B  3001               	movlw	1
  3887  164C  02AF               	subwf	___llmod@counter,f
  3888  164D  1D03               	btfss	3,2
  3889  164E  2E50               	goto	u4781
  3890  164F  2E51               	goto	u4780
  3891  1650                     u4781:
  3892  1650  2E22               	goto	l3632
  3893  1651                     u4780:
  3894  1651                     l3640:
  3895  1651  082D               	movf	___llmod@dividend+3,w
  3896  1652  00A9               	movwf	?___llmod+3
  3897  1653  082C               	movf	___llmod@dividend+2,w
  3898  1654  00A8               	movwf	?___llmod+2
  3899  1655  082B               	movf	___llmod@dividend+1,w
  3900  1656  00A7               	movwf	?___llmod+1
  3901  1657  082A               	movf	___llmod@dividend,w
  3902  1658  00A6               	movwf	?___llmod
  3903  1659                     l663:
  3904  1659  0008               	return
  3905  165A                     __end_of___llmod:
  3906                           
  3907                           	psect	text9
  3908  16B3                     __ptext9:	
  3909 ;; *************** function ___lldiv *****************
  3910 ;; Defined at:
  3911 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/__lldiv.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  divisor         4    2[COMMON] unsigned long 
  3914 ;;  dividend        4    6[COMMON] unsigned long 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  quotient        4    1[BANK0 ] unsigned long 
  3917 ;;  counter         1    5[BANK0 ] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  4    2[COMMON] unsigned long 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         8       0       0       0       0
  3928 ;;      Locals:         0       5       0       0       0
  3929 ;;      Temps:          0       1       0       0       0
  3930 ;;      Totals:         8       6       0       0       0
  3931 ;;Total ram usage:       14 bytes
  3932 ;; Hardware stack levels used: 1
  3933 ;; Hardware stack levels required when called: 1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_sprintf
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           
  3942                           ;psect for function ___lldiv
  3943  16B3                     ___lldiv:
  3944  16B3                     l3600:	
  3945                           ;incstack = 0
  3946                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3947                           
  3948  16B3  3000               	movlw	0
  3949  16B4  1283               	bcf	3,5	;RP0=0, select bank0
  3950  16B5  1303               	bcf	3,6	;RP1=0, select bank0
  3951  16B6  00A4               	movwf	___lldiv@quotient+3
  3952  16B7  3000               	movlw	0
  3953  16B8  00A3               	movwf	___lldiv@quotient+2
  3954  16B9  3000               	movlw	0
  3955  16BA  00A2               	movwf	___lldiv@quotient+1
  3956  16BB  3000               	movlw	0
  3957  16BC  00A1               	movwf	___lldiv@quotient
  3958  16BD  0875               	movf	___lldiv@divisor+3,w
  3959  16BE  0474               	iorwf	___lldiv@divisor+2,w
  3960  16BF  0473               	iorwf	___lldiv@divisor+1,w
  3961  16C0  0472               	iorwf	___lldiv@divisor,w
  3962  16C1  1903               	skipnz
  3963  16C2  2EC4               	goto	u4661
  3964  16C3  2EC5               	goto	u4660
  3965  16C4                     u4661:
  3966  16C4  2F12               	goto	l3620
  3967  16C5                     u4660:
  3968  16C5                     l3602:
  3969  16C5  01A5               	clrf	___lldiv@counter
  3970  16C6  0AA5               	incf	___lldiv@counter,f
  3971  16C7  2ED5               	goto	l3606
  3972  16C8                     l3604:
  3973  16C8  3001               	movlw	1
  3974  16C9  00A0               	movwf	??___lldiv
  3975  16CA                     u4675:
  3976  16CA  1003               	clrc
  3977  16CB  0DF2               	rlf	___lldiv@divisor,f
  3978  16CC  0DF3               	rlf	___lldiv@divisor+1,f
  3979  16CD  0DF4               	rlf	___lldiv@divisor+2,f
  3980  16CE  0DF5               	rlf	___lldiv@divisor+3,f
  3981  16CF  0BA0               	decfsz	??___lldiv,f
  3982  16D0  2ECA               	goto	u4675
  3983  16D1  3001               	movlw	1
  3984  16D2  00A0               	movwf	??___lldiv
  3985  16D3  0820               	movf	??___lldiv,w
  3986  16D4  07A5               	addwf	___lldiv@counter,f
  3987  16D5                     l3606:
  3988  16D5  1FF5               	btfss	___lldiv@divisor+3,7
  3989  16D6  2ED8               	goto	u4681
  3990  16D7  2ED9               	goto	u4680
  3991  16D8                     u4681:
  3992  16D8  2EC8               	goto	l3604
  3993  16D9                     u4680:
  3994  16D9                     l3608:
  3995  16D9  3001               	movlw	1
  3996  16DA  00A0               	movwf	??___lldiv
  3997  16DB                     u4695:
  3998  16DB  1003               	clrc
  3999  16DC  0DA1               	rlf	___lldiv@quotient,f
  4000  16DD  0DA2               	rlf	___lldiv@quotient+1,f
  4001  16DE  0DA3               	rlf	___lldiv@quotient+2,f
  4002  16DF  0DA4               	rlf	___lldiv@quotient+3,f
  4003  16E0  0BA0               	decfsz	??___lldiv,f
  4004  16E1  2EDB               	goto	u4695
  4005  16E2                     l3610:
  4006  16E2  0875               	movf	___lldiv@divisor+3,w
  4007  16E3  0279               	subwf	___lldiv@dividend+3,w
  4008  16E4  1D03               	skipz
  4009  16E5  2EF0               	goto	u4705
  4010  16E6  0874               	movf	___lldiv@divisor+2,w
  4011  16E7  0278               	subwf	___lldiv@dividend+2,w
  4012  16E8  1D03               	skipz
  4013  16E9  2EF0               	goto	u4705
  4014  16EA  0873               	movf	___lldiv@divisor+1,w
  4015  16EB  0277               	subwf	___lldiv@dividend+1,w
  4016  16EC  1D03               	skipz
  4017  16ED  2EF0               	goto	u4705
  4018  16EE  0872               	movf	___lldiv@divisor,w
  4019  16EF  0276               	subwf	___lldiv@dividend,w
  4020  16F0                     u4705:
  4021  16F0  1C03               	skipc
  4022  16F1  2EF3               	goto	u4701
  4023  16F2  2EF4               	goto	u4700
  4024  16F3                     u4701:
  4025  16F3  2F03               	goto	l3616
  4026  16F4                     u4700:
  4027  16F4                     l3612:
  4028  16F4  0872               	movf	___lldiv@divisor,w
  4029  16F5  02F6               	subwf	___lldiv@dividend,f
  4030  16F6  0873               	movf	___lldiv@divisor+1,w
  4031  16F7  1C03               	skipc
  4032  16F8  0F73               	incfsz	___lldiv@divisor+1,w
  4033  16F9  02F7               	subwf	___lldiv@dividend+1,f
  4034  16FA  0874               	movf	___lldiv@divisor+2,w
  4035  16FB  1C03               	skipc
  4036  16FC  0F74               	incfsz	___lldiv@divisor+2,w
  4037  16FD  02F8               	subwf	___lldiv@dividend+2,f
  4038  16FE  0875               	movf	___lldiv@divisor+3,w
  4039  16FF  1C03               	skipc
  4040  1700  0F75               	incfsz	___lldiv@divisor+3,w
  4041  1701  02F9               	subwf	___lldiv@dividend+3,f
  4042  1702                     l3614:
  4043  1702  1421               	bsf	___lldiv@quotient,0
  4044  1703                     l3616:
  4045  1703  3001               	movlw	1
  4046  1704                     u4715:
  4047  1704  1003               	clrc
  4048  1705  0CF5               	rrf	___lldiv@divisor+3,f
  4049  1706  0CF4               	rrf	___lldiv@divisor+2,f
  4050  1707  0CF3               	rrf	___lldiv@divisor+1,f
  4051  1708  0CF2               	rrf	___lldiv@divisor,f
  4052  1709  3EFF               	addlw	-1
  4053  170A  1D03               	skipz
  4054  170B  2F04               	goto	u4715
  4055  170C                     l3618:
  4056  170C  3001               	movlw	1
  4057  170D  02A5               	subwf	___lldiv@counter,f
  4058  170E  1D03               	btfss	3,2
  4059  170F  2F11               	goto	u4721
  4060  1710  2F12               	goto	u4720
  4061  1711                     u4721:
  4062  1711  2ED9               	goto	l3608
  4063  1712                     u4720:
  4064  1712                     l3620:
  4065  1712  0824               	movf	___lldiv@quotient+3,w
  4066  1713  00F5               	movwf	?___lldiv+3
  4067  1714  0823               	movf	___lldiv@quotient+2,w
  4068  1715  00F4               	movwf	?___lldiv+2
  4069  1716  0822               	movf	___lldiv@quotient+1,w
  4070  1717  00F3               	movwf	?___lldiv+1
  4071  1718  0821               	movf	___lldiv@quotient,w
  4072  1719  00F2               	movwf	?___lldiv
  4073  171A                     l477:
  4074  171A  0008               	return
  4075  171B                     __end_of___lldiv:
  4076                           
  4077                           	psect	text10
  4078  0946                     __ptext10:	
  4079 ;; *************** function ___xxtofl *****************
  4080 ;; Defined at:
  4081 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/xxtofl.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  sign            1    wreg     unsigned char 
  4084 ;;  val             4    4[COMMON] long 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  sign            1    4[BANK0 ] unsigned char 
  4087 ;;  arg             4    6[BANK0 ] unsigned long 
  4088 ;;  exp             1    5[BANK0 ] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  4    4[COMMON] unsigned char 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         4       0       0       0       0
  4099 ;;      Locals:         0       6       0       0       0
  4100 ;;      Temps:          0       4       0       0       0
  4101 ;;      Totals:         4      10       0       0       0
  4102 ;;Total ram usage:       14 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 1
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;;		_ftoa
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function ___xxtofl
  4115  0946                     ___xxtofl:
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4119                           ;___xxtofl@sign stored from wreg
  4120  0946  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0947  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0948  00A4               	movwf	___xxtofl@sign
  4123  0949                     l3912:
  4124  0949  0824               	movf	___xxtofl@sign,w
  4125  094A  1903               	btfsc	3,2
  4126  094B  294D               	goto	u5441
  4127  094C  294E               	goto	u5440
  4128  094D                     u5441:
  4129  094D  2962               	goto	l3918
  4130  094E                     u5440:
  4131  094E                     l3914:
  4132  094E  1FF7               	btfss	___xxtofl@val+3,7
  4133  094F  2951               	goto	u5451
  4134  0950  2952               	goto	u5450
  4135  0951                     u5451:
  4136  0951  2962               	goto	l3918
  4137  0952                     u5450:
  4138  0952                     l3916:
  4139  0952  0974               	comf	___xxtofl@val,w
  4140  0953  00A6               	movwf	___xxtofl@arg
  4141  0954  0975               	comf	___xxtofl@val+1,w
  4142  0955  00A7               	movwf	___xxtofl@arg+1
  4143  0956  0976               	comf	___xxtofl@val+2,w
  4144  0957  00A8               	movwf	___xxtofl@arg+2
  4145  0958  0977               	comf	___xxtofl@val+3,w
  4146  0959  00A9               	movwf	___xxtofl@arg+3
  4147  095A  0AA6               	incf	___xxtofl@arg,f
  4148  095B  1903               	skipnz
  4149  095C  0AA7               	incf	___xxtofl@arg+1,f
  4150  095D  1903               	skipnz
  4151  095E  0AA8               	incf	___xxtofl@arg+2,f
  4152  095F  1903               	skipnz
  4153  0960  0AA9               	incf	___xxtofl@arg+3,f
  4154  0961  296A               	goto	l874
  4155  0962                     l3918:
  4156  0962  0877               	movf	___xxtofl@val+3,w
  4157  0963  00A9               	movwf	___xxtofl@arg+3
  4158  0964  0876               	movf	___xxtofl@val+2,w
  4159  0965  00A8               	movwf	___xxtofl@arg+2
  4160  0966  0875               	movf	___xxtofl@val+1,w
  4161  0967  00A7               	movwf	___xxtofl@arg+1
  4162  0968  0874               	movf	___xxtofl@val,w
  4163  0969  00A6               	movwf	___xxtofl@arg
  4164  096A                     l874:
  4165  096A  0877               	movf	___xxtofl@val+3,w
  4166  096B  0476               	iorwf	___xxtofl@val+2,w
  4167  096C  0475               	iorwf	___xxtofl@val+1,w
  4168  096D  0474               	iorwf	___xxtofl@val,w
  4169  096E  1D03               	skipz
  4170  096F  2971               	goto	u5461
  4171  0970  2972               	goto	u5460
  4172  0971                     u5461:
  4173  0971  297B               	goto	l3924
  4174  0972                     u5460:
  4175  0972                     l3920:
  4176  0972  3000               	movlw	0
  4177  0973  00F7               	movwf	?___xxtofl+3
  4178  0974  3000               	movlw	0
  4179  0975  00F6               	movwf	?___xxtofl+2
  4180  0976  3000               	movlw	0
  4181  0977  00F5               	movwf	?___xxtofl+1
  4182  0978  3000               	movlw	0
  4183  0979  00F4               	movwf	?___xxtofl
  4184  097A  2A01               	goto	l876
  4185  097B                     l3924:
  4186  097B  3096               	movlw	150
  4187  097C  00A0               	movwf	??___xxtofl
  4188  097D  0820               	movf	??___xxtofl,w
  4189  097E  00A5               	movwf	___xxtofl@exp
  4190  097F  298D               	goto	l3928
  4191  0980                     l3926:
  4192  0980  3001               	movlw	1
  4193  0981  00A0               	movwf	??___xxtofl
  4194  0982  0820               	movf	??___xxtofl,w
  4195  0983  07A5               	addwf	___xxtofl@exp,f
  4196  0984  3001               	movlw	1
  4197  0985                     u5475:
  4198  0985  1003               	clrc
  4199  0986  0CA9               	rrf	___xxtofl@arg+3,f
  4200  0987  0CA8               	rrf	___xxtofl@arg+2,f
  4201  0988  0CA7               	rrf	___xxtofl@arg+1,f
  4202  0989  0CA6               	rrf	___xxtofl@arg,f
  4203  098A  3EFF               	addlw	-1
  4204  098B  1D03               	skipz
  4205  098C  2985               	goto	u5475
  4206  098D                     l3928:
  4207  098D  30FE               	movlw	254
  4208  098E  0529               	andwf	___xxtofl@arg+3,w
  4209  098F  1D03               	btfss	3,2
  4210  0990  2992               	goto	u5481
  4211  0991  2993               	goto	u5480
  4212  0992                     u5481:
  4213  0992  2980               	goto	l3926
  4214  0993                     u5480:
  4215  0993  29AF               	goto	l880
  4216  0994                     l3930:
  4217  0994  3001               	movlw	1
  4218  0995  00A0               	movwf	??___xxtofl
  4219  0996  0820               	movf	??___xxtofl,w
  4220  0997  07A5               	addwf	___xxtofl@exp,f
  4221  0998                     l3932:
  4222  0998  3001               	movlw	1
  4223  0999  07A6               	addwf	___xxtofl@arg,f
  4224  099A  3000               	movlw	0
  4225  099B  1803               	skipnc
  4226  099C  3001               	movlw	1
  4227  099D  07A7               	addwf	___xxtofl@arg+1,f
  4228  099E  3000               	movlw	0
  4229  099F  1803               	skipnc
  4230  09A0  3001               	movlw	1
  4231  09A1  07A8               	addwf	___xxtofl@arg+2,f
  4232  09A2  3000               	movlw	0
  4233  09A3  1803               	skipnc
  4234  09A4  3001               	movlw	1
  4235  09A5  07A9               	addwf	___xxtofl@arg+3,f
  4236  09A6                     l3934:
  4237  09A6  3001               	movlw	1
  4238  09A7                     u5495:
  4239  09A7  1003               	clrc
  4240  09A8  0CA9               	rrf	___xxtofl@arg+3,f
  4241  09A9  0CA8               	rrf	___xxtofl@arg+2,f
  4242  09AA  0CA7               	rrf	___xxtofl@arg+1,f
  4243  09AB  0CA6               	rrf	___xxtofl@arg,f
  4244  09AC  3EFF               	addlw	-1
  4245  09AD  1D03               	skipz
  4246  09AE  29A7               	goto	u5495
  4247  09AF                     l880:
  4248  09AF  30FF               	movlw	255
  4249  09B0  0529               	andwf	___xxtofl@arg+3,w
  4250  09B1  1D03               	btfss	3,2
  4251  09B2  29B4               	goto	u5501
  4252  09B3  29B5               	goto	u5500
  4253  09B4                     u5501:
  4254  09B4  2994               	goto	l3930
  4255  09B5                     u5500:
  4256  09B5  29C1               	goto	l3938
  4257  09B6                     l3936:
  4258  09B6  3001               	movlw	1
  4259  09B7  02A5               	subwf	___xxtofl@exp,f
  4260  09B8  3001               	movlw	1
  4261  09B9  00A0               	movwf	??___xxtofl
  4262  09BA                     u5515:
  4263  09BA  1003               	clrc
  4264  09BB  0DA6               	rlf	___xxtofl@arg,f
  4265  09BC  0DA7               	rlf	___xxtofl@arg+1,f
  4266  09BD  0DA8               	rlf	___xxtofl@arg+2,f
  4267  09BE  0DA9               	rlf	___xxtofl@arg+3,f
  4268  09BF  0BA0               	decfsz	??___xxtofl,f
  4269  09C0  29BA               	goto	u5515
  4270  09C1                     l3938:
  4271  09C1  1BA8               	btfsc	___xxtofl@arg+2,7
  4272  09C2  29C4               	goto	u5521
  4273  09C3  29C5               	goto	u5520
  4274  09C4                     u5521:
  4275  09C4  29CB               	goto	l887
  4276  09C5                     u5520:
  4277  09C5                     l3940:
  4278  09C5  3002               	movlw	2
  4279  09C6  0225               	subwf	___xxtofl@exp,w
  4280  09C7  1803               	skipnc
  4281  09C8  29CA               	goto	u5531
  4282  09C9  29CB               	goto	u5530
  4283  09CA                     u5531:
  4284  09CA  29B6               	goto	l3936
  4285  09CB                     u5530:
  4286  09CB                     l887:
  4287  09CB  1825               	btfsc	___xxtofl@exp,0
  4288  09CC  29CE               	goto	u5541
  4289  09CD  29CF               	goto	u5540
  4290  09CE                     u5541:
  4291  09CE  29D7               	goto	l888
  4292  09CF                     u5540:
  4293  09CF                     l3942:
  4294  09CF  30FF               	movlw	255
  4295  09D0  05A6               	andwf	___xxtofl@arg,f
  4296  09D1  30FF               	movlw	255
  4297  09D2  05A7               	andwf	___xxtofl@arg+1,f
  4298  09D3  307F               	movlw	127
  4299  09D4  05A8               	andwf	___xxtofl@arg+2,f
  4300  09D5  30FF               	movlw	255
  4301  09D6  05A9               	andwf	___xxtofl@arg+3,f
  4302  09D7                     l888:
  4303  09D7  1003               	clrc
  4304  09D8  0CA5               	rrf	___xxtofl@exp,f
  4305  09D9                     l3944:
  4306  09D9  0825               	movf	___xxtofl@exp,w
  4307  09DA  00A0               	movwf	??___xxtofl
  4308  09DB  01A1               	clrf	??___xxtofl+1
  4309  09DC  01A2               	clrf	??___xxtofl+2
  4310  09DD  01A3               	clrf	??___xxtofl+3
  4311  09DE  3018               	movlw	24
  4312  09DF                     u5555:
  4313  09DF  1003               	clrc
  4314  09E0  0DA0               	rlf	??___xxtofl,f
  4315  09E1  0DA1               	rlf	??___xxtofl+1,f
  4316  09E2  0DA2               	rlf	??___xxtofl+2,f
  4317  09E3  0DA3               	rlf	??___xxtofl+3,f
  4318  09E4                     u5550:
  4319  09E4  3EFF               	addlw	-1
  4320  09E5  1D03               	skipz
  4321  09E6  29DF               	goto	u5555
  4322  09E7  0820               	movf	??___xxtofl,w
  4323  09E8  04A6               	iorwf	___xxtofl@arg,f
  4324  09E9  0821               	movf	??___xxtofl+1,w
  4325  09EA  04A7               	iorwf	___xxtofl@arg+1,f
  4326  09EB  0822               	movf	??___xxtofl+2,w
  4327  09EC  04A8               	iorwf	___xxtofl@arg+2,f
  4328  09ED  0823               	movf	??___xxtofl+3,w
  4329  09EE  04A9               	iorwf	___xxtofl@arg+3,f
  4330  09EF                     l3946:
  4331  09EF  0824               	movf	___xxtofl@sign,w
  4332  09F0  1903               	btfsc	3,2
  4333  09F1  29F3               	goto	u5561
  4334  09F2  29F4               	goto	u5560
  4335  09F3                     u5561:
  4336  09F3  29F9               	goto	l3952
  4337  09F4                     u5560:
  4338  09F4                     l3948:
  4339  09F4  1FF7               	btfss	___xxtofl@val+3,7
  4340  09F5  29F7               	goto	u5571
  4341  09F6  29F8               	goto	u5570
  4342  09F7                     u5571:
  4343  09F7  29F9               	goto	l3952
  4344  09F8                     u5570:
  4345  09F8                     l3950:
  4346  09F8  17A9               	bsf	___xxtofl@arg+3,7
  4347  09F9                     l3952:
  4348  09F9  0829               	movf	___xxtofl@arg+3,w
  4349  09FA  00F7               	movwf	?___xxtofl+3
  4350  09FB  0828               	movf	___xxtofl@arg+2,w
  4351  09FC  00F6               	movwf	?___xxtofl+2
  4352  09FD  0827               	movf	___xxtofl@arg+1,w
  4353  09FE  00F5               	movwf	?___xxtofl+1
  4354  09FF  0826               	movf	___xxtofl@arg,w
  4355  0A00  00F4               	movwf	?___xxtofl
  4356  0A01                     l876:
  4357  0A01  0008               	return
  4358  0A02                     __end_of___xxtofl:
  4359                           
  4360                           	psect	text11
  4361  1784                     __ptext11:	
  4362 ;; *************** function ___fltol *****************
  4363 ;; Defined at:
  4364 ;;		line 43 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/fltol.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  f1              4   31[BANK0 ] unsigned char 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  exp1            1    7[COMMON] unsigned char 
  4369 ;;  sign1           1    6[COMMON] unsigned char 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  4   31[BANK0 ] long 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2, status,0
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4379 ;;      Params:         0       4       0       0       0
  4380 ;;      Locals:         2       0       0       0       0
  4381 ;;      Temps:          0       5       0       0       0
  4382 ;;      Totals:         2       9       0       0       0
  4383 ;;Total ram usage:       11 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_main
  4390 ;;		_ftoa
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function ___fltol
  4396  1784                     ___fltol:
  4397  1784                     l3736:	
  4398                           ;incstack = 0
  4399                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4400                           
  4401  1784  1003               	clrc
  4402  1785  1283               	bcf	3,5	;RP0=0, select bank0
  4403  1786  1303               	bcf	3,6	;RP1=0, select bank0
  4404  1787  0D41               	rlf	___fltol@f1+2,w
  4405  1788  0D42               	rlf	___fltol@f1+3,w
  4406  1789  00C3               	movwf	??___fltol
  4407  178A  0843               	movf	??___fltol,w
  4408  178B  00F7               	movwf	___fltol@exp1
  4409  178C  0877               	movf	___fltol@exp1,w
  4410  178D  1D03               	btfss	3,2
  4411  178E  2F90               	goto	u4971
  4412  178F  2F91               	goto	u4970
  4413  1790                     u4971:
  4414  1790  2F9A               	goto	l3742
  4415  1791                     u4970:
  4416  1791                     l3738:
  4417  1791  3000               	movlw	0
  4418  1792  00C2               	movwf	?___fltol+3
  4419  1793  3000               	movlw	0
  4420  1794  00C1               	movwf	?___fltol+2
  4421  1795  3000               	movlw	0
  4422  1796  00C0               	movwf	?___fltol+1
  4423  1797  3000               	movlw	0
  4424  1798  00BF               	movwf	?___fltol
  4425  1799  2FFF               	goto	l627
  4426  179A                     l3742:
  4427  179A  083F               	movf	___fltol@f1,w
  4428  179B  00C3               	movwf	??___fltol
  4429  179C  0840               	movf	___fltol@f1+1,w
  4430  179D  00C4               	movwf	??___fltol+1
  4431  179E  0841               	movf	___fltol@f1+2,w
  4432  179F  00C5               	movwf	??___fltol+2
  4433  17A0  0842               	movf	___fltol@f1+3,w
  4434  17A1  00C6               	movwf	??___fltol+3
  4435  17A2  301F               	movlw	31
  4436  17A3                     u4985:
  4437  17A3  1003               	clrc
  4438  17A4  0CC6               	rrf	??___fltol+3,f
  4439  17A5  0CC5               	rrf	??___fltol+2,f
  4440  17A6  0CC4               	rrf	??___fltol+1,f
  4441  17A7  0CC3               	rrf	??___fltol,f
  4442  17A8                     u4980:
  4443  17A8  3EFF               	addlw	-1
  4444  17A9  1D03               	skipz
  4445  17AA  2FA3               	goto	u4985
  4446  17AB  0843               	movf	??___fltol,w
  4447  17AC  00C7               	movwf	??___fltol+4
  4448  17AD  0847               	movf	??___fltol+4,w
  4449  17AE  00F6               	movwf	___fltol@sign1
  4450  17AF                     l3744:
  4451  17AF  17C1               	bsf	___fltol@f1+2,7
  4452  17B0                     l3746:
  4453  17B0  30FF               	movlw	255
  4454  17B1  05BF               	andwf	___fltol@f1,f
  4455  17B2  30FF               	movlw	255
  4456  17B3  05C0               	andwf	___fltol@f1+1,f
  4457  17B4  30FF               	movlw	255
  4458  17B5  05C1               	andwf	___fltol@f1+2,f
  4459  17B6  3000               	movlw	0
  4460  17B7  05C2               	andwf	___fltol@f1+3,f
  4461  17B8                     l3748:
  4462  17B8  3096               	movlw	150
  4463  17B9  02F7               	subwf	___fltol@exp1,f
  4464  17BA                     l3750:
  4465  17BA  1FF7               	btfss	___fltol@exp1,7
  4466  17BB  2FBD               	goto	u4991
  4467  17BC  2FBE               	goto	u4990
  4468  17BD                     u4991:
  4469  17BD  2FD8               	goto	l3760
  4470  17BE                     u4990:
  4471  17BE                     l3752:
  4472  17BE  0877               	movf	___fltol@exp1,w
  4473  17BF  3A80               	xorlw	128
  4474  17C0  3E97               	addlw	151
  4475  17C1  1803               	skipnc
  4476  17C2  2FC4               	goto	u5001
  4477  17C3  2FC5               	goto	u5000
  4478  17C4                     u5001:
  4479  17C4  2FC6               	goto	l3758
  4480  17C5                     u5000:
  4481  17C5  2F91               	goto	l3738
  4482  17C6                     l3758:
  4483  17C6  3001               	movlw	1
  4484  17C7                     u5015:
  4485  17C7  1003               	clrc
  4486  17C8  0CC2               	rrf	___fltol@f1+3,f
  4487  17C9  0CC1               	rrf	___fltol@f1+2,f
  4488  17CA  0CC0               	rrf	___fltol@f1+1,f
  4489  17CB  0CBF               	rrf	___fltol@f1,f
  4490  17CC  3EFF               	addlw	-1
  4491  17CD  1D03               	skipz
  4492  17CE  2FC7               	goto	u5015
  4493  17CF  3001               	movlw	1
  4494  17D0  00C3               	movwf	??___fltol
  4495  17D1  0843               	movf	??___fltol,w
  4496  17D2  07F7               	addwf	___fltol@exp1,f
  4497  17D3  1D03               	btfss	3,2
  4498  17D4  2FD6               	goto	u5021
  4499  17D5  2FD7               	goto	u5020
  4500  17D6                     u5021:
  4501  17D6  2FC6               	goto	l3758
  4502  17D7                     u5020:
  4503  17D7  2FEF               	goto	l3768
  4504  17D8                     l3760:
  4505  17D8  3020               	movlw	32
  4506  17D9  0277               	subwf	___fltol@exp1,w
  4507  17DA  1C03               	skipc
  4508  17DB  2FDD               	goto	u5031
  4509  17DC  2FDE               	goto	u5030
  4510  17DD                     u5031:
  4511  17DD  2FEA               	goto	l634
  4512  17DE                     u5030:
  4513  17DE  2F91               	goto	l3738
  4514  17DF                     l3766:
  4515  17DF  3001               	movlw	1
  4516  17E0  00C3               	movwf	??___fltol
  4517  17E1                     u5045:
  4518  17E1  1003               	clrc
  4519  17E2  0DBF               	rlf	___fltol@f1,f
  4520  17E3  0DC0               	rlf	___fltol@f1+1,f
  4521  17E4  0DC1               	rlf	___fltol@f1+2,f
  4522  17E5  0DC2               	rlf	___fltol@f1+3,f
  4523  17E6  0BC3               	decfsz	??___fltol,f
  4524  17E7  2FE1               	goto	u5045
  4525  17E8  3001               	movlw	1
  4526  17E9  02F7               	subwf	___fltol@exp1,f
  4527  17EA                     l634:
  4528  17EA  0877               	movf	___fltol@exp1,w
  4529  17EB  1D03               	btfss	3,2
  4530  17EC  2FEE               	goto	u5051
  4531  17ED  2FEF               	goto	u5050
  4532  17EE                     u5051:
  4533  17EE  2FDF               	goto	l3766
  4534  17EF                     u5050:
  4535  17EF                     l3768:
  4536  17EF  0876               	movf	___fltol@sign1,w
  4537  17F0  1903               	btfsc	3,2
  4538  17F1  2FF3               	goto	u5061
  4539  17F2  2FF4               	goto	u5060
  4540  17F3                     u5061:
  4541  17F3  2FFF               	goto	l637
  4542  17F4                     u5060:
  4543  17F4                     l3770:
  4544  17F4  09BF               	comf	___fltol@f1,f
  4545  17F5  09C0               	comf	___fltol@f1+1,f
  4546  17F6  09C1               	comf	___fltol@f1+2,f
  4547  17F7  09C2               	comf	___fltol@f1+3,f
  4548  17F8  0ABF               	incf	___fltol@f1,f
  4549  17F9  1903               	skipnz
  4550  17FA  0AC0               	incf	___fltol@f1+1,f
  4551  17FB  1903               	skipnz
  4552  17FC  0AC1               	incf	___fltol@f1+2,f
  4553  17FD  1903               	skipnz
  4554  17FE  0AC2               	incf	___fltol@f1+3,f
  4555  17FF                     l637:
  4556  17FF                     l627:
  4557  17FF  0008               	return
  4558  1800                     __end_of___fltol:
  4559                           
  4560                           	psect	text12
  4561  12F9                     __ptext12:	
  4562 ;; *************** function ___flsub *****************
  4563 ;; Defined at:
  4564 ;;		line 242 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/sprcadd.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  a               4   12[BANK0 ] long 
  4567 ;;  b               4   16[BANK0 ] long 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  4   12[BANK0 ] long 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       8       0       0       0
  4580 ;;      Locals:         0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0
  4582 ;;      Totals:         0       8       0       0       0
  4583 ;;Total ram usage:        8 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 2
  4586 ;; This function calls:
  4587 ;;		___fladd
  4588 ;; This function is called by:
  4589 ;;		_ftoa
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function ___flsub
  4595  12F9                     ___flsub:
  4596  12F9                     l2844:	
  4597                           ;incstack = 0
  4598                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4599                           
  4600  12F9  3080               	movlw	128
  4601  12FA  1283               	bcf	3,5	;RP0=0, select bank0
  4602  12FB  1303               	bcf	3,6	;RP1=0, select bank0
  4603  12FC  06AF               	xorwf	___flsub@a+3,f
  4604  12FD                     l2846:
  4605  12FD  0833               	movf	___flsub@b+3,w
  4606  12FE  00F5               	movwf	___fladd@b+3
  4607  12FF  0832               	movf	___flsub@b+2,w
  4608  1300  00F4               	movwf	___fladd@b+2
  4609  1301  0831               	movf	___flsub@b+1,w
  4610  1302  00F3               	movwf	___fladd@b+1
  4611  1303  0830               	movf	___flsub@b,w
  4612  1304  00F2               	movwf	___fladd@b
  4613  1305  082F               	movf	___flsub@a+3,w
  4614  1306  00F9               	movwf	___fladd@a+3
  4615  1307  082E               	movf	___flsub@a+2,w
  4616  1308  00F8               	movwf	___fladd@a+2
  4617  1309  082D               	movf	___flsub@a+1,w
  4618  130A  00F7               	movwf	___fladd@a+1
  4619  130B  082C               	movf	___flsub@a,w
  4620  130C  00F6               	movwf	___fladd@a
  4621  130D  120A  118A  23A1  160A  118A  	fcall	___fladd
  4622  1312  0875               	movf	?___fladd+3,w
  4623  1313  1283               	bcf	3,5	;RP0=0, select bank0
  4624  1314  1303               	bcf	3,6	;RP1=0, select bank0
  4625  1315  00AF               	movwf	?___flsub+3
  4626  1316  0874               	movf	?___fladd+2,w
  4627  1317  00AE               	movwf	?___flsub+2
  4628  1318  0873               	movf	?___fladd+1,w
  4629  1319  00AD               	movwf	?___flsub+1
  4630  131A  0872               	movf	?___fladd,w
  4631  131B  00AC               	movwf	?___flsub
  4632  131C                     l780:
  4633  131C  0008               	return
  4634  131D                     __end_of___flsub:
  4635                           
  4636                           	psect	text13
  4637  03A1                     __ptext13:	
  4638 ;; *************** function ___fladd *****************
  4639 ;; Defined at:
  4640 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/sprcadd.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  b               4    2[COMMON] long 
  4643 ;;  a               4    6[COMMON] long 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  grs             1   11[BANK0 ] unsigned char 
  4646 ;;  bexp            1   10[BANK0 ] unsigned char 
  4647 ;;  aexp            1    9[BANK0 ] unsigned char 
  4648 ;;  signs           1    8[BANK0 ] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  4    2[COMMON] unsigned char 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0, btemp+1
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4658 ;;      Params:         8       0       0       0       0
  4659 ;;      Locals:         0       4       0       0       0
  4660 ;;      Temps:          0       8       0       0       0
  4661 ;;      Totals:         8      12       0       0       0
  4662 ;;Total ram usage:       20 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 1
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_main
  4669 ;;		___flsub
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function ___fladd
  4675  03A1                     ___fladd:
  4676  03A1                     l2410:	
  4677                           ;incstack = 0
  4678                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4679                           
  4680  03A1  0875               	movf	___fladd@b+3,w
  4681  03A2  3980               	andlw	128
  4682  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  4683  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  4684  03A5  00A0               	movwf	??___fladd
  4685  03A6  0820               	movf	??___fladd,w
  4686  03A7  00A8               	movwf	___fladd@signs
  4687  03A8                     l2412:
  4688  03A8  0875               	movf	___fladd@b+3,w
  4689  03A9  00A0               	movwf	??___fladd
  4690  03AA  0720               	addwf	??___fladd,w
  4691  03AB  00A1               	movwf	??___fladd+1
  4692  03AC  0821               	movf	??___fladd+1,w
  4693  03AD  00AA               	movwf	___fladd@bexp
  4694  03AE                     l2414:
  4695  03AE  1FF4               	btfss	___fladd@b+2,7
  4696  03AF  2BB1               	goto	u2551
  4697  03B0  2BB2               	goto	u2550
  4698  03B1                     u2551:
  4699  03B1  2BB3               	goto	l2418
  4700  03B2                     u2550:
  4701  03B2                     l2416:
  4702  03B2  142A               	bsf	___fladd@bexp,0
  4703  03B3                     l2418:
  4704  03B3  082A               	movf	___fladd@bexp,w
  4705  03B4  1903               	btfsc	3,2
  4706  03B5  2BB7               	goto	u2561
  4707  03B6  2BB8               	goto	u2560
  4708  03B7                     u2561:
  4709  03B7  2BC8               	goto	l2428
  4710  03B8                     u2560:
  4711  03B8                     l2420:
  4712  03B8  0A2A               	incf	___fladd@bexp,w
  4713  03B9  1D03               	btfss	3,2
  4714  03BA  2BBC               	goto	u2571
  4715  03BB  2BBD               	goto	u2570
  4716  03BC                     u2571:
  4717  03BC  2BC5               	goto	l2424
  4718  03BD                     u2570:
  4719  03BD                     l2422:
  4720  03BD  3000               	movlw	0
  4721  03BE  00F5               	movwf	___fladd@b+3
  4722  03BF  3000               	movlw	0
  4723  03C0  00F4               	movwf	___fladd@b+2
  4724  03C1  3000               	movlw	0
  4725  03C2  00F3               	movwf	___fladd@b+1
  4726  03C3  3000               	movlw	0
  4727  03C4  00F2               	movwf	___fladd@b
  4728  03C5                     l2424:
  4729  03C5  17F4               	bsf	___fladd@b+2,7
  4730  03C6                     l2426:
  4731  03C6  01F5               	clrf	___fladd@b+3
  4732  03C7  2BD0               	goto	l2430
  4733  03C8                     l2428:
  4734  03C8  3000               	movlw	0
  4735  03C9  00F5               	movwf	___fladd@b+3
  4736  03CA  3000               	movlw	0
  4737  03CB  00F4               	movwf	___fladd@b+2
  4738  03CC  3000               	movlw	0
  4739  03CD  00F3               	movwf	___fladd@b+1
  4740  03CE  3000               	movlw	0
  4741  03CF  00F2               	movwf	___fladd@b
  4742  03D0                     l2430:
  4743  03D0  0879               	movf	___fladd@a+3,w
  4744  03D1  3980               	andlw	128
  4745  03D2  00A0               	movwf	??___fladd
  4746  03D3  0820               	movf	??___fladd,w
  4747  03D4  00A9               	movwf	___fladd@aexp
  4748  03D5                     l2432:
  4749  03D5  0829               	movf	___fladd@aexp,w
  4750  03D6  0628               	xorwf	___fladd@signs,w
  4751  03D7  1903               	skipnz
  4752  03D8  2BDA               	goto	u2581
  4753  03D9  2BDB               	goto	u2580
  4754  03DA                     u2581:
  4755  03DA  2BDC               	goto	l2436
  4756  03DB                     u2580:
  4757  03DB                     l2434:
  4758  03DB  1728               	bsf	___fladd@signs,6
  4759  03DC                     l2436:
  4760  03DC  0879               	movf	___fladd@a+3,w
  4761  03DD  00A0               	movwf	??___fladd
  4762  03DE  0720               	addwf	??___fladd,w
  4763  03DF  00A1               	movwf	??___fladd+1
  4764  03E0  0821               	movf	??___fladd+1,w
  4765  03E1  00A9               	movwf	___fladd@aexp
  4766  03E2                     l2438:
  4767  03E2  1FF8               	btfss	___fladd@a+2,7
  4768  03E3  2BE5               	goto	u2591
  4769  03E4  2BE6               	goto	u2590
  4770  03E5                     u2591:
  4771  03E5  2BE7               	goto	l2442
  4772  03E6                     u2590:
  4773  03E6                     l2440:
  4774  03E6  1429               	bsf	___fladd@aexp,0
  4775  03E7                     l2442:
  4776  03E7  0829               	movf	___fladd@aexp,w
  4777  03E8  1903               	btfsc	3,2
  4778  03E9  2BEB               	goto	u2601
  4779  03EA  2BEC               	goto	u2600
  4780  03EB                     u2601:
  4781  03EB  2BFC               	goto	l2452
  4782  03EC                     u2600:
  4783  03EC                     l2444:
  4784  03EC  0A29               	incf	___fladd@aexp,w
  4785  03ED  1D03               	btfss	3,2
  4786  03EE  2BF0               	goto	u2611
  4787  03EF  2BF1               	goto	u2610
  4788  03F0                     u2611:
  4789  03F0  2BF9               	goto	l2448
  4790  03F1                     u2610:
  4791  03F1                     l2446:
  4792  03F1  3000               	movlw	0
  4793  03F2  00F9               	movwf	___fladd@a+3
  4794  03F3  3000               	movlw	0
  4795  03F4  00F8               	movwf	___fladd@a+2
  4796  03F5  3000               	movlw	0
  4797  03F6  00F7               	movwf	___fladd@a+1
  4798  03F7  3000               	movlw	0
  4799  03F8  00F6               	movwf	___fladd@a
  4800  03F9                     l2448:
  4801  03F9  17F8               	bsf	___fladd@a+2,7
  4802  03FA                     l2450:
  4803  03FA  01F9               	clrf	___fladd@a+3
  4804  03FB  2C04               	goto	l734
  4805  03FC                     l2452:
  4806  03FC  3000               	movlw	0
  4807  03FD  00F9               	movwf	___fladd@a+3
  4808  03FE  3000               	movlw	0
  4809  03FF  00F8               	movwf	___fladd@a+2
  4810  0400  3000               	movlw	0
  4811  0401  00F7               	movwf	___fladd@a+1
  4812  0402  3000               	movlw	0
  4813  0403  00F6               	movwf	___fladd@a
  4814  0404                     l734:
  4815  0404  082A               	movf	___fladd@bexp,w
  4816  0405  0229               	subwf	___fladd@aexp,w
  4817  0406  1803               	skipnc
  4818  0407  2C09               	goto	u2621
  4819  0408  2C0A               	goto	u2620
  4820  0409                     u2621:
  4821  0409  2C4E               	goto	l2488
  4822  040A                     u2620:
  4823  040A                     l2454:
  4824  040A  1F28               	btfss	___fladd@signs,6
  4825  040B  2C0D               	goto	u2631
  4826  040C  2C0E               	goto	u2630
  4827  040D                     u2631:
  4828  040D  2C12               	goto	l2458
  4829  040E                     u2630:
  4830  040E                     l2456:
  4831  040E  3080               	movlw	128
  4832  040F  00A0               	movwf	??___fladd
  4833  0410  0820               	movf	??___fladd,w
  4834  0411  06A8               	xorwf	___fladd@signs,f
  4835  0412                     l2458:
  4836  0412  082A               	movf	___fladd@bexp,w
  4837  0413  00A0               	movwf	??___fladd
  4838  0414  0820               	movf	??___fladd,w
  4839  0415  00AB               	movwf	___fladd@grs
  4840  0416                     l2460:
  4841  0416  0829               	movf	___fladd@aexp,w
  4842  0417  00A0               	movwf	??___fladd
  4843  0418  0820               	movf	??___fladd,w
  4844  0419  00AA               	movwf	___fladd@bexp
  4845  041A                     l2462:
  4846  041A  082B               	movf	___fladd@grs,w
  4847  041B  00A0               	movwf	??___fladd
  4848  041C  0820               	movf	??___fladd,w
  4849  041D  00A9               	movwf	___fladd@aexp
  4850  041E                     l2464:
  4851  041E  0872               	movf	___fladd@b,w
  4852  041F  00A0               	movwf	??___fladd
  4853  0420  0820               	movf	??___fladd,w
  4854  0421  00AB               	movwf	___fladd@grs
  4855  0422                     l2466:
  4856  0422  0876               	movf	___fladd@a,w
  4857  0423  00A0               	movwf	??___fladd
  4858  0424  0820               	movf	??___fladd,w
  4859  0425  00F2               	movwf	___fladd@b
  4860  0426                     l2468:
  4861  0426  082B               	movf	___fladd@grs,w
  4862  0427  00A0               	movwf	??___fladd
  4863  0428  0820               	movf	??___fladd,w
  4864  0429  00F6               	movwf	___fladd@a
  4865  042A                     l2470:
  4866  042A  0873               	movf	___fladd@b+1,w
  4867  042B  00A0               	movwf	??___fladd
  4868  042C  0820               	movf	??___fladd,w
  4869  042D  00AB               	movwf	___fladd@grs
  4870  042E                     l2472:
  4871  042E  0877               	movf	___fladd@a+1,w
  4872  042F  00A0               	movwf	??___fladd
  4873  0430  0820               	movf	??___fladd,w
  4874  0431  00F3               	movwf	___fladd@b+1
  4875  0432                     l2474:
  4876  0432  082B               	movf	___fladd@grs,w
  4877  0433  00A0               	movwf	??___fladd
  4878  0434  0820               	movf	??___fladd,w
  4879  0435  00F7               	movwf	___fladd@a+1
  4880  0436                     l2476:
  4881  0436  0874               	movf	___fladd@b+2,w
  4882  0437  00A0               	movwf	??___fladd
  4883  0438  0820               	movf	??___fladd,w
  4884  0439  00AB               	movwf	___fladd@grs
  4885  043A                     l2478:
  4886  043A  0878               	movf	___fladd@a+2,w
  4887  043B  00A0               	movwf	??___fladd
  4888  043C  0820               	movf	??___fladd,w
  4889  043D  00F4               	movwf	___fladd@b+2
  4890  043E                     l2480:
  4891  043E  082B               	movf	___fladd@grs,w
  4892  043F  00A0               	movwf	??___fladd
  4893  0440  0820               	movf	??___fladd,w
  4894  0441  00F8               	movwf	___fladd@a+2
  4895  0442                     l2482:
  4896  0442  0875               	movf	___fladd@b+3,w
  4897  0443  00A0               	movwf	??___fladd
  4898  0444  0820               	movf	??___fladd,w
  4899  0445  00AB               	movwf	___fladd@grs
  4900  0446                     l2484:
  4901  0446  0879               	movf	___fladd@a+3,w
  4902  0447  00A0               	movwf	??___fladd
  4903  0448  0820               	movf	??___fladd,w
  4904  0449  00F5               	movwf	___fladd@b+3
  4905  044A                     l2486:
  4906  044A  082B               	movf	___fladd@grs,w
  4907  044B  00A0               	movwf	??___fladd
  4908  044C  0820               	movf	??___fladd,w
  4909  044D  00F9               	movwf	___fladd@a+3
  4910  044E                     l2488:
  4911  044E  01AB               	clrf	___fladd@grs
  4912  044F                     l2490:
  4913  044F  0829               	movf	___fladd@aexp,w
  4914  0450  00A0               	movwf	??___fladd
  4915  0451  01A1               	clrf	??___fladd+1
  4916  0452  0821               	movf	??___fladd+1,w
  4917  0453  00A3               	movwf	??___fladd+3
  4918  0454  082A               	movf	___fladd@bexp,w
  4919  0455  0220               	subwf	??___fladd,w
  4920  0456  00A2               	movwf	??___fladd+2
  4921  0457  1C03               	skipc
  4922  0458  03A3               	decf	??___fladd+3,f
  4923  0459  0823               	movf	??___fladd+3,w
  4924  045A  3A80               	xorlw	128
  4925  045B  00FF               	movwf	btemp+1
  4926  045C  3080               	movlw	128
  4927  045D  027F               	subwf	btemp+1,w
  4928  045E  1D03               	skipz
  4929  045F  2C62               	goto	u2645
  4930  0460  301A               	movlw	26
  4931  0461  0222               	subwf	??___fladd+2,w
  4932  0462                     u2645:
  4933  0462  1C03               	skipc
  4934  0463  2C65               	goto	u2641
  4935  0464  2C66               	goto	u2640
  4936  0465                     u2641:
  4937  0465  2CA3               	goto	l2506
  4938  0466                     u2640:
  4939  0466                     l2492:
  4940  0466  0875               	movf	___fladd@b+3,w
  4941  0467  0474               	iorwf	___fladd@b+2,w
  4942  0468  0473               	iorwf	___fladd@b+1,w
  4943  0469  0472               	iorwf	___fladd@b,w
  4944  046A  1D03               	skipz
  4945  046B  2C6D               	goto	u2651
  4946  046C  2C6F               	goto	u2650
  4947  046D                     u2651:
  4948  046D  3001               	movlw	1
  4949  046E  2C70               	goto	u2660
  4950  046F                     u2650:
  4951  046F  3000               	movlw	0
  4952  0470                     u2660:
  4953  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4954  0471  1303               	bcf	3,6	;RP1=0, select bank0
  4955  0472  00A0               	movwf	??___fladd
  4956  0473  0820               	movf	??___fladd,w
  4957  0474  00AB               	movwf	___fladd@grs
  4958  0475  3000               	movlw	0
  4959  0476  00F5               	movwf	___fladd@b+3
  4960  0477  3000               	movlw	0
  4961  0478  00F4               	movwf	___fladd@b+2
  4962  0479  3000               	movlw	0
  4963  047A  00F3               	movwf	___fladd@b+1
  4964  047B  3000               	movlw	0
  4965  047C  00F2               	movwf	___fladd@b
  4966  047D  0829               	movf	___fladd@aexp,w
  4967  047E  00A0               	movwf	??___fladd
  4968  047F  0820               	movf	??___fladd,w
  4969  0480  00AA               	movwf	___fladd@bexp
  4970  0481  2CAB               	goto	l738
  4971  0482                     l740:
  4972  0482  1C2B               	btfss	___fladd@grs,0
  4973  0483  2C85               	goto	u2671
  4974  0484  2C86               	goto	u2670
  4975  0485                     u2671:
  4976  0485  2C8F               	goto	l2496
  4977  0486                     u2670:
  4978  0486                     l2494:
  4979  0486  082B               	movf	___fladd@grs,w
  4980  0487  00A0               	movwf	??___fladd
  4981  0488  1003               	clrc
  4982  0489  0C20               	rrf	??___fladd,w
  4983  048A  3801               	iorlw	1
  4984  048B  00A1               	movwf	??___fladd+1
  4985  048C  0821               	movf	??___fladd+1,w
  4986  048D  00AB               	movwf	___fladd@grs
  4987  048E  2C91               	goto	l2498
  4988  048F                     l2496:
  4989  048F  1003               	clrc
  4990  0490  0CAB               	rrf	___fladd@grs,f
  4991  0491                     l2498:
  4992  0491  1C72               	btfss	___fladd@b,0
  4993  0492  2C94               	goto	u2681
  4994  0493  2C95               	goto	u2680
  4995  0494                     u2681:
  4996  0494  2C96               	goto	l2502
  4997  0495                     u2680:
  4998  0495                     l2500:
  4999  0495  17AB               	bsf	___fladd@grs,7
  5000  0496                     l2502:
  5001  0496  3001               	movlw	1
  5002  0497  00A0               	movwf	??___fladd
  5003  0498                     u2695:
  5004  0498  0D75               	rlf	___fladd@b+3,w
  5005  0499  0CF5               	rrf	___fladd@b+3,f
  5006  049A  0CF4               	rrf	___fladd@b+2,f
  5007  049B  0CF3               	rrf	___fladd@b+1,f
  5008  049C  0CF2               	rrf	___fladd@b,f
  5009  049D  0BA0               	decfsz	??___fladd& (0+127),f
  5010  049E  2C98               	goto	u2695
  5011  049F                     l2504:
  5012  049F  3001               	movlw	1
  5013  04A0  00A0               	movwf	??___fladd
  5014  04A1  0820               	movf	??___fladd,w
  5015  04A2  07AA               	addwf	___fladd@bexp,f
  5016  04A3                     l2506:
  5017  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  5018  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  5019  04A5  0829               	movf	___fladd@aexp,w
  5020  04A6  022A               	subwf	___fladd@bexp,w
  5021  04A7  1C03               	skipc
  5022  04A8  2CAA               	goto	u2701
  5023  04A9  2CAB               	goto	u2700
  5024  04AA                     u2701:
  5025  04AA  2C82               	goto	l740
  5026  04AB                     u2700:
  5027  04AB                     l738:
  5028  04AB  1B28               	btfsc	___fladd@signs,6
  5029  04AC  2CAE               	goto	u2711
  5030  04AD  2CAF               	goto	u2710
  5031  04AE                     u2711:
  5032  04AE  2CFA               	goto	l2532
  5033  04AF                     u2710:
  5034  04AF                     l2508:
  5035  04AF  082A               	movf	___fladd@bexp,w
  5036  04B0  1D03               	btfss	3,2
  5037  04B1  2CB3               	goto	u2721
  5038  04B2  2CB4               	goto	u2720
  5039  04B3                     u2721:
  5040  04B3  2CBD               	goto	l2514
  5041  04B4                     u2720:
  5042  04B4                     l2510:
  5043  04B4  3000               	movlw	0
  5044  04B5  00F5               	movwf	?___fladd+3
  5045  04B6  3000               	movlw	0
  5046  04B7  00F4               	movwf	?___fladd+2
  5047  04B8  3000               	movlw	0
  5048  04B9  00F3               	movwf	?___fladd+1
  5049  04BA  3000               	movlw	0
  5050  04BB  00F2               	movwf	?___fladd
  5051  04BC  2E28               	goto	l747
  5052  04BD                     l2514:
  5053  04BD  0876               	movf	___fladd@a,w
  5054  04BE  07F2               	addwf	___fladd@b,f
  5055  04BF  0877               	movf	___fladd@a+1,w
  5056  04C0  1103               	clrz
  5057  04C1  1803               	skipnc
  5058  04C2  3E01               	addlw	1
  5059  04C3  1903               	skipnz
  5060  04C4  2CC6               	goto	u2731
  5061  04C5  07F3               	addwf	___fladd@b+1,f
  5062  04C6                     u2731:
  5063  04C6  0878               	movf	___fladd@a+2,w
  5064  04C7  1103               	clrz
  5065  04C8  1803               	skipnc
  5066  04C9  3E01               	addlw	1
  5067  04CA  1903               	skipnz
  5068  04CB  2CCD               	goto	u2732
  5069  04CC  07F4               	addwf	___fladd@b+2,f
  5070  04CD                     u2732:
  5071  04CD  0879               	movf	___fladd@a+3,w
  5072  04CE  1103               	clrz
  5073  04CF  1803               	skipnc
  5074  04D0  3E01               	addlw	1
  5075  04D1  1903               	skipnz
  5076  04D2  2CD4               	goto	u2733
  5077  04D3  07F5               	addwf	___fladd@b+3,f
  5078  04D4                     u2733:
  5079  04D4                     l2516:
  5080  04D4  1C75               	btfss	___fladd@b+3,0
  5081  04D5  2CD7               	goto	u2741
  5082  04D6  2CD8               	goto	u2740
  5083  04D7                     u2741:
  5084  04D7  2DAE               	goto	l2566
  5085  04D8                     u2740:
  5086  04D8                     l2518:
  5087  04D8  1C2B               	btfss	___fladd@grs,0
  5088  04D9  2CDB               	goto	u2751
  5089  04DA  2CDC               	goto	u2750
  5090  04DB                     u2751:
  5091  04DB  2CE5               	goto	l2522
  5092  04DC                     u2750:
  5093  04DC                     l2520:
  5094  04DC  082B               	movf	___fladd@grs,w
  5095  04DD  00A0               	movwf	??___fladd
  5096  04DE  1003               	clrc
  5097  04DF  0C20               	rrf	??___fladd,w
  5098  04E0  3801               	iorlw	1
  5099  04E1  00A1               	movwf	??___fladd+1
  5100  04E2  0821               	movf	??___fladd+1,w
  5101  04E3  00AB               	movwf	___fladd@grs
  5102  04E4  2CE7               	goto	l2524
  5103  04E5                     l2522:
  5104  04E5  1003               	clrc
  5105  04E6  0CAB               	rrf	___fladd@grs,f
  5106  04E7                     l2524:
  5107  04E7  1C72               	btfss	___fladd@b,0
  5108  04E8  2CEA               	goto	u2761
  5109  04E9  2CEB               	goto	u2760
  5110  04EA                     u2761:
  5111  04EA  2CEC               	goto	l2528
  5112  04EB                     u2760:
  5113  04EB                     l2526:
  5114  04EB  17AB               	bsf	___fladd@grs,7
  5115  04EC                     l2528:
  5116  04EC  3001               	movlw	1
  5117  04ED  00A0               	movwf	??___fladd
  5118  04EE                     u2775:
  5119  04EE  0D75               	rlf	___fladd@b+3,w
  5120  04EF  0CF5               	rrf	___fladd@b+3,f
  5121  04F0  0CF4               	rrf	___fladd@b+2,f
  5122  04F1  0CF3               	rrf	___fladd@b+1,f
  5123  04F2  0CF2               	rrf	___fladd@b,f
  5124  04F3  0BA0               	decfsz	??___fladd& (0+127),f
  5125  04F4  2CEE               	goto	u2775
  5126  04F5                     l2530:
  5127  04F5  3001               	movlw	1
  5128  04F6  00A0               	movwf	??___fladd
  5129  04F7  0820               	movf	??___fladd,w
  5130  04F8  07AA               	addwf	___fladd@bexp,f
  5131  04F9  2DAE               	goto	l2566
  5132  04FA                     l2532:
  5133  04FA  0875               	movf	___fladd@b+3,w
  5134  04FB  3A80               	xorlw	128
  5135  04FC  00FF               	movwf	btemp+1
  5136  04FD  0879               	movf	___fladd@a+3,w
  5137  04FE  3A80               	xorlw	128
  5138  04FF  027F               	subwf	btemp+1,w
  5139  0500  1D03               	skipz
  5140  0501  2D0C               	goto	u2783
  5141  0502  0878               	movf	___fladd@a+2,w
  5142  0503  0274               	subwf	___fladd@b+2,w
  5143  0504  1D03               	skipz
  5144  0505  2D0C               	goto	u2783
  5145  0506  0877               	movf	___fladd@a+1,w
  5146  0507  0273               	subwf	___fladd@b+1,w
  5147  0508  1D03               	skipz
  5148  0509  2D0C               	goto	u2783
  5149  050A  0876               	movf	___fladd@a,w
  5150  050B  0272               	subwf	___fladd@b,w
  5151  050C                     u2783:
  5152  050C  1803               	skipnc
  5153  050D  2D0F               	goto	u2781
  5154  050E  2D10               	goto	u2780
  5155  050F                     u2781:
  5156  050F  2D68               	goto	l2542
  5157  0510                     u2780:
  5158  0510                     l2534:
  5159  0510  30FF               	movlw	255
  5160  0511  00A0               	movwf	??___fladd
  5161  0512  30FF               	movlw	255
  5162  0513  00A1               	movwf	??___fladd+1
  5163  0514  30FF               	movlw	255
  5164  0515  00A2               	movwf	??___fladd+2
  5165  0516  30FF               	movlw	255
  5166  0517  00A3               	movwf	??___fladd+3
  5167  0518  0876               	movf	___fladd@a,w
  5168  0519  00A4               	movwf	??___fladd+4
  5169  051A  0877               	movf	___fladd@a+1,w
  5170  051B  00A5               	movwf	??___fladd+5
  5171  051C  0878               	movf	___fladd@a+2,w
  5172  051D  00A6               	movwf	??___fladd+6
  5173  051E  0879               	movf	___fladd@a+3,w
  5174  051F  00A7               	movwf	??___fladd+7
  5175  0520  0872               	movf	___fladd@b,w
  5176  0521  02A4               	subwf	??___fladd+4,f
  5177  0522  0873               	movf	___fladd@b+1,w
  5178  0523  1C03               	skipc
  5179  0524  0F73               	incfsz	___fladd@b+1,w
  5180  0525  2D27               	goto	u2791
  5181  0526  2D28               	goto	u2792
  5182  0527                     u2791:
  5183  0527  02A5               	subwf	??___fladd+5,f
  5184  0528                     u2792:
  5185  0528  0874               	movf	___fladd@b+2,w
  5186  0529  1C03               	skipc
  5187  052A  0F74               	incfsz	___fladd@b+2,w
  5188  052B  2D2D               	goto	u2793
  5189  052C  2D2E               	goto	u2794
  5190  052D                     u2793:
  5191  052D  02A6               	subwf	??___fladd+6,f
  5192  052E                     u2794:
  5193  052E  0875               	movf	___fladd@b+3,w
  5194  052F  1C03               	skipc
  5195  0530  0F75               	incfsz	___fladd@b+3,w
  5196  0531  2D33               	goto	u2795
  5197  0532  2D34               	goto	u2796
  5198  0533                     u2795:
  5199  0533  02A7               	subwf	??___fladd+7,f
  5200  0534                     u2796:
  5201  0534  0824               	movf	??___fladd+4,w
  5202  0535  07A0               	addwf	??___fladd,f
  5203  0536  0825               	movf	??___fladd+5,w
  5204  0537  1803               	skipnc
  5205  0538  0F25               	incfsz	??___fladd+5,w
  5206  0539  2D3B               	goto	u2800
  5207  053A  2D3C               	goto	u2801
  5208  053B                     u2800:
  5209  053B  07A1               	addwf	??___fladd+1,f
  5210  053C                     u2801:
  5211  053C  0826               	movf	??___fladd+6,w
  5212  053D  1803               	skipnc
  5213  053E  0F26               	incfsz	??___fladd+6,w
  5214  053F  2D41               	goto	u2802
  5215  0540  2D42               	goto	u2803
  5216  0541                     u2802:
  5217  0541  07A2               	addwf	??___fladd+2,f
  5218  0542                     u2803:
  5219  0542  0827               	movf	??___fladd+7,w
  5220  0543  1803               	skipnc
  5221  0544  0A27               	incf	??___fladd+7,w
  5222  0545  07A3               	addwf	??___fladd+3,f
  5223  0546  0823               	movf	??___fladd+3,w
  5224  0547  00F5               	movwf	___fladd@b+3
  5225  0548  0822               	movf	??___fladd+2,w
  5226  0549  00F4               	movwf	___fladd@b+2
  5227  054A  0821               	movf	??___fladd+1,w
  5228  054B  00F3               	movwf	___fladd@b+1
  5229  054C  0820               	movf	??___fladd,w
  5230  054D  00F2               	movwf	___fladd@b
  5231  054E                     l2536:
  5232  054E  3080               	movlw	128
  5233  054F  00A0               	movwf	??___fladd
  5234  0550  0820               	movf	??___fladd,w
  5235  0551  06A8               	xorwf	___fladd@signs,f
  5236  0552  09AB               	comf	___fladd@grs,f
  5237  0553  0AAB               	incf	___fladd@grs,f
  5238  0554                     l2538:
  5239  0554  082B               	movf	___fladd@grs,w
  5240  0555  1D03               	btfss	3,2
  5241  0556  2D58               	goto	u2811
  5242  0557  2D59               	goto	u2810
  5243  0558                     u2811:
  5244  0558  2D76               	goto	l755
  5245  0559                     u2810:
  5246  0559                     l2540:
  5247  0559  3001               	movlw	1
  5248  055A  07F2               	addwf	___fladd@b,f
  5249  055B  3000               	movlw	0
  5250  055C  1803               	skipnc
  5251  055D  3001               	movlw	1
  5252  055E  07F3               	addwf	___fladd@b+1,f
  5253  055F  3000               	movlw	0
  5254  0560  1803               	skipnc
  5255  0561  3001               	movlw	1
  5256  0562  07F4               	addwf	___fladd@b+2,f
  5257  0563  3000               	movlw	0
  5258  0564  1803               	skipnc
  5259  0565  3001               	movlw	1
  5260  0566  07F5               	addwf	___fladd@b+3,f
  5261  0567  2D76               	goto	l755
  5262  0568                     l2542:
  5263  0568  0876               	movf	___fladd@a,w
  5264  0569  02F2               	subwf	___fladd@b,f
  5265  056A  0877               	movf	___fladd@a+1,w
  5266  056B  1C03               	skipc
  5267  056C  0F77               	incfsz	___fladd@a+1,w
  5268  056D  02F3               	subwf	___fladd@b+1,f
  5269  056E  0878               	movf	___fladd@a+2,w
  5270  056F  1C03               	skipc
  5271  0570  0F78               	incfsz	___fladd@a+2,w
  5272  0571  02F4               	subwf	___fladd@b+2,f
  5273  0572  0879               	movf	___fladd@a+3,w
  5274  0573  1C03               	skipc
  5275  0574  0F79               	incfsz	___fladd@a+3,w
  5276  0575  02F5               	subwf	___fladd@b+3,f
  5277  0576                     l755:
  5278  0576  0875               	movf	___fladd@b+3,w
  5279  0577  0474               	iorwf	___fladd@b+2,w
  5280  0578  0473               	iorwf	___fladd@b+1,w
  5281  0579  0472               	iorwf	___fladd@b,w
  5282  057A  1D03               	skipz
  5283  057B  2D7D               	goto	u2821
  5284  057C  2D7E               	goto	u2820
  5285  057D                     u2821:
  5286  057D  2DAA               	goto	l2564
  5287  057E                     u2820:
  5288  057E                     l2544:
  5289  057E  082B               	movf	___fladd@grs,w
  5290  057F  1D03               	btfss	3,2
  5291  0580  2D82               	goto	u2831
  5292  0581  2D83               	goto	u2830
  5293  0582                     u2831:
  5294  0582  2DAA               	goto	l2564
  5295  0583                     u2830:
  5296  0583                     l2546:
  5297  0583  3000               	movlw	0
  5298  0584  00F5               	movwf	?___fladd+3
  5299  0585  3000               	movlw	0
  5300  0586  00F4               	movwf	?___fladd+2
  5301  0587  3000               	movlw	0
  5302  0588  00F3               	movwf	?___fladd+1
  5303  0589  3000               	movlw	0
  5304  058A  00F2               	movwf	?___fladd
  5305  058B  2E28               	goto	l747
  5306  058C                     l2550:
  5307  058C  3001               	movlw	1
  5308  058D  00A0               	movwf	??___fladd
  5309  058E                     u2845:
  5310  058E  1003               	clrc
  5311  058F  0DF2               	rlf	___fladd@b,f
  5312  0590  0DF3               	rlf	___fladd@b+1,f
  5313  0591  0DF4               	rlf	___fladd@b+2,f
  5314  0592  0DF5               	rlf	___fladd@b+3,f
  5315  0593  0BA0               	decfsz	??___fladd,f
  5316  0594  2D8E               	goto	u2845
  5317  0595                     l2552:
  5318  0595  1FAB               	btfss	___fladd@grs,7
  5319  0596  2D98               	goto	u2851
  5320  0597  2D99               	goto	u2850
  5321  0598                     u2851:
  5322  0598  2D9A               	goto	l759
  5323  0599                     u2850:
  5324  0599                     l2554:
  5325  0599  1472               	bsf	___fladd@b,0
  5326  059A                     l759:
  5327  059A  1C2B               	btfss	___fladd@grs,0
  5328  059B  2D9D               	goto	u2861
  5329  059C  2D9E               	goto	u2860
  5330  059D                     u2861:
  5331  059D  2DA1               	goto	l2558
  5332  059E                     u2860:
  5333  059E                     l2556:
  5334  059E  1403               	setc
  5335  059F  0DAB               	rlf	___fladd@grs,f
  5336  05A0  2DA3               	goto	l2560
  5337  05A1                     l2558:
  5338  05A1  1003               	clrc
  5339  05A2  0DAB               	rlf	___fladd@grs,f
  5340  05A3                     l2560:
  5341  05A3  082A               	movf	___fladd@bexp,w
  5342  05A4  1903               	btfsc	3,2
  5343  05A5  2DA7               	goto	u2871
  5344  05A6  2DA8               	goto	u2870
  5345  05A7                     u2871:
  5346  05A7  2DAA               	goto	l2564
  5347  05A8                     u2870:
  5348  05A8                     l2562:
  5349  05A8  3001               	movlw	1
  5350  05A9  02AA               	subwf	___fladd@bexp,f
  5351  05AA                     l2564:
  5352  05AA  1FF4               	btfss	___fladd@b+2,7
  5353  05AB  2DAD               	goto	u2881
  5354  05AC  2DAE               	goto	u2880
  5355  05AD                     u2881:
  5356  05AD  2D8C               	goto	l2550
  5357  05AE                     u2880:
  5358  05AE                     l2566:
  5359  05AE  01A9               	clrf	___fladd@aexp
  5360  05AF                     l2568:
  5361  05AF  1FAB               	btfss	___fladd@grs,7
  5362  05B0  2DB2               	goto	u2891
  5363  05B1  2DB3               	goto	u2890
  5364  05B2                     u2891:
  5365  05B2  2DC1               	goto	l2576
  5366  05B3                     u2890:
  5367  05B3                     l2570:
  5368  05B3  082B               	movf	___fladd@grs,w
  5369  05B4  397F               	andlw	127
  5370  05B5  1903               	btfsc	3,2
  5371  05B6  2DB8               	goto	u2901
  5372  05B7  2DB9               	goto	u2900
  5373  05B8                     u2901:
  5374  05B8  2DBC               	goto	l765
  5375  05B9                     u2900:
  5376  05B9                     l2572:
  5377  05B9  01A9               	clrf	___fladd@aexp
  5378  05BA  0AA9               	incf	___fladd@aexp,f
  5379  05BB  2DC1               	goto	l2576
  5380  05BC                     l765:
  5381  05BC  1C72               	btfss	___fladd@b,0
  5382  05BD  2DBF               	goto	u2911
  5383  05BE  2DC0               	goto	u2910
  5384  05BF                     u2911:
  5385  05BF  2DC1               	goto	l2576
  5386  05C0                     u2910:
  5387  05C0  2DB9               	goto	l2572
  5388  05C1                     l2576:
  5389  05C1  0829               	movf	___fladd@aexp,w
  5390  05C2  1903               	btfsc	3,2
  5391  05C3  2DC5               	goto	u2921
  5392  05C4  2DC6               	goto	u2920
  5393  05C5                     u2921:
  5394  05C5  2DFA               	goto	l768
  5395  05C6                     u2920:
  5396  05C6                     l2578:
  5397  05C6  3001               	movlw	1
  5398  05C7  07F2               	addwf	___fladd@b,f
  5399  05C8  3000               	movlw	0
  5400  05C9  1803               	skipnc
  5401  05CA  3001               	movlw	1
  5402  05CB  07F3               	addwf	___fladd@b+1,f
  5403  05CC  3000               	movlw	0
  5404  05CD  1803               	skipnc
  5405  05CE  3001               	movlw	1
  5406  05CF  07F4               	addwf	___fladd@b+2,f
  5407  05D0  3000               	movlw	0
  5408  05D1  1803               	skipnc
  5409  05D2  3001               	movlw	1
  5410  05D3  07F5               	addwf	___fladd@b+3,f
  5411  05D4                     l2580:
  5412  05D4  1C75               	btfss	___fladd@b+3,0
  5413  05D5  2DD7               	goto	u2931
  5414  05D6  2DD8               	goto	u2930
  5415  05D7                     u2931:
  5416  05D7  2DFA               	goto	l768
  5417  05D8                     u2930:
  5418  05D8                     l2582:
  5419  05D8  0872               	movf	___fladd@b,w
  5420  05D9  00A0               	movwf	??___fladd
  5421  05DA  0873               	movf	___fladd@b+1,w
  5422  05DB  00A1               	movwf	??___fladd+1
  5423  05DC  0874               	movf	___fladd@b+2,w
  5424  05DD  00A2               	movwf	??___fladd+2
  5425  05DE  0875               	movf	___fladd@b+3,w
  5426  05DF  00A3               	movwf	??___fladd+3
  5427  05E0  3001               	movlw	1
  5428  05E1  00A4               	movwf	??___fladd+4
  5429  05E2                     u2945:
  5430  05E2  0D23               	rlf	??___fladd+3,w
  5431  05E3  0CA3               	rrf	??___fladd+3,f
  5432  05E4  0CA2               	rrf	??___fladd+2,f
  5433  05E5  0CA1               	rrf	??___fladd+1,f
  5434  05E6  0CA0               	rrf	??___fladd,f
  5435  05E7                     u2940:
  5436  05E7  0BA4               	decfsz	??___fladd+4,f
  5437  05E8  2DE2               	goto	u2945
  5438  05E9  0823               	movf	??___fladd+3,w
  5439  05EA  00F5               	movwf	___fladd@b+3
  5440  05EB  0822               	movf	??___fladd+2,w
  5441  05EC  00F4               	movwf	___fladd@b+2
  5442  05ED  0821               	movf	??___fladd+1,w
  5443  05EE  00F3               	movwf	___fladd@b+1
  5444  05EF  0820               	movf	??___fladd,w
  5445  05F0  00F2               	movwf	___fladd@b
  5446  05F1  0A2A               	incf	___fladd@bexp,w
  5447  05F2  1903               	btfsc	3,2
  5448  05F3  2DF5               	goto	u2951
  5449  05F4  2DF6               	goto	u2950
  5450  05F5                     u2951:
  5451  05F5  2DFA               	goto	l768
  5452  05F6                     u2950:
  5453  05F6                     l2584:
  5454  05F6  3001               	movlw	1
  5455  05F7  00A0               	movwf	??___fladd
  5456  05F8  0820               	movf	??___fladd,w
  5457  05F9  07AA               	addwf	___fladd@bexp,f
  5458  05FA                     l768:
  5459  05FA  0A2A               	incf	___fladd@bexp,w
  5460  05FB  1903               	btfsc	3,2
  5461  05FC  2DFE               	goto	u2961
  5462  05FD  2DFF               	goto	u2960
  5463  05FE                     u2961:
  5464  05FE  2E04               	goto	l2588
  5465  05FF                     u2960:
  5466  05FF                     l2586:
  5467  05FF  082A               	movf	___fladd@bexp,w
  5468  0600  1D03               	btfss	3,2
  5469  0601  2E03               	goto	u2971
  5470  0602  2E04               	goto	u2970
  5471  0603                     u2971:
  5472  0603  2E12               	goto	l2594
  5473  0604                     u2970:
  5474  0604                     l2588:
  5475  0604  3000               	movlw	0
  5476  0605  00F5               	movwf	___fladd@b+3
  5477  0606  3000               	movlw	0
  5478  0607  00F4               	movwf	___fladd@b+2
  5479  0608  3000               	movlw	0
  5480  0609  00F3               	movwf	___fladd@b+1
  5481  060A  3000               	movlw	0
  5482  060B  00F2               	movwf	___fladd@b
  5483  060C                     l2590:
  5484  060C  082A               	movf	___fladd@bexp,w
  5485  060D  1D03               	btfss	3,2
  5486  060E  2E10               	goto	u2981
  5487  060F  2E11               	goto	u2980
  5488  0610                     u2981:
  5489  0610  2E12               	goto	l2594
  5490  0611                     u2980:
  5491  0611                     l2592:
  5492  0611  01A8               	clrf	___fladd@signs
  5493  0612                     l2594:
  5494  0612  1C2A               	btfss	___fladd@bexp,0
  5495  0613  2E15               	goto	u2991
  5496  0614  2E16               	goto	u2990
  5497  0615                     u2991:
  5498  0615  2E18               	goto	l2598
  5499  0616                     u2990:
  5500  0616                     l2596:
  5501  0616  17F4               	bsf	___fladd@b+2,7
  5502  0617  2E1C               	goto	l776
  5503  0618                     l2598:
  5504  0618  307F               	movlw	127
  5505  0619  00A0               	movwf	??___fladd
  5506  061A  0820               	movf	??___fladd,w
  5507  061B  05F4               	andwf	___fladd@b+2,f
  5508  061C                     l776:
  5509  061C  082A               	movf	___fladd@bexp,w
  5510  061D  00A0               	movwf	??___fladd
  5511  061E  1003               	clrc
  5512  061F  0C20               	rrf	??___fladd,w
  5513  0620  00A1               	movwf	??___fladd+1
  5514  0621  0821               	movf	??___fladd+1,w
  5515  0622  00F5               	movwf	___fladd@b+3
  5516  0623                     l2600:
  5517  0623  1FA8               	btfss	___fladd@signs,7
  5518  0624  2E26               	goto	u3001
  5519  0625  2E27               	goto	u3000
  5520  0626                     u3001:
  5521  0626  2E28               	goto	l777
  5522  0627                     u3000:
  5523  0627                     l2602:
  5524  0627  17F5               	bsf	___fladd@b+3,7
  5525  0628                     l777:
  5526  0628                     l747:
  5527  0628  0008               	return
  5528  0629                     __end_of___fladd:
  5529                           
  5530                           	psect	text14
  5531  122B                     __ptext14:	
  5532 ;; *************** function ___flneg *****************
  5533 ;; Defined at:
  5534 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/flneg.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  f1              4    2[COMMON] unsigned char 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  4    2[COMMON] unsigned char 
  5541 ;; Registers used:
  5542 ;;		wreg
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         4       0       0       0       0
  5549 ;;      Locals:         0       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0
  5551 ;;      Totals:         4       0       0       0       0
  5552 ;;Total ram usage:        4 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 1
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_ftoa
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function ___flneg
  5564  122B                     ___flneg:
  5565  122B                     l2800:	
  5566                           ;incstack = 0
  5567                           ; Regs used in ___flneg: [wreg]
  5568                           
  5569  122B  0875               	movf	___flneg@f1+3,w
  5570  122C  0474               	iorwf	___flneg@f1+2,w
  5571  122D  0473               	iorwf	___flneg@f1+1,w
  5572  122E  0472               	iorwf	___flneg@f1,w
  5573  122F  1903               	skipnz
  5574  1230  2A32               	goto	u3431
  5575  1231  2A33               	goto	u3430
  5576  1232                     u3431:
  5577  1232  2A35               	goto	l2804
  5578  1233                     u3430:
  5579  1233                     l2802:
  5580  1233  3080               	movlw	128
  5581  1234  06F5               	xorwf	___flneg@f1+3,f
  5582  1235                     l2804:
  5583  1235                     l623:
  5584  1235  0008               	return
  5585  1236                     __end_of___flneg:
  5586                           
  5587                           	psect	text15
  5588  0040                     __ptext15:	
  5589 ;; *************** function ___flmul *****************
  5590 ;; Defined at:
  5591 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/sprcmul.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  b               4    5[BANK0 ] unsigned char 
  5594 ;;  a               4    9[BANK0 ] unsigned char 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  prod            4   25[BANK0 ] struct .
  5597 ;;  grs             4   20[BANK0 ] unsigned long 
  5598 ;;  temp            2   29[BANK0 ] struct .
  5599 ;;  bexp            1   24[BANK0 ] unsigned char 
  5600 ;;  aexp            1   19[BANK0 ] unsigned char 
  5601 ;;  sign            1   18[BANK0 ] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  4    5[BANK0 ] unsigned char 
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5611 ;;      Params:         0       8       0       0       0
  5612 ;;      Locals:         0      13       0       0       0
  5613 ;;      Temps:          0       5       0       0       0
  5614 ;;      Totals:         0      26       0       0       0
  5615 ;;Total ram usage:       26 bytes
  5616 ;; Hardware stack levels used: 1
  5617 ;; Hardware stack levels required when called: 2
  5618 ;; This function calls:
  5619 ;;		__Umul8_16
  5620 ;; This function is called by:
  5621 ;;		_ftoa
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           
  5626                           ;psect for function ___flmul
  5627  0040                     ___flmul:
  5628  0040                     l3772:	
  5629                           ;incstack = 0
  5630                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5631                           
  5632  0040  1283               	bcf	3,5	;RP0=0, select bank0
  5633  0041  1303               	bcf	3,6	;RP1=0, select bank0
  5634  0042  0828               	movf	___flmul@b+3,w
  5635  0043  3980               	andlw	128
  5636  0044  00AD               	movwf	??___flmul
  5637  0045  082D               	movf	??___flmul,w
  5638  0046  00B2               	movwf	___flmul@sign
  5639  0047                     l3774:
  5640  0047  0828               	movf	___flmul@b+3,w
  5641  0048  00AD               	movwf	??___flmul
  5642  0049  072D               	addwf	??___flmul,w
  5643  004A  00AE               	movwf	??___flmul+1
  5644  004B  082E               	movf	??___flmul+1,w
  5645  004C  00B8               	movwf	___flmul@bexp
  5646  004D                     l3776:
  5647  004D  1FA7               	btfss	___flmul@b+2,7
  5648  004E  2850               	goto	u5071
  5649  004F  2851               	goto	u5070
  5650  0050                     u5071:
  5651  0050  2852               	goto	l3780
  5652  0051                     u5070:
  5653  0051                     l3778:
  5654  0051  1438               	bsf	___flmul@bexp,0
  5655  0052                     l3780:
  5656  0052  0838               	movf	___flmul@bexp,w
  5657  0053  1903               	btfsc	3,2
  5658  0054  2856               	goto	u5081
  5659  0055  2857               	goto	u5080
  5660  0056                     u5081:
  5661  0056  2866               	goto	l3788
  5662  0057                     u5080:
  5663  0057                     l3782:
  5664  0057  0A38               	incf	___flmul@bexp,w
  5665  0058  1D03               	btfss	3,2
  5666  0059  285B               	goto	u5091
  5667  005A  285C               	goto	u5090
  5668  005B                     u5091:
  5669  005B  2864               	goto	l3786
  5670  005C                     u5090:
  5671  005C                     l3784:
  5672  005C  3000               	movlw	0
  5673  005D  00A8               	movwf	___flmul@b+3
  5674  005E  3000               	movlw	0
  5675  005F  00A7               	movwf	___flmul@b+2
  5676  0060  3000               	movlw	0
  5677  0061  00A6               	movwf	___flmul@b+1
  5678  0062  3000               	movlw	0
  5679  0063  00A5               	movwf	___flmul@b
  5680  0064                     l3786:
  5681  0064  17A7               	bsf	___flmul@b+2,7
  5682  0065  286E               	goto	l3790
  5683  0066                     l3788:
  5684  0066  3000               	movlw	0
  5685  0067  00A8               	movwf	___flmul@b+3
  5686  0068  3000               	movlw	0
  5687  0069  00A7               	movwf	___flmul@b+2
  5688  006A  3000               	movlw	0
  5689  006B  00A6               	movwf	___flmul@b+1
  5690  006C  3000               	movlw	0
  5691  006D  00A5               	movwf	___flmul@b
  5692  006E                     l3790:
  5693  006E  082C               	movf	___flmul@a+3,w
  5694  006F  3980               	andlw	128
  5695  0070  00AD               	movwf	??___flmul
  5696  0071  082D               	movf	??___flmul,w
  5697  0072  06B2               	xorwf	___flmul@sign,f
  5698  0073                     l3792:
  5699  0073  082C               	movf	___flmul@a+3,w
  5700  0074  00AD               	movwf	??___flmul
  5701  0075  072D               	addwf	??___flmul,w
  5702  0076  00AE               	movwf	??___flmul+1
  5703  0077  082E               	movf	??___flmul+1,w
  5704  0078  00B3               	movwf	___flmul@aexp
  5705  0079                     l3794:
  5706  0079  1FAB               	btfss	___flmul@a+2,7
  5707  007A  287C               	goto	u5101
  5708  007B  287D               	goto	u5100
  5709  007C                     u5101:
  5710  007C  287E               	goto	l3798
  5711  007D                     u5100:
  5712  007D                     l3796:
  5713  007D  1433               	bsf	___flmul@aexp,0
  5714  007E                     l3798:
  5715  007E  0833               	movf	___flmul@aexp,w
  5716  007F  1903               	btfsc	3,2
  5717  0080  2882               	goto	u5111
  5718  0081  2883               	goto	u5110
  5719  0082                     u5111:
  5720  0082  2892               	goto	l3806
  5721  0083                     u5110:
  5722  0083                     l3800:
  5723  0083  0A33               	incf	___flmul@aexp,w
  5724  0084  1D03               	btfss	3,2
  5725  0085  2887               	goto	u5121
  5726  0086  2888               	goto	u5120
  5727  0087                     u5121:
  5728  0087  2890               	goto	l3804
  5729  0088                     u5120:
  5730  0088                     l3802:
  5731  0088  3000               	movlw	0
  5732  0089  00AC               	movwf	___flmul@a+3
  5733  008A  3000               	movlw	0
  5734  008B  00AB               	movwf	___flmul@a+2
  5735  008C  3000               	movlw	0
  5736  008D  00AA               	movwf	___flmul@a+1
  5737  008E  3000               	movlw	0
  5738  008F  00A9               	movwf	___flmul@a
  5739  0090                     l3804:
  5740  0090  17AB               	bsf	___flmul@a+2,7
  5741  0091  289A               	goto	l3808
  5742  0092                     l3806:
  5743  0092  3000               	movlw	0
  5744  0093  00AC               	movwf	___flmul@a+3
  5745  0094  3000               	movlw	0
  5746  0095  00AB               	movwf	___flmul@a+2
  5747  0096  3000               	movlw	0
  5748  0097  00AA               	movwf	___flmul@a+1
  5749  0098  3000               	movlw	0
  5750  0099  00A9               	movwf	___flmul@a
  5751  009A                     l3808:
  5752  009A  0833               	movf	___flmul@aexp,w
  5753  009B  1903               	btfsc	3,2
  5754  009C  289E               	goto	u5131
  5755  009D  289F               	goto	u5130
  5756  009E                     u5131:
  5757  009E  28A4               	goto	l3812
  5758  009F                     u5130:
  5759  009F                     l3810:
  5760  009F  0838               	movf	___flmul@bexp,w
  5761  00A0  1D03               	btfss	3,2
  5762  00A1  28A3               	goto	u5141
  5763  00A2  28A4               	goto	u5140
  5764  00A3                     u5141:
  5765  00A3  28AD               	goto	l3816
  5766  00A4                     u5140:
  5767  00A4                     l3812:
  5768  00A4  3000               	movlw	0
  5769  00A5  00A8               	movwf	?___flmul+3
  5770  00A6  3000               	movlw	0
  5771  00A7  00A7               	movwf	?___flmul+2
  5772  00A8  3000               	movlw	0
  5773  00A9  00A6               	movwf	?___flmul+1
  5774  00AA  3000               	movlw	0
  5775  00AB  00A5               	movwf	?___flmul
  5776  00AC  2BA0               	goto	l830
  5777  00AD                     l3816:
  5778  00AD  0825               	movf	___flmul@b,w
  5779  00AE  00AD               	movwf	??___flmul
  5780  00AF  082D               	movf	??___flmul,w
  5781  00B0  00F2               	movwf	__Umul8_16@multiplicand
  5782  00B1  082B               	movf	___flmul@a+2,w
  5783  00B2  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  5784  00B7  0873               	movf	?__Umul8_16+1,w
  5785  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  5786  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  5787  00BA  00BE               	movwf	___flmul@temp+1
  5788  00BB  0872               	movf	?__Umul8_16,w
  5789  00BC  00BD               	movwf	___flmul@temp
  5790  00BD                     l3818:
  5791  00BD  083D               	movf	___flmul@temp,w
  5792  00BE  00AD               	movwf	??___flmul
  5793  00BF  01AE               	clrf	??___flmul+1
  5794  00C0  01AF               	clrf	??___flmul+2
  5795  00C1  01B0               	clrf	??___flmul+3
  5796  00C2  0830               	movf	??___flmul+3,w
  5797  00C3  00B7               	movwf	___flmul@grs+3
  5798  00C4  082F               	movf	??___flmul+2,w
  5799  00C5  00B6               	movwf	___flmul@grs+2
  5800  00C6  082E               	movf	??___flmul+1,w
  5801  00C7  00B5               	movwf	___flmul@grs+1
  5802  00C8  082D               	movf	??___flmul,w
  5803  00C9  00B4               	movwf	___flmul@grs
  5804  00CA                     l3820:
  5805  00CA  083E               	movf	___flmul@temp+1,w
  5806  00CB  00AD               	movwf	??___flmul
  5807  00CC  01AE               	clrf	??___flmul+1
  5808  00CD  01AF               	clrf	??___flmul+2
  5809  00CE  01B0               	clrf	??___flmul+3
  5810  00CF  0830               	movf	??___flmul+3,w
  5811  00D0  00BC               	movwf	___flmul@prod+3
  5812  00D1  082F               	movf	??___flmul+2,w
  5813  00D2  00BB               	movwf	___flmul@prod+2
  5814  00D3  082E               	movf	??___flmul+1,w
  5815  00D4  00BA               	movwf	___flmul@prod+1
  5816  00D5  082D               	movf	??___flmul,w
  5817  00D6  00B9               	movwf	___flmul@prod
  5818  00D7  0826               	movf	___flmul@b+1,w
  5819  00D8  00AD               	movwf	??___flmul
  5820  00D9  082D               	movf	??___flmul,w
  5821  00DA  00F2               	movwf	__Umul8_16@multiplicand
  5822  00DB  082A               	movf	___flmul@a+1,w
  5823  00DC  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  5824  00E1  0873               	movf	?__Umul8_16+1,w
  5825  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  5826  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  5827  00E4  00BE               	movwf	___flmul@temp+1
  5828  00E5  0872               	movf	?__Umul8_16,w
  5829  00E6  00BD               	movwf	___flmul@temp
  5830  00E7                     l3822:
  5831  00E7  083D               	movf	___flmul@temp,w
  5832  00E8  00AD               	movwf	??___flmul
  5833  00E9  01AE               	clrf	??___flmul+1
  5834  00EA  01AF               	clrf	??___flmul+2
  5835  00EB  01B0               	clrf	??___flmul+3
  5836  00EC  082D               	movf	??___flmul,w
  5837  00ED  07B4               	addwf	___flmul@grs,f
  5838  00EE  082E               	movf	??___flmul+1,w
  5839  00EF  1103               	clrz
  5840  00F0  1803               	skipnc
  5841  00F1  3E01               	addlw	1
  5842  00F2  1903               	skipnz
  5843  00F3  28F5               	goto	u5151
  5844  00F4  07B5               	addwf	___flmul@grs+1,f
  5845  00F5                     u5151:
  5846  00F5  082F               	movf	??___flmul+2,w
  5847  00F6  1103               	clrz
  5848  00F7  1803               	skipnc
  5849  00F8  3E01               	addlw	1
  5850  00F9  1903               	skipnz
  5851  00FA  28FC               	goto	u5152
  5852  00FB  07B6               	addwf	___flmul@grs+2,f
  5853  00FC                     u5152:
  5854  00FC  0830               	movf	??___flmul+3,w
  5855  00FD  1103               	clrz
  5856  00FE  1803               	skipnc
  5857  00FF  3E01               	addlw	1
  5858  0100  1903               	skipnz
  5859  0101  2903               	goto	u5153
  5860  0102  07B7               	addwf	___flmul@grs+3,f
  5861  0103                     u5153:
  5862  0103                     l3824:
  5863  0103  083E               	movf	___flmul@temp+1,w
  5864  0104  00AD               	movwf	??___flmul
  5865  0105  01AE               	clrf	??___flmul+1
  5866  0106  01AF               	clrf	??___flmul+2
  5867  0107  01B0               	clrf	??___flmul+3
  5868  0108  082D               	movf	??___flmul,w
  5869  0109  07B9               	addwf	___flmul@prod,f
  5870  010A  082E               	movf	??___flmul+1,w
  5871  010B  1103               	clrz
  5872  010C  1803               	skipnc
  5873  010D  3E01               	addlw	1
  5874  010E  1903               	skipnz
  5875  010F  2911               	goto	u5161
  5876  0110  07BA               	addwf	___flmul@prod+1,f
  5877  0111                     u5161:
  5878  0111  082F               	movf	??___flmul+2,w
  5879  0112  1103               	clrz
  5880  0113  1803               	skipnc
  5881  0114  3E01               	addlw	1
  5882  0115  1903               	skipnz
  5883  0116  2918               	goto	u5162
  5884  0117  07BB               	addwf	___flmul@prod+2,f
  5885  0118                     u5162:
  5886  0118  0830               	movf	??___flmul+3,w
  5887  0119  1103               	clrz
  5888  011A  1803               	skipnc
  5889  011B  3E01               	addlw	1
  5890  011C  1903               	skipnz
  5891  011D  291F               	goto	u5163
  5892  011E  07BC               	addwf	___flmul@prod+3,f
  5893  011F                     u5163:
  5894  011F  0827               	movf	___flmul@b+2,w
  5895  0120  00AD               	movwf	??___flmul
  5896  0121  082D               	movf	??___flmul,w
  5897  0122  00F2               	movwf	__Umul8_16@multiplicand
  5898  0123  0829               	movf	___flmul@a,w
  5899  0124  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  5900  0129  0873               	movf	?__Umul8_16+1,w
  5901  012A  1283               	bcf	3,5	;RP0=0, select bank0
  5902  012B  1303               	bcf	3,6	;RP1=0, select bank0
  5903  012C  00BE               	movwf	___flmul@temp+1
  5904  012D  0872               	movf	?__Umul8_16,w
  5905  012E  00BD               	movwf	___flmul@temp
  5906  012F                     l3826:
  5907  012F  083D               	movf	___flmul@temp,w
  5908  0130  00AD               	movwf	??___flmul
  5909  0131  01AE               	clrf	??___flmul+1
  5910  0132  01AF               	clrf	??___flmul+2
  5911  0133  01B0               	clrf	??___flmul+3
  5912  0134  082D               	movf	??___flmul,w
  5913  0135  07B4               	addwf	___flmul@grs,f
  5914  0136  082E               	movf	??___flmul+1,w
  5915  0137  1103               	clrz
  5916  0138  1803               	skipnc
  5917  0139  3E01               	addlw	1
  5918  013A  1903               	skipnz
  5919  013B  293D               	goto	u5171
  5920  013C  07B5               	addwf	___flmul@grs+1,f
  5921  013D                     u5171:
  5922  013D  082F               	movf	??___flmul+2,w
  5923  013E  1103               	clrz
  5924  013F  1803               	skipnc
  5925  0140  3E01               	addlw	1
  5926  0141  1903               	skipnz
  5927  0142  2944               	goto	u5172
  5928  0143  07B6               	addwf	___flmul@grs+2,f
  5929  0144                     u5172:
  5930  0144  0830               	movf	??___flmul+3,w
  5931  0145  1103               	clrz
  5932  0146  1803               	skipnc
  5933  0147  3E01               	addlw	1
  5934  0148  1903               	skipnz
  5935  0149  294B               	goto	u5173
  5936  014A  07B7               	addwf	___flmul@grs+3,f
  5937  014B                     u5173:
  5938  014B                     l3828:
  5939  014B  083E               	movf	___flmul@temp+1,w
  5940  014C  00AD               	movwf	??___flmul
  5941  014D  01AE               	clrf	??___flmul+1
  5942  014E  01AF               	clrf	??___flmul+2
  5943  014F  01B0               	clrf	??___flmul+3
  5944  0150  082D               	movf	??___flmul,w
  5945  0151  07B9               	addwf	___flmul@prod,f
  5946  0152  082E               	movf	??___flmul+1,w
  5947  0153  1103               	clrz
  5948  0154  1803               	skipnc
  5949  0155  3E01               	addlw	1
  5950  0156  1903               	skipnz
  5951  0157  2959               	goto	u5181
  5952  0158  07BA               	addwf	___flmul@prod+1,f
  5953  0159                     u5181:
  5954  0159  082F               	movf	??___flmul+2,w
  5955  015A  1103               	clrz
  5956  015B  1803               	skipnc
  5957  015C  3E01               	addlw	1
  5958  015D  1903               	skipnz
  5959  015E  2960               	goto	u5182
  5960  015F  07BB               	addwf	___flmul@prod+2,f
  5961  0160                     u5182:
  5962  0160  0830               	movf	??___flmul+3,w
  5963  0161  1103               	clrz
  5964  0162  1803               	skipnc
  5965  0163  3E01               	addlw	1
  5966  0164  1903               	skipnz
  5967  0165  2967               	goto	u5183
  5968  0166  07BC               	addwf	___flmul@prod+3,f
  5969  0167                     u5183:
  5970  0167                     l3830:
  5971  0167  3008               	movlw	8
  5972  0168  00AD               	movwf	??___flmul
  5973  0169                     u5195:
  5974  0169  1003               	clrc
  5975  016A  0DB4               	rlf	___flmul@grs,f
  5976  016B  0DB5               	rlf	___flmul@grs+1,f
  5977  016C  0DB6               	rlf	___flmul@grs+2,f
  5978  016D  0DB7               	rlf	___flmul@grs+3,f
  5979  016E  0BAD               	decfsz	??___flmul,f
  5980  016F  2969               	goto	u5195
  5981  0170                     l3832:
  5982  0170  0826               	movf	___flmul@b+1,w
  5983  0171  00AD               	movwf	??___flmul
  5984  0172  082D               	movf	??___flmul,w
  5985  0173  00F2               	movwf	__Umul8_16@multiplicand
  5986  0174  0829               	movf	___flmul@a,w
  5987  0175  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  5988  017A  0873               	movf	?__Umul8_16+1,w
  5989  017B  1283               	bcf	3,5	;RP0=0, select bank0
  5990  017C  1303               	bcf	3,6	;RP1=0, select bank0
  5991  017D  00BE               	movwf	___flmul@temp+1
  5992  017E  0872               	movf	?__Umul8_16,w
  5993  017F  00BD               	movwf	___flmul@temp
  5994  0180                     l3834:
  5995  0180  083D               	movf	___flmul@temp,w
  5996  0181  00AD               	movwf	??___flmul
  5997  0182  083E               	movf	___flmul@temp+1,w
  5998  0183  00AE               	movwf	??___flmul+1
  5999  0184  01AF               	clrf	??___flmul+2
  6000  0185  01B0               	clrf	??___flmul+3
  6001  0186  082D               	movf	??___flmul,w
  6002  0187  07B4               	addwf	___flmul@grs,f
  6003  0188  082E               	movf	??___flmul+1,w
  6004  0189  1103               	clrz
  6005  018A  1803               	skipnc
  6006  018B  3E01               	addlw	1
  6007  018C  1903               	skipnz
  6008  018D  298F               	goto	u5201
  6009  018E  07B5               	addwf	___flmul@grs+1,f
  6010  018F                     u5201:
  6011  018F  082F               	movf	??___flmul+2,w
  6012  0190  1103               	clrz
  6013  0191  1803               	skipnc
  6014  0192  3E01               	addlw	1
  6015  0193  1903               	skipnz
  6016  0194  2996               	goto	u5202
  6017  0195  07B6               	addwf	___flmul@grs+2,f
  6018  0196                     u5202:
  6019  0196  0830               	movf	??___flmul+3,w
  6020  0197  1103               	clrz
  6021  0198  1803               	skipnc
  6022  0199  3E01               	addlw	1
  6023  019A  1903               	skipnz
  6024  019B  299D               	goto	u5203
  6025  019C  07B7               	addwf	___flmul@grs+3,f
  6026  019D                     u5203:
  6027  019D                     l3836:
  6028  019D  0825               	movf	___flmul@b,w
  6029  019E  00AD               	movwf	??___flmul
  6030  019F  082D               	movf	??___flmul,w
  6031  01A0  00F2               	movwf	__Umul8_16@multiplicand
  6032  01A1  082A               	movf	___flmul@a+1,w
  6033  01A2  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  6034  01A7  0873               	movf	?__Umul8_16+1,w
  6035  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  6036  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  6037  01AA  00BE               	movwf	___flmul@temp+1
  6038  01AB  0872               	movf	?__Umul8_16,w
  6039  01AC  00BD               	movwf	___flmul@temp
  6040  01AD                     l3838:
  6041  01AD  083D               	movf	___flmul@temp,w
  6042  01AE  00AD               	movwf	??___flmul
  6043  01AF  083E               	movf	___flmul@temp+1,w
  6044  01B0  00AE               	movwf	??___flmul+1
  6045  01B1  01AF               	clrf	??___flmul+2
  6046  01B2  01B0               	clrf	??___flmul+3
  6047  01B3  082D               	movf	??___flmul,w
  6048  01B4  07B4               	addwf	___flmul@grs,f
  6049  01B5  082E               	movf	??___flmul+1,w
  6050  01B6  1103               	clrz
  6051  01B7  1803               	skipnc
  6052  01B8  3E01               	addlw	1
  6053  01B9  1903               	skipnz
  6054  01BA  29BC               	goto	u5211
  6055  01BB  07B5               	addwf	___flmul@grs+1,f
  6056  01BC                     u5211:
  6057  01BC  082F               	movf	??___flmul+2,w
  6058  01BD  1103               	clrz
  6059  01BE  1803               	skipnc
  6060  01BF  3E01               	addlw	1
  6061  01C0  1903               	skipnz
  6062  01C1  29C3               	goto	u5212
  6063  01C2  07B6               	addwf	___flmul@grs+2,f
  6064  01C3                     u5212:
  6065  01C3  0830               	movf	??___flmul+3,w
  6066  01C4  1103               	clrz
  6067  01C5  1803               	skipnc
  6068  01C6  3E01               	addlw	1
  6069  01C7  1903               	skipnz
  6070  01C8  29CA               	goto	u5213
  6071  01C9  07B7               	addwf	___flmul@grs+3,f
  6072  01CA                     u5213:
  6073  01CA                     l3840:
  6074  01CA  3008               	movlw	8
  6075  01CB  00AD               	movwf	??___flmul
  6076  01CC                     u5225:
  6077  01CC  1003               	clrc
  6078  01CD  0DB4               	rlf	___flmul@grs,f
  6079  01CE  0DB5               	rlf	___flmul@grs+1,f
  6080  01CF  0DB6               	rlf	___flmul@grs+2,f
  6081  01D0  0DB7               	rlf	___flmul@grs+3,f
  6082  01D1  0BAD               	decfsz	??___flmul,f
  6083  01D2  29CC               	goto	u5225
  6084  01D3  0825               	movf	___flmul@b,w
  6085  01D4  00AD               	movwf	??___flmul
  6086  01D5  082D               	movf	??___flmul,w
  6087  01D6  00F2               	movwf	__Umul8_16@multiplicand
  6088  01D7  0829               	movf	___flmul@a,w
  6089  01D8  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  6090  01DD  0873               	movf	?__Umul8_16+1,w
  6091  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  6092  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  6093  01E0  00BE               	movwf	___flmul@temp+1
  6094  01E1  0872               	movf	?__Umul8_16,w
  6095  01E2  00BD               	movwf	___flmul@temp
  6096  01E3                     l3842:
  6097  01E3  083D               	movf	___flmul@temp,w
  6098  01E4  00AD               	movwf	??___flmul
  6099  01E5  083E               	movf	___flmul@temp+1,w
  6100  01E6  00AE               	movwf	??___flmul+1
  6101  01E7  01AF               	clrf	??___flmul+2
  6102  01E8  01B0               	clrf	??___flmul+3
  6103  01E9  082D               	movf	??___flmul,w
  6104  01EA  07B4               	addwf	___flmul@grs,f
  6105  01EB  082E               	movf	??___flmul+1,w
  6106  01EC  1103               	clrz
  6107  01ED  1803               	skipnc
  6108  01EE  3E01               	addlw	1
  6109  01EF  1903               	skipnz
  6110  01F0  29F2               	goto	u5231
  6111  01F1  07B5               	addwf	___flmul@grs+1,f
  6112  01F2                     u5231:
  6113  01F2  082F               	movf	??___flmul+2,w
  6114  01F3  1103               	clrz
  6115  01F4  1803               	skipnc
  6116  01F5  3E01               	addlw	1
  6117  01F6  1903               	skipnz
  6118  01F7  29F9               	goto	u5232
  6119  01F8  07B6               	addwf	___flmul@grs+2,f
  6120  01F9                     u5232:
  6121  01F9  0830               	movf	??___flmul+3,w
  6122  01FA  1103               	clrz
  6123  01FB  1803               	skipnc
  6124  01FC  3E01               	addlw	1
  6125  01FD  1903               	skipnz
  6126  01FE  2A00               	goto	u5233
  6127  01FF  07B7               	addwf	___flmul@grs+3,f
  6128  0200                     u5233:
  6129  0200                     l3844:
  6130  0200  0826               	movf	___flmul@b+1,w
  6131  0201  00AD               	movwf	??___flmul
  6132  0202  082D               	movf	??___flmul,w
  6133  0203  00F2               	movwf	__Umul8_16@multiplicand
  6134  0204  082B               	movf	___flmul@a+2,w
  6135  0205  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  6136  020A  0873               	movf	?__Umul8_16+1,w
  6137  020B  1283               	bcf	3,5	;RP0=0, select bank0
  6138  020C  1303               	bcf	3,6	;RP1=0, select bank0
  6139  020D  00BE               	movwf	___flmul@temp+1
  6140  020E  0872               	movf	?__Umul8_16,w
  6141  020F  00BD               	movwf	___flmul@temp
  6142  0210  083D               	movf	___flmul@temp,w
  6143  0211  00AD               	movwf	??___flmul
  6144  0212  083E               	movf	___flmul@temp+1,w
  6145  0213  00AE               	movwf	??___flmul+1
  6146  0214  01AF               	clrf	??___flmul+2
  6147  0215  01B0               	clrf	??___flmul+3
  6148  0216  082D               	movf	??___flmul,w
  6149  0217  07B9               	addwf	___flmul@prod,f
  6150  0218  082E               	movf	??___flmul+1,w
  6151  0219  1103               	clrz
  6152  021A  1803               	skipnc
  6153  021B  3E01               	addlw	1
  6154  021C  1903               	skipnz
  6155  021D  2A1F               	goto	u5241
  6156  021E  07BA               	addwf	___flmul@prod+1,f
  6157  021F                     u5241:
  6158  021F  082F               	movf	??___flmul+2,w
  6159  0220  1103               	clrz
  6160  0221  1803               	skipnc
  6161  0222  3E01               	addlw	1
  6162  0223  1903               	skipnz
  6163  0224  2A26               	goto	u5242
  6164  0225  07BB               	addwf	___flmul@prod+2,f
  6165  0226                     u5242:
  6166  0226  0830               	movf	??___flmul+3,w
  6167  0227  1103               	clrz
  6168  0228  1803               	skipnc
  6169  0229  3E01               	addlw	1
  6170  022A  1903               	skipnz
  6171  022B  2A2D               	goto	u5243
  6172  022C  07BC               	addwf	___flmul@prod+3,f
  6173  022D                     u5243:
  6174  022D                     l3846:
  6175  022D  0827               	movf	___flmul@b+2,w
  6176  022E  00AD               	movwf	??___flmul
  6177  022F  082D               	movf	??___flmul,w
  6178  0230  00F2               	movwf	__Umul8_16@multiplicand
  6179  0231  082A               	movf	___flmul@a+1,w
  6180  0232  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  6181  0237  0873               	movf	?__Umul8_16+1,w
  6182  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6183  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6184  023A  00BE               	movwf	___flmul@temp+1
  6185  023B  0872               	movf	?__Umul8_16,w
  6186  023C  00BD               	movwf	___flmul@temp
  6187  023D                     l3848:
  6188  023D  083D               	movf	___flmul@temp,w
  6189  023E  00AD               	movwf	??___flmul
  6190  023F  083E               	movf	___flmul@temp+1,w
  6191  0240  00AE               	movwf	??___flmul+1
  6192  0241  01AF               	clrf	??___flmul+2
  6193  0242  01B0               	clrf	??___flmul+3
  6194  0243  082D               	movf	??___flmul,w
  6195  0244  07B9               	addwf	___flmul@prod,f
  6196  0245  082E               	movf	??___flmul+1,w
  6197  0246  1103               	clrz
  6198  0247  1803               	skipnc
  6199  0248  3E01               	addlw	1
  6200  0249  1903               	skipnz
  6201  024A  2A4C               	goto	u5251
  6202  024B  07BA               	addwf	___flmul@prod+1,f
  6203  024C                     u5251:
  6204  024C  082F               	movf	??___flmul+2,w
  6205  024D  1103               	clrz
  6206  024E  1803               	skipnc
  6207  024F  3E01               	addlw	1
  6208  0250  1903               	skipnz
  6209  0251  2A53               	goto	u5252
  6210  0252  07BB               	addwf	___flmul@prod+2,f
  6211  0253                     u5252:
  6212  0253  0830               	movf	??___flmul+3,w
  6213  0254  1103               	clrz
  6214  0255  1803               	skipnc
  6215  0256  3E01               	addlw	1
  6216  0257  1903               	skipnz
  6217  0258  2A5A               	goto	u5253
  6218  0259  07BC               	addwf	___flmul@prod+3,f
  6219  025A                     u5253:
  6220  025A  0827               	movf	___flmul@b+2,w
  6221  025B  00AD               	movwf	??___flmul
  6222  025C  082D               	movf	??___flmul,w
  6223  025D  00F2               	movwf	__Umul8_16@multiplicand
  6224  025E  082B               	movf	___flmul@a+2,w
  6225  025F  160A  118A  2394  120A  118A  	fcall	__Umul8_16
  6226  0264  0873               	movf	?__Umul8_16+1,w
  6227  0265  1283               	bcf	3,5	;RP0=0, select bank0
  6228  0266  1303               	bcf	3,6	;RP1=0, select bank0
  6229  0267  00BE               	movwf	___flmul@temp+1
  6230  0268  0872               	movf	?__Umul8_16,w
  6231  0269  00BD               	movwf	___flmul@temp
  6232  026A                     l3850:
  6233  026A  083D               	movf	___flmul@temp,w
  6234  026B  00AD               	movwf	??___flmul
  6235  026C  083E               	movf	___flmul@temp+1,w
  6236  026D  00AE               	movwf	??___flmul+1
  6237  026E  01AF               	clrf	??___flmul+2
  6238  026F  01B0               	clrf	??___flmul+3
  6239  0270  3008               	movlw	8
  6240  0271                     u5265:
  6241  0271  1003               	clrc
  6242  0272  0DAD               	rlf	??___flmul,f
  6243  0273  0DAE               	rlf	??___flmul+1,f
  6244  0274  0DAF               	rlf	??___flmul+2,f
  6245  0275  0DB0               	rlf	??___flmul+3,f
  6246  0276                     u5260:
  6247  0276  3EFF               	addlw	-1
  6248  0277  1D03               	skipz
  6249  0278  2A71               	goto	u5265
  6250  0279  082D               	movf	??___flmul,w
  6251  027A  07B9               	addwf	___flmul@prod,f
  6252  027B  082E               	movf	??___flmul+1,w
  6253  027C  1103               	clrz
  6254  027D  1803               	skipnc
  6255  027E  3E01               	addlw	1
  6256  027F  1903               	skipnz
  6257  0280  2A82               	goto	u5271
  6258  0281  07BA               	addwf	___flmul@prod+1,f
  6259  0282                     u5271:
  6260  0282  082F               	movf	??___flmul+2,w
  6261  0283  1103               	clrz
  6262  0284  1803               	skipnc
  6263  0285  3E01               	addlw	1
  6264  0286  1903               	skipnz
  6265  0287  2A89               	goto	u5272
  6266  0288  07BB               	addwf	___flmul@prod+2,f
  6267  0289                     u5272:
  6268  0289  0830               	movf	??___flmul+3,w
  6269  028A  1103               	clrz
  6270  028B  1803               	skipnc
  6271  028C  3E01               	addlw	1
  6272  028D  1903               	skipnz
  6273  028E  2A90               	goto	u5273
  6274  028F  07BC               	addwf	___flmul@prod+3,f
  6275  0290                     u5273:
  6276  0290                     l3852:
  6277  0290  0834               	movf	___flmul@grs,w
  6278  0291  00AD               	movwf	??___flmul
  6279  0292  0835               	movf	___flmul@grs+1,w
  6280  0293  00AE               	movwf	??___flmul+1
  6281  0294  0836               	movf	___flmul@grs+2,w
  6282  0295  00AF               	movwf	??___flmul+2
  6283  0296  0837               	movf	___flmul@grs+3,w
  6284  0297  00B0               	movwf	??___flmul+3
  6285  0298  3018               	movlw	24
  6286  0299                     u5285:
  6287  0299  1003               	clrc
  6288  029A  0CB0               	rrf	??___flmul+3,f
  6289  029B  0CAF               	rrf	??___flmul+2,f
  6290  029C  0CAE               	rrf	??___flmul+1,f
  6291  029D  0CAD               	rrf	??___flmul,f
  6292  029E                     u5280:
  6293  029E  3EFF               	addlw	-1
  6294  029F  1D03               	skipz
  6295  02A0  2A99               	goto	u5285
  6296  02A1  082D               	movf	??___flmul,w
  6297  02A2  07B9               	addwf	___flmul@prod,f
  6298  02A3  082E               	movf	??___flmul+1,w
  6299  02A4  1103               	clrz
  6300  02A5  1803               	skipnc
  6301  02A6  3E01               	addlw	1
  6302  02A7  1903               	skipnz
  6303  02A8  2AAA               	goto	u5291
  6304  02A9  07BA               	addwf	___flmul@prod+1,f
  6305  02AA                     u5291:
  6306  02AA  082F               	movf	??___flmul+2,w
  6307  02AB  1103               	clrz
  6308  02AC  1803               	skipnc
  6309  02AD  3E01               	addlw	1
  6310  02AE  1903               	skipnz
  6311  02AF  2AB1               	goto	u5292
  6312  02B0  07BB               	addwf	___flmul@prod+2,f
  6313  02B1                     u5292:
  6314  02B1  0830               	movf	??___flmul+3,w
  6315  02B2  1103               	clrz
  6316  02B3  1803               	skipnc
  6317  02B4  3E01               	addlw	1
  6318  02B5  1903               	skipnz
  6319  02B6  2AB8               	goto	u5293
  6320  02B7  07BC               	addwf	___flmul@prod+3,f
  6321  02B8                     u5293:
  6322  02B8                     l3854:
  6323  02B8  3008               	movlw	8
  6324  02B9  00AD               	movwf	??___flmul
  6325  02BA                     u5305:
  6326  02BA  1003               	clrc
  6327  02BB  0DB4               	rlf	___flmul@grs,f
  6328  02BC  0DB5               	rlf	___flmul@grs+1,f
  6329  02BD  0DB6               	rlf	___flmul@grs+2,f
  6330  02BE  0DB7               	rlf	___flmul@grs+3,f
  6331  02BF  0BAD               	decfsz	??___flmul,f
  6332  02C0  2ABA               	goto	u5305
  6333  02C1                     l3856:
  6334  02C1  0838               	movf	___flmul@bexp,w
  6335  02C2  0733               	addwf	___flmul@aexp,w
  6336  02C3  00AD               	movwf	??___flmul
  6337  02C4  01AE               	clrf	??___flmul+1
  6338  02C5  0DAE               	rlf	??___flmul+1,f
  6339  02C6  082D               	movf	??___flmul,w
  6340  02C7  3E82               	addlw	130
  6341  02C8  00BD               	movwf	___flmul@temp
  6342  02C9  082E               	movf	??___flmul+1,w
  6343  02CA  1803               	skipnc
  6344  02CB  3E01               	addlw	1
  6345  02CC  3EFF               	addlw	255
  6346  02CD  00BE               	movwf	___flmul@temp+1
  6347  02CE  2AEC               	goto	l3868
  6348  02CF                     l3858:
  6349  02CF  3001               	movlw	1
  6350  02D0  00AD               	movwf	??___flmul
  6351  02D1                     u5315:
  6352  02D1  1003               	clrc
  6353  02D2  0DB9               	rlf	___flmul@prod,f
  6354  02D3  0DBA               	rlf	___flmul@prod+1,f
  6355  02D4  0DBB               	rlf	___flmul@prod+2,f
  6356  02D5  0DBC               	rlf	___flmul@prod+3,f
  6357  02D6  0BAD               	decfsz	??___flmul,f
  6358  02D7  2AD1               	goto	u5315
  6359  02D8                     l3860:
  6360  02D8  1FB7               	btfss	___flmul@grs+3,7
  6361  02D9  2ADB               	goto	u5321
  6362  02DA  2ADC               	goto	u5320
  6363  02DB                     u5321:
  6364  02DB  2ADD               	goto	l3864
  6365  02DC                     u5320:
  6366  02DC                     l3862:
  6367  02DC  1439               	bsf	___flmul@prod,0
  6368  02DD                     l3864:
  6369  02DD  3001               	movlw	1
  6370  02DE  00AD               	movwf	??___flmul
  6371  02DF                     u5335:
  6372  02DF  1003               	clrc
  6373  02E0  0DB4               	rlf	___flmul@grs,f
  6374  02E1  0DB5               	rlf	___flmul@grs+1,f
  6375  02E2  0DB6               	rlf	___flmul@grs+2,f
  6376  02E3  0DB7               	rlf	___flmul@grs+3,f
  6377  02E4  0BAD               	decfsz	??___flmul,f
  6378  02E5  2ADF               	goto	u5335
  6379  02E6                     l3866:
  6380  02E6  30FF               	movlw	255
  6381  02E7  07BD               	addwf	___flmul@temp,f
  6382  02E8  1803               	skipnc
  6383  02E9  0ABE               	incf	___flmul@temp+1,f
  6384  02EA  30FF               	movlw	255
  6385  02EB  07BE               	addwf	___flmul@temp+1,f
  6386  02EC                     l3868:
  6387  02EC  1FBB               	btfss	___flmul@prod+2,7
  6388  02ED  2AEF               	goto	u5341
  6389  02EE  2AF0               	goto	u5340
  6390  02EF                     u5341:
  6391  02EF  2ACF               	goto	l3858
  6392  02F0                     u5340:
  6393  02F0                     l3870:
  6394  02F0  01B3               	clrf	___flmul@aexp
  6395  02F1                     l3872:
  6396  02F1  1FB7               	btfss	___flmul@grs+3,7
  6397  02F2  2AF4               	goto	u5351
  6398  02F3  2AF5               	goto	u5350
  6399  02F4                     u5351:
  6400  02F4  2B11               	goto	l3880
  6401  02F5                     u5350:
  6402  02F5                     l3874:
  6403  02F5  30FF               	movlw	255
  6404  02F6  0534               	andwf	___flmul@grs,w
  6405  02F7  00AD               	movwf	??___flmul
  6406  02F8  30FF               	movlw	255
  6407  02F9  0535               	andwf	___flmul@grs+1,w
  6408  02FA  00AE               	movwf	??___flmul+1
  6409  02FB  30FF               	movlw	255
  6410  02FC  0536               	andwf	___flmul@grs+2,w
  6411  02FD  00AF               	movwf	??___flmul+2
  6412  02FE  307F               	movlw	127
  6413  02FF  0537               	andwf	___flmul@grs+3,w
  6414  0300  00B0               	movwf	??___flmul+3
  6415  0301  0830               	movf	??___flmul+3,w
  6416  0302  042F               	iorwf	??___flmul+2,w
  6417  0303  042E               	iorwf	??___flmul+1,w
  6418  0304  042D               	iorwf	??___flmul,w
  6419  0305  1903               	skipnz
  6420  0306  2B08               	goto	u5361
  6421  0307  2B09               	goto	u5360
  6422  0308                     u5361:
  6423  0308  2B0C               	goto	l836
  6424  0309                     u5360:
  6425  0309                     l3876:
  6426  0309  01B3               	clrf	___flmul@aexp
  6427  030A  0AB3               	incf	___flmul@aexp,f
  6428  030B  2B11               	goto	l3880
  6429  030C                     l836:
  6430  030C  1C39               	btfss	___flmul@prod,0
  6431  030D  2B0F               	goto	u5371
  6432  030E  2B10               	goto	u5370
  6433  030F                     u5371:
  6434  030F  2B11               	goto	l3880
  6435  0310                     u5370:
  6436  0310  2B09               	goto	l3876
  6437  0311                     l3880:
  6438  0311  0833               	movf	___flmul@aexp,w
  6439  0312  1903               	btfsc	3,2
  6440  0313  2B15               	goto	u5381
  6441  0314  2B16               	goto	u5380
  6442  0315                     u5381:
  6443  0315  2B47               	goto	l3890
  6444  0316                     u5380:
  6445  0316                     l3882:
  6446  0316  3001               	movlw	1
  6447  0317  07B9               	addwf	___flmul@prod,f
  6448  0318  3000               	movlw	0
  6449  0319  1803               	skipnc
  6450  031A  3001               	movlw	1
  6451  031B  07BA               	addwf	___flmul@prod+1,f
  6452  031C  3000               	movlw	0
  6453  031D  1803               	skipnc
  6454  031E  3001               	movlw	1
  6455  031F  07BB               	addwf	___flmul@prod+2,f
  6456  0320  3000               	movlw	0
  6457  0321  1803               	skipnc
  6458  0322  3001               	movlw	1
  6459  0323  07BC               	addwf	___flmul@prod+3,f
  6460  0324                     l3884:
  6461  0324  1C3C               	btfss	___flmul@prod+3,0
  6462  0325  2B27               	goto	u5391
  6463  0326  2B28               	goto	u5390
  6464  0327                     u5391:
  6465  0327  2B47               	goto	l3890
  6466  0328                     u5390:
  6467  0328                     l3886:
  6468  0328  0839               	movf	___flmul@prod,w
  6469  0329  00AD               	movwf	??___flmul
  6470  032A  083A               	movf	___flmul@prod+1,w
  6471  032B  00AE               	movwf	??___flmul+1
  6472  032C  083B               	movf	___flmul@prod+2,w
  6473  032D  00AF               	movwf	??___flmul+2
  6474  032E  083C               	movf	___flmul@prod+3,w
  6475  032F  00B0               	movwf	??___flmul+3
  6476  0330  3001               	movlw	1
  6477  0331  00B1               	movwf	??___flmul+4
  6478  0332                     u5405:
  6479  0332  0D30               	rlf	??___flmul+3,w
  6480  0333  0CB0               	rrf	??___flmul+3,f
  6481  0334  0CAF               	rrf	??___flmul+2,f
  6482  0335  0CAE               	rrf	??___flmul+1,f
  6483  0336  0CAD               	rrf	??___flmul,f
  6484  0337                     u5400:
  6485  0337  0BB1               	decfsz	??___flmul+4,f
  6486  0338  2B32               	goto	u5405
  6487  0339  0830               	movf	??___flmul+3,w
  6488  033A  00BC               	movwf	___flmul@prod+3
  6489  033B  082F               	movf	??___flmul+2,w
  6490  033C  00BB               	movwf	___flmul@prod+2
  6491  033D  082E               	movf	??___flmul+1,w
  6492  033E  00BA               	movwf	___flmul@prod+1
  6493  033F  082D               	movf	??___flmul,w
  6494  0340  00B9               	movwf	___flmul@prod
  6495  0341                     l3888:
  6496  0341  3001               	movlw	1
  6497  0342  07BD               	addwf	___flmul@temp,f
  6498  0343  1803               	skipnc
  6499  0344  0ABE               	incf	___flmul@temp+1,f
  6500  0345  3000               	movlw	0
  6501  0346  07BE               	addwf	___flmul@temp+1,f
  6502  0347                     l3890:
  6503  0347  083E               	movf	___flmul@temp+1,w
  6504  0348  3A80               	xorlw	128
  6505  0349  00FF               	movwf	btemp+1
  6506  034A  3080               	movlw	128
  6507  034B  027F               	subwf	btemp+1,w
  6508  034C  1D03               	skipz
  6509  034D  2B50               	goto	u5415
  6510  034E  30FF               	movlw	255
  6511  034F  023D               	subwf	___flmul@temp,w
  6512  0350                     u5415:
  6513  0350  1C03               	skipc
  6514  0351  2B53               	goto	u5411
  6515  0352  2B54               	goto	u5410
  6516  0353                     u5411:
  6517  0353  2B5F               	goto	l3894
  6518  0354                     u5410:
  6519  0354                     l3892:
  6520  0354  307F               	movlw	127
  6521  0355  1283               	bcf	3,5	;RP0=0, select bank0
  6522  0356  1303               	bcf	3,6	;RP1=0, select bank0
  6523  0357  00BC               	movwf	___flmul@prod+3
  6524  0358  3080               	movlw	128
  6525  0359  00BB               	movwf	___flmul@prod+2
  6526  035A  3000               	movlw	0
  6527  035B  00BA               	movwf	___flmul@prod+1
  6528  035C  3000               	movlw	0
  6529  035D  00B9               	movwf	___flmul@prod
  6530  035E  2B94               	goto	l842
  6531  035F                     l3894:
  6532  035F  1283               	bcf	3,5	;RP0=0, select bank0
  6533  0360  1303               	bcf	3,6	;RP1=0, select bank0
  6534  0361  083E               	movf	___flmul@temp+1,w
  6535  0362  3A80               	xorlw	128
  6536  0363  00FF               	movwf	btemp+1
  6537  0364  3080               	movlw	128
  6538  0365  027F               	subwf	btemp+1,w
  6539  0366  1D03               	skipz
  6540  0367  2B6A               	goto	u5425
  6541  0368  3001               	movlw	1
  6542  0369  023D               	subwf	___flmul@temp,w
  6543  036A                     u5425:
  6544  036A  1803               	skipnc
  6545  036B  2B6D               	goto	u5421
  6546  036C  2B6E               	goto	u5420
  6547  036D                     u5421:
  6548  036D  2B7A               	goto	l3900
  6549  036E                     u5420:
  6550  036E                     l3896:
  6551  036E  3000               	movlw	0
  6552  036F  1283               	bcf	3,5	;RP0=0, select bank0
  6553  0370  1303               	bcf	3,6	;RP1=0, select bank0
  6554  0371  00BC               	movwf	___flmul@prod+3
  6555  0372  3000               	movlw	0
  6556  0373  00BB               	movwf	___flmul@prod+2
  6557  0374  3000               	movlw	0
  6558  0375  00BA               	movwf	___flmul@prod+1
  6559  0376  3000               	movlw	0
  6560  0377  00B9               	movwf	___flmul@prod
  6561  0378                     l3898:
  6562  0378  01B2               	clrf	___flmul@sign
  6563  0379  2B94               	goto	l842
  6564  037A                     l3900:
  6565  037A  1283               	bcf	3,5	;RP0=0, select bank0
  6566  037B  1303               	bcf	3,6	;RP1=0, select bank0
  6567  037C  083D               	movf	___flmul@temp,w
  6568  037D  00AD               	movwf	??___flmul
  6569  037E  082D               	movf	??___flmul,w
  6570  037F  00B8               	movwf	___flmul@bexp
  6571  0380  30FF               	movlw	255
  6572  0381  05B9               	andwf	___flmul@prod,f
  6573  0382  30FF               	movlw	255
  6574  0383  05BA               	andwf	___flmul@prod+1,f
  6575  0384  307F               	movlw	127
  6576  0385  05BB               	andwf	___flmul@prod+2,f
  6577  0386  3000               	movlw	0
  6578  0387  05BC               	andwf	___flmul@prod+3,f
  6579  0388                     l3902:
  6580  0388  1C38               	btfss	___flmul@bexp,0
  6581  0389  2B8B               	goto	u5431
  6582  038A  2B8C               	goto	u5430
  6583  038B                     u5431:
  6584  038B  2B8D               	goto	l3906
  6585  038C                     u5430:
  6586  038C                     l3904:
  6587  038C  17BB               	bsf	___flmul@prod+2,7
  6588  038D                     l3906:
  6589  038D  0838               	movf	___flmul@bexp,w
  6590  038E  00AD               	movwf	??___flmul
  6591  038F  1003               	clrc
  6592  0390  0C2D               	rrf	??___flmul,w
  6593  0391  00AE               	movwf	??___flmul+1
  6594  0392  082E               	movf	??___flmul+1,w
  6595  0393  00BC               	movwf	___flmul@prod+3
  6596  0394                     l842:
  6597  0394  0832               	movf	___flmul@sign,w
  6598  0395  00AD               	movwf	??___flmul
  6599  0396  082D               	movf	??___flmul,w
  6600  0397  04BC               	iorwf	___flmul@prod+3,f
  6601  0398                     l3908:
  6602  0398  083C               	movf	___flmul@prod+3,w
  6603  0399  00A8               	movwf	?___flmul+3
  6604  039A  083B               	movf	___flmul@prod+2,w
  6605  039B  00A7               	movwf	?___flmul+2
  6606  039C  083A               	movf	___flmul@prod+1,w
  6607  039D  00A6               	movwf	?___flmul+1
  6608  039E  0839               	movf	___flmul@prod,w
  6609  039F  00A5               	movwf	?___flmul
  6610  03A0                     l830:
  6611  03A0  0008               	return
  6612  03A1                     __end_of___flmul:
  6613                           
  6614                           	psect	text16
  6615  1394                     __ptext16:	
  6616 ;; *************** function __Umul8_16 *****************
  6617 ;; Defined at:
  6618 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/Umul8_16.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  multiplier      1    wreg     unsigned char 
  6621 ;;  multiplicand    1    2[COMMON] unsigned char 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6624 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6625 ;;  product         2    0[BANK0 ] unsigned int 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  2    2[COMMON] unsigned int 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6635 ;;      Params:         2       0       0       0       0
  6636 ;;      Locals:         0       5       0       0       0
  6637 ;;      Temps:          2       0       0       0       0
  6638 ;;      Totals:         4       5       0       0       0
  6639 ;;Total ram usage:        9 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; Hardware stack levels required when called: 1
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		___flmul
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           
  6650                           ;psect for function __Umul8_16
  6651  1394                     __Umul8_16:
  6652                           
  6653                           ;incstack = 0
  6654                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6655                           ;__Umul8_16@multiplier stored from wreg
  6656  1394  1283               	bcf	3,5	;RP0=0, select bank0
  6657  1395  1303               	bcf	3,6	;RP1=0, select bank0
  6658  1396  00A4               	movwf	__Umul8_16@multiplier
  6659  1397                     l3644:
  6660  1397  01A0               	clrf	__Umul8_16@product
  6661  1398  01A1               	clrf	__Umul8_16@product+1
  6662  1399                     l3646:
  6663  1399  0872               	movf	__Umul8_16@multiplicand,w
  6664  139A  00F4               	movwf	??__Umul8_16
  6665  139B  01F5               	clrf	??__Umul8_16+1
  6666  139C  0874               	movf	??__Umul8_16,w
  6667  139D  00A2               	movwf	__Umul8_16@word_mpld
  6668  139E  0875               	movf	??__Umul8_16+1,w
  6669  139F  00A3               	movwf	__Umul8_16@word_mpld+1
  6670  13A0                     l3648:
  6671  13A0  1C24               	btfss	__Umul8_16@multiplier,0
  6672  13A1  2BA3               	goto	u4791
  6673  13A2  2BA4               	goto	u4790
  6674  13A3                     u4791:
  6675  13A3  2BAA               	goto	l849
  6676  13A4                     u4790:
  6677  13A4                     l3650:
  6678  13A4  0822               	movf	__Umul8_16@word_mpld,w
  6679  13A5  07A0               	addwf	__Umul8_16@product,f
  6680  13A6  1803               	skipnc
  6681  13A7  0AA1               	incf	__Umul8_16@product+1,f
  6682  13A8  0823               	movf	__Umul8_16@word_mpld+1,w
  6683  13A9  07A1               	addwf	__Umul8_16@product+1,f
  6684  13AA                     l849:
  6685  13AA  3001               	movlw	1
  6686  13AB                     u4805:
  6687  13AB  1003               	clrc
  6688  13AC  0DA2               	rlf	__Umul8_16@word_mpld,f
  6689  13AD  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6690  13AE  3EFF               	addlw	-1
  6691  13AF  1D03               	skipz
  6692  13B0  2BAB               	goto	u4805
  6693  13B1  1003               	clrc
  6694  13B2  0CA4               	rrf	__Umul8_16@multiplier,f
  6695  13B3                     l3652:
  6696  13B3  0824               	movf	__Umul8_16@multiplier,w
  6697  13B4  1D03               	btfss	3,2
  6698  13B5  2BB7               	goto	u4811
  6699  13B6  2BB8               	goto	u4810
  6700  13B7                     u4811:
  6701  13B7  2BA0               	goto	l3648
  6702  13B8                     u4810:
  6703  13B8                     l3654:
  6704  13B8  0821               	movf	__Umul8_16@product+1,w
  6705  13B9  00F3               	movwf	?__Umul8_16+1
  6706  13BA  0820               	movf	__Umul8_16@product,w
  6707  13BB  00F2               	movwf	?__Umul8_16
  6708  13BC                     l851:
  6709  13BC  0008               	return
  6710  13BD                     __end_of__Umul8_16:
  6711                           
  6712                           	psect	text17
  6713  08A2                     __ptext17:	
  6714 ;; *************** function ___flge *****************
  6715 ;; Defined at:
  6716 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/flge.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  ff1             4    2[COMMON] unsigned int 
  6719 ;;  ff2             4    6[COMMON] unsigned int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;		None               void
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6731 ;;      Params:         8       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0
  6733 ;;      Temps:          0       4       0       0       0
  6734 ;;      Totals:         8       4       0       0       0
  6735 ;;Total ram usage:       12 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; Hardware stack levels required when called: 1
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_ftoa
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           
  6746                           ;psect for function ___flge
  6747  08A2                     ___flge:
  6748  08A2                     l2780:	
  6749                           ;incstack = 0
  6750                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6751                           
  6752  08A2  3000               	movlw	0
  6753  08A3  0572               	andwf	___flge@ff1,w
  6754  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  6755  08A5  1303               	bcf	3,6	;RP1=0, select bank0
  6756  08A6  00A0               	movwf	??___flge
  6757  08A7  3000               	movlw	0
  6758  08A8  0573               	andwf	___flge@ff1+1,w
  6759  08A9  00A1               	movwf	??___flge+1
  6760  08AA  3080               	movlw	128
  6761  08AB  0574               	andwf	___flge@ff1+2,w
  6762  08AC  00A2               	movwf	??___flge+2
  6763  08AD  307F               	movlw	127
  6764  08AE  0575               	andwf	___flge@ff1+3,w
  6765  08AF  00A3               	movwf	??___flge+3
  6766  08B0  0823               	movf	??___flge+3,w
  6767  08B1  0422               	iorwf	??___flge+2,w
  6768  08B2  0421               	iorwf	??___flge+1,w
  6769  08B3  0420               	iorwf	??___flge,w
  6770  08B4  1D03               	skipz
  6771  08B5  28B7               	goto	u3361
  6772  08B6  28B8               	goto	u3360
  6773  08B7                     u3361:
  6774  08B7  28C0               	goto	l615
  6775  08B8                     u3360:
  6776  08B8                     l2782:
  6777  08B8  3000               	movlw	0
  6778  08B9  00F5               	movwf	___flge@ff1+3
  6779  08BA  3000               	movlw	0
  6780  08BB  00F4               	movwf	___flge@ff1+2
  6781  08BC  3000               	movlw	0
  6782  08BD  00F3               	movwf	___flge@ff1+1
  6783  08BE  3000               	movlw	0
  6784  08BF  00F2               	movwf	___flge@ff1
  6785  08C0                     l615:
  6786  08C0  3000               	movlw	0
  6787  08C1  0576               	andwf	___flge@ff2,w
  6788  08C2  00A0               	movwf	??___flge
  6789  08C3  3000               	movlw	0
  6790  08C4  0577               	andwf	___flge@ff2+1,w
  6791  08C5  00A1               	movwf	??___flge+1
  6792  08C6  3080               	movlw	128
  6793  08C7  0578               	andwf	___flge@ff2+2,w
  6794  08C8  00A2               	movwf	??___flge+2
  6795  08C9  307F               	movlw	127
  6796  08CA  0579               	andwf	___flge@ff2+3,w
  6797  08CB  00A3               	movwf	??___flge+3
  6798  08CC  0823               	movf	??___flge+3,w
  6799  08CD  0422               	iorwf	??___flge+2,w
  6800  08CE  0421               	iorwf	??___flge+1,w
  6801  08CF  0420               	iorwf	??___flge,w
  6802  08D0  1D03               	skipz
  6803  08D1  28D3               	goto	u3371
  6804  08D2  28D4               	goto	u3370
  6805  08D3                     u3371:
  6806  08D3  28DC               	goto	l2786
  6807  08D4                     u3370:
  6808  08D4                     l2784:
  6809  08D4  3000               	movlw	0
  6810  08D5  00F9               	movwf	___flge@ff2+3
  6811  08D6  3000               	movlw	0
  6812  08D7  00F8               	movwf	___flge@ff2+2
  6813  08D8  3000               	movlw	0
  6814  08D9  00F7               	movwf	___flge@ff2+1
  6815  08DA  3000               	movlw	0
  6816  08DB  00F6               	movwf	___flge@ff2
  6817  08DC                     l2786:
  6818  08DC  1FF5               	btfss	___flge@ff1+3,7
  6819  08DD  28DF               	goto	u3381
  6820  08DE  28E0               	goto	u3380
  6821  08DF                     u3381:
  6822  08DF  2904               	goto	l2790
  6823  08E0                     u3380:
  6824  08E0                     l2788:
  6825  08E0  3000               	movlw	0
  6826  08E1  00A0               	movwf	??___flge
  6827  08E2  3000               	movlw	0
  6828  08E3  00A1               	movwf	??___flge+1
  6829  08E4  3000               	movlw	0
  6830  08E5  00A2               	movwf	??___flge+2
  6831  08E6  3080               	movlw	128
  6832  08E7  00A3               	movwf	??___flge+3
  6833  08E8  0872               	movf	___flge@ff1,w
  6834  08E9  02A0               	subwf	??___flge,f
  6835  08EA  0873               	movf	___flge@ff1+1,w
  6836  08EB  1C03               	skipc
  6837  08EC  0F73               	incfsz	___flge@ff1+1,w
  6838  08ED  28EF               	goto	u3391
  6839  08EE  28F0               	goto	u3392
  6840  08EF                     u3391:
  6841  08EF  02A1               	subwf	??___flge+1,f
  6842  08F0                     u3392:
  6843  08F0  0874               	movf	___flge@ff1+2,w
  6844  08F1  1C03               	skipc
  6845  08F2  0F74               	incfsz	___flge@ff1+2,w
  6846  08F3  28F5               	goto	u3393
  6847  08F4  28F6               	goto	u3394
  6848  08F5                     u3393:
  6849  08F5  02A2               	subwf	??___flge+2,f
  6850  08F6                     u3394:
  6851  08F6  0875               	movf	___flge@ff1+3,w
  6852  08F7  1C03               	skipc
  6853  08F8  0F75               	incfsz	___flge@ff1+3,w
  6854  08F9  28FB               	goto	u3395
  6855  08FA  28FC               	goto	u3396
  6856  08FB                     u3395:
  6857  08FB  02A3               	subwf	??___flge+3,f
  6858  08FC                     u3396:
  6859  08FC  0823               	movf	??___flge+3,w
  6860  08FD  00F5               	movwf	___flge@ff1+3
  6861  08FE  0822               	movf	??___flge+2,w
  6862  08FF  00F4               	movwf	___flge@ff1+2
  6863  0900  0821               	movf	??___flge+1,w
  6864  0901  00F3               	movwf	___flge@ff1+1
  6865  0902  0820               	movf	??___flge,w
  6866  0903  00F2               	movwf	___flge@ff1
  6867  0904                     l2790:
  6868  0904  1FF9               	btfss	___flge@ff2+3,7
  6869  0905  2907               	goto	u3401
  6870  0906  2908               	goto	u3400
  6871  0907                     u3401:
  6872  0907  292C               	goto	l618
  6873  0908                     u3400:
  6874  0908                     l2792:
  6875  0908  3000               	movlw	0
  6876  0909  00A0               	movwf	??___flge
  6877  090A  3000               	movlw	0
  6878  090B  00A1               	movwf	??___flge+1
  6879  090C  3000               	movlw	0
  6880  090D  00A2               	movwf	??___flge+2
  6881  090E  3080               	movlw	128
  6882  090F  00A3               	movwf	??___flge+3
  6883  0910  0876               	movf	___flge@ff2,w
  6884  0911  02A0               	subwf	??___flge,f
  6885  0912  0877               	movf	___flge@ff2+1,w
  6886  0913  1C03               	skipc
  6887  0914  0F77               	incfsz	___flge@ff2+1,w
  6888  0915  2917               	goto	u3411
  6889  0916  2918               	goto	u3412
  6890  0917                     u3411:
  6891  0917  02A1               	subwf	??___flge+1,f
  6892  0918                     u3412:
  6893  0918  0878               	movf	___flge@ff2+2,w
  6894  0919  1C03               	skipc
  6895  091A  0F78               	incfsz	___flge@ff2+2,w
  6896  091B  291D               	goto	u3413
  6897  091C  291E               	goto	u3414
  6898  091D                     u3413:
  6899  091D  02A2               	subwf	??___flge+2,f
  6900  091E                     u3414:
  6901  091E  0879               	movf	___flge@ff2+3,w
  6902  091F  1C03               	skipc
  6903  0920  0F79               	incfsz	___flge@ff2+3,w
  6904  0921  2923               	goto	u3415
  6905  0922  2924               	goto	u3416
  6906  0923                     u3415:
  6907  0923  02A3               	subwf	??___flge+3,f
  6908  0924                     u3416:
  6909  0924  0823               	movf	??___flge+3,w
  6910  0925  00F9               	movwf	___flge@ff2+3
  6911  0926  0822               	movf	??___flge+2,w
  6912  0927  00F8               	movwf	___flge@ff2+2
  6913  0928  0821               	movf	??___flge+1,w
  6914  0929  00F7               	movwf	___flge@ff2+1
  6915  092A  0820               	movf	??___flge,w
  6916  092B  00F6               	movwf	___flge@ff2
  6917  092C                     l618:
  6918  092C  3080               	movlw	128
  6919  092D  06F5               	xorwf	___flge@ff1+3,f
  6920  092E  3080               	movlw	128
  6921  092F  06F9               	xorwf	___flge@ff2+3,f
  6922  0930  0879               	movf	___flge@ff2+3,w
  6923  0931  0275               	subwf	___flge@ff1+3,w
  6924  0932  1D03               	skipz
  6925  0933  293E               	goto	u3425
  6926  0934  0878               	movf	___flge@ff2+2,w
  6927  0935  0274               	subwf	___flge@ff1+2,w
  6928  0936  1D03               	skipz
  6929  0937  293E               	goto	u3425
  6930  0938  0877               	movf	___flge@ff2+1,w
  6931  0939  0273               	subwf	___flge@ff1+1,w
  6932  093A  1D03               	skipz
  6933  093B  293E               	goto	u3425
  6934  093C  0876               	movf	___flge@ff2,w
  6935  093D  0272               	subwf	___flge@ff1,w
  6936  093E                     u3425:
  6937  093E  1803               	skipnc
  6938  093F  2941               	goto	u3421
  6939  0940  2942               	goto	u3420
  6940  0941                     u3421:
  6941  0941  2944               	goto	l2796
  6942  0942                     u3420:
  6943  0942                     l2794:
  6944  0942  1003               	clrc
  6945  0943  2945               	goto	l619
  6946  0944                     l2796:
  6947  0944  1403               	setc
  6948  0945                     l619:
  6949  0945  0008               	return
  6950  0946                     __end_of___flge:
  6951                           
  6952                           	psect	text18
  6953  152B                     __ptext18:	
  6954 ;; *************** function _display_zero_zero *****************
  6955 ;; Defined at:
  6956 ;;		line 196 in file "rg_877a.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;		None
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  i               2    0[BANK0 ] int 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6970 ;;      Params:         0       0       0       0       0
  6971 ;;      Locals:         0       2       0       0       0
  6972 ;;      Temps:          1       0       0       0       0
  6973 ;;      Totals:         1       2       0       0       0
  6974 ;;Total ram usage:        3 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; Hardware stack levels required when called: 6
  6977 ;; This function calls:
  6978 ;;		_LCD_Write_Char
  6979 ;;		_eeprom_read
  6980 ;; This function is called by:
  6981 ;;		_main
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function _display_zero_zero
  6987  152B                     _display_zero_zero:
  6988  152B                     l4300:	
  6989                           ;incstack = 0
  6990                           ; Regs used in _display_zero_zero: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6991                           
  6992                           
  6993                           ;rg_877a.c: 197: LCD_Write_Char(50);
  6994  152B  3032               	movlw	50
  6995  152C  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  6996                           
  6997                           ;rg_877a.c: 198: LCD_Write_Char(52);
  6998  1531  3034               	movlw	52
  6999  1532  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7000                           
  7001                           ;rg_877a.c: 199: LCD_Write_Char(45);
  7002  1537  302D               	movlw	45
  7003  1538  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7004  153D                     l4302:
  7005                           
  7006                           ;rg_877a.c: 200: for(int i=0;i<5;i++){
  7007  153D  1283               	bcf	3,5	;RP0=0, select bank0
  7008  153E  1303               	bcf	3,6	;RP1=0, select bank0
  7009  153F  01A0               	clrf	display_zero_zero@i
  7010  1540  01A1               	clrf	display_zero_zero@i+1
  7011  1541                     l4308:
  7012                           
  7013                           ;rg_877a.c: 201: zero_zero = eeprom_read(i+21);
  7014  1541  1283               	bcf	3,5	;RP0=0, select bank0
  7015  1542  1303               	bcf	3,6	;RP1=0, select bank0
  7016  1543  0820               	movf	display_zero_zero@i,w
  7017  1544  3E15               	addlw	21
  7018  1545  160A  118A  2272  160A  118A  	fcall	_eeprom_read
  7019  154A  00F8               	movwf	??_display_zero_zero
  7020  154B  0878               	movf	??_display_zero_zero,w
  7021  154C  1283               	bcf	3,5	;RP0=0, select bank0
  7022  154D  1303               	bcf	3,6	;RP1=0, select bank0
  7023  154E  00E2               	movwf	_zero_zero
  7024                           
  7025                           ;rg_877a.c: 202: LCD_Write_Char(zero_zero);
  7026  154F  0862               	movf	_zero_zero,w
  7027  1550  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7028  1555                     l4310:
  7029  1555  3001               	movlw	1
  7030  1556  1283               	bcf	3,5	;RP0=0, select bank0
  7031  1557  1303               	bcf	3,6	;RP1=0, select bank0
  7032  1558  07A0               	addwf	display_zero_zero@i,f
  7033  1559  1803               	skipnc
  7034  155A  0AA1               	incf	display_zero_zero@i+1,f
  7035  155B  3000               	movlw	0
  7036  155C  07A1               	addwf	display_zero_zero@i+1,f
  7037  155D                     l4312:
  7038  155D  0821               	movf	display_zero_zero@i+1,w
  7039  155E  3A80               	xorlw	128
  7040  155F  00FF               	movwf	btemp+1
  7041  1560  3080               	movlw	128
  7042  1561  027F               	subwf	btemp+1,w
  7043  1562  1D03               	skipz
  7044  1563  2D66               	goto	u6015
  7045  1564  3005               	movlw	5
  7046  1565  0220               	subwf	display_zero_zero@i,w
  7047  1566                     u6015:
  7048  1566  1C03               	skipc
  7049  1567  2D69               	goto	u6011
  7050  1568  2D6A               	goto	u6010
  7051  1569                     u6011:
  7052  1569  2D41               	goto	l4308
  7053  156A                     u6010:
  7054  156A                     l153:
  7055  156A  0008               	return
  7056  156B                     __end_of_display_zero_zero:
  7057                           
  7058                           	psect	text19
  7059  14AD                     __ptext19:	
  7060 ;; *************** function _display_zero_six *****************
  7061 ;; Defined at:
  7062 ;;		line 164 in file "rg_877a.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  i               2    0[BANK0 ] int 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7076 ;;      Params:         0       0       0       0       0
  7077 ;;      Locals:         0       2       0       0       0
  7078 ;;      Temps:          1       0       0       0       0
  7079 ;;      Totals:         1       2       0       0       0
  7080 ;;Total ram usage:        3 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; Hardware stack levels required when called: 6
  7083 ;; This function calls:
  7084 ;;		_LCD_Write_Char
  7085 ;;		_eeprom_read
  7086 ;; This function is called by:
  7087 ;;		_main
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           
  7092                           ;psect for function _display_zero_six
  7093  14AD                     _display_zero_six:
  7094  14AD                     l4258:	
  7095                           ;incstack = 0
  7096                           ; Regs used in _display_zero_six: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7097                           
  7098                           
  7099                           ;rg_877a.c: 165: LCD_Write_Char(48);
  7100  14AD  3030               	movlw	48
  7101  14AE  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7102                           
  7103                           ;rg_877a.c: 166: LCD_Write_Char(54);
  7104  14B3  3036               	movlw	54
  7105  14B4  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7106                           
  7107                           ;rg_877a.c: 167: LCD_Write_Char(45);
  7108  14B9  302D               	movlw	45
  7109  14BA  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7110  14BF                     l4260:
  7111                           
  7112                           ;rg_877a.c: 168: for(int i=0;i<5;i++){
  7113  14BF  1283               	bcf	3,5	;RP0=0, select bank0
  7114  14C0  1303               	bcf	3,6	;RP1=0, select bank0
  7115  14C1  01A0               	clrf	display_zero_six@i
  7116  14C2  01A1               	clrf	display_zero_six@i+1
  7117  14C3                     l4266:
  7118                           
  7119                           ;rg_877a.c: 169: zero_six = eeprom_read(i+6);
  7120  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  7121  14C4  1303               	bcf	3,6	;RP1=0, select bank0
  7122  14C5  0820               	movf	display_zero_six@i,w
  7123  14C6  3E06               	addlw	6
  7124  14C7  160A  118A  2272  160A  118A  	fcall	_eeprom_read
  7125  14CC  00F8               	movwf	??_display_zero_six
  7126  14CD  0878               	movf	??_display_zero_six,w
  7127  14CE  00FB               	movwf	_zero_six
  7128                           
  7129                           ;rg_877a.c: 170: LCD_Write_Char(zero_six);
  7130  14CF  087B               	movf	_zero_six,w
  7131  14D0  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7132  14D5                     l4268:
  7133  14D5  3001               	movlw	1
  7134  14D6  1283               	bcf	3,5	;RP0=0, select bank0
  7135  14D7  1303               	bcf	3,6	;RP1=0, select bank0
  7136  14D8  07A0               	addwf	display_zero_six@i,f
  7137  14D9  1803               	skipnc
  7138  14DA  0AA1               	incf	display_zero_six@i+1,f
  7139  14DB  3000               	movlw	0
  7140  14DC  07A1               	addwf	display_zero_six@i+1,f
  7141  14DD                     l4270:
  7142  14DD  0821               	movf	display_zero_six@i+1,w
  7143  14DE  3A80               	xorlw	128
  7144  14DF  00FF               	movwf	btemp+1
  7145  14E0  3080               	movlw	128
  7146  14E1  027F               	subwf	btemp+1,w
  7147  14E2  1D03               	skipz
  7148  14E3  2CE6               	goto	u5985
  7149  14E4  3005               	movlw	5
  7150  14E5  0220               	subwf	display_zero_six@i,w
  7151  14E6                     u5985:
  7152  14E6  1C03               	skipc
  7153  14E7  2CE9               	goto	u5981
  7154  14E8  2CEA               	goto	u5980
  7155  14E9                     u5981:
  7156  14E9  2CC3               	goto	l4266
  7157  14EA                     u5980:
  7158  14EA                     l138:
  7159  14EA  0008               	return
  7160  14EB                     __end_of_display_zero_six:
  7161                           
  7162                           	psect	text20
  7163  146F                     __ptext20:	
  7164 ;; *************** function _display_twelve_hundred *****************
  7165 ;; Defined at:
  7166 ;;		line 174 in file "rg_877a.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;		None
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;  i               2    0[BANK0 ] int 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7180 ;;      Params:         0       0       0       0       0
  7181 ;;      Locals:         0       2       0       0       0
  7182 ;;      Temps:          1       0       0       0       0
  7183 ;;      Totals:         1       2       0       0       0
  7184 ;;Total ram usage:        3 bytes
  7185 ;; Hardware stack levels used: 1
  7186 ;; Hardware stack levels required when called: 6
  7187 ;; This function calls:
  7188 ;;		_LCD_Write_Char
  7189 ;;		_eeprom_read
  7190 ;; This function is called by:
  7191 ;;		_main
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _display_twelve_hundred
  7197  146F                     _display_twelve_hundred:
  7198  146F                     l4272:	
  7199                           ;incstack = 0
  7200                           ; Regs used in _display_twelve_hundred: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7201                           
  7202                           
  7203                           ;rg_877a.c: 175: LCD_Write_Char(49);
  7204  146F  3031               	movlw	49
  7205  1470  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7206                           
  7207                           ;rg_877a.c: 176: LCD_Write_Char(50);
  7208  1475  3032               	movlw	50
  7209  1476  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7210                           
  7211                           ;rg_877a.c: 177: LCD_Write_Char(45);
  7212  147B  302D               	movlw	45
  7213  147C  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7214  1481                     l4274:
  7215                           
  7216                           ;rg_877a.c: 178: for(int i=0;i<5;i++){
  7217  1481  1283               	bcf	3,5	;RP0=0, select bank0
  7218  1482  1303               	bcf	3,6	;RP1=0, select bank0
  7219  1483  01A0               	clrf	display_twelve_hundred@i
  7220  1484  01A1               	clrf	display_twelve_hundred@i+1
  7221  1485                     l4280:
  7222                           
  7223                           ;rg_877a.c: 179: twelve_hundred = eeprom_read(i+11);
  7224  1485  1283               	bcf	3,5	;RP0=0, select bank0
  7225  1486  1303               	bcf	3,6	;RP1=0, select bank0
  7226  1487  0820               	movf	display_twelve_hundred@i,w
  7227  1488  3E0B               	addlw	11
  7228  1489  160A  118A  2272  160A  118A  	fcall	_eeprom_read
  7229  148E  00F8               	movwf	??_display_twelve_hundred
  7230  148F  0878               	movf	??_display_twelve_hundred,w
  7231  1490  00FA               	movwf	_twelve_hundred
  7232                           
  7233                           ;rg_877a.c: 180: LCD_Write_Char(twelve_hundred);
  7234  1491  087A               	movf	_twelve_hundred,w
  7235  1492  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7236  1497                     l4282:
  7237  1497  3001               	movlw	1
  7238  1498  1283               	bcf	3,5	;RP0=0, select bank0
  7239  1499  1303               	bcf	3,6	;RP1=0, select bank0
  7240  149A  07A0               	addwf	display_twelve_hundred@i,f
  7241  149B  1803               	skipnc
  7242  149C  0AA1               	incf	display_twelve_hundred@i+1,f
  7243  149D  3000               	movlw	0
  7244  149E  07A1               	addwf	display_twelve_hundred@i+1,f
  7245  149F                     l4284:
  7246  149F  0821               	movf	display_twelve_hundred@i+1,w
  7247  14A0  3A80               	xorlw	128
  7248  14A1  00FF               	movwf	btemp+1
  7249  14A2  3080               	movlw	128
  7250  14A3  027F               	subwf	btemp+1,w
  7251  14A4  1D03               	skipz
  7252  14A5  2CA8               	goto	u5995
  7253  14A6  3005               	movlw	5
  7254  14A7  0220               	subwf	display_twelve_hundred@i,w
  7255  14A8                     u5995:
  7256  14A8  1C03               	skipc
  7257  14A9  2CAB               	goto	u5991
  7258  14AA  2CAC               	goto	u5990
  7259  14AB                     u5991:
  7260  14AB  2C85               	goto	l4280
  7261  14AC                     u5990:
  7262  14AC                     l143:
  7263  14AC  0008               	return
  7264  14AD                     __end_of_display_twelve_hundred:
  7265                           
  7266                           	psect	text21
  7267  14EB                     __ptext21:	
  7268 ;; *************** function _display_eighteen_hundred *****************
  7269 ;; Defined at:
  7270 ;;		line 185 in file "rg_877a.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  i               2    0[BANK0 ] int 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7284 ;;      Params:         0       0       0       0       0
  7285 ;;      Locals:         0       2       0       0       0
  7286 ;;      Temps:          1       0       0       0       0
  7287 ;;      Totals:         1       2       0       0       0
  7288 ;;Total ram usage:        3 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 6
  7291 ;; This function calls:
  7292 ;;		_LCD_Write_Char
  7293 ;;		_eeprom_read
  7294 ;; This function is called by:
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _display_eighteen_hundred
  7301  14EB                     _display_eighteen_hundred:
  7302  14EB                     l4286:	
  7303                           ;incstack = 0
  7304                           ; Regs used in _display_eighteen_hundred: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7305                           
  7306                           
  7307                           ;rg_877a.c: 186: LCD_Write_Char(49);
  7308  14EB  3031               	movlw	49
  7309  14EC  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7310                           
  7311                           ;rg_877a.c: 187: LCD_Write_Char(56);
  7312  14F1  3038               	movlw	56
  7313  14F2  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7314                           
  7315                           ;rg_877a.c: 188: LCD_Write_Char(45);
  7316  14F7  302D               	movlw	45
  7317  14F8  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7318  14FD                     l4288:
  7319                           
  7320                           ;rg_877a.c: 189: for(int i=0;i<5;i++){
  7321  14FD  1283               	bcf	3,5	;RP0=0, select bank0
  7322  14FE  1303               	bcf	3,6	;RP1=0, select bank0
  7323  14FF  01A0               	clrf	display_eighteen_hundred@i
  7324  1500  01A1               	clrf	display_eighteen_hundred@i+1
  7325  1501                     l4294:
  7326                           
  7327                           ;rg_877a.c: 190: eighteen_hundred = eeprom_read(i+16);
  7328  1501  1283               	bcf	3,5	;RP0=0, select bank0
  7329  1502  1303               	bcf	3,6	;RP1=0, select bank0
  7330  1503  0820               	movf	display_eighteen_hundred@i,w
  7331  1504  3E10               	addlw	16
  7332  1505  160A  118A  2272  160A  118A  	fcall	_eeprom_read
  7333  150A  00F8               	movwf	??_display_eighteen_hundred
  7334  150B  0878               	movf	??_display_eighteen_hundred,w
  7335  150C  1283               	bcf	3,5	;RP0=0, select bank0
  7336  150D  1303               	bcf	3,6	;RP1=0, select bank0
  7337  150E  00E3               	movwf	_eighteen_hundred
  7338                           
  7339                           ;rg_877a.c: 191: LCD_Write_Char(eighteen_hundred);
  7340  150F  0863               	movf	_eighteen_hundred,w
  7341  1510  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  7342  1515                     l4296:
  7343  1515  3001               	movlw	1
  7344  1516  1283               	bcf	3,5	;RP0=0, select bank0
  7345  1517  1303               	bcf	3,6	;RP1=0, select bank0
  7346  1518  07A0               	addwf	display_eighteen_hundred@i,f
  7347  1519  1803               	skipnc
  7348  151A  0AA1               	incf	display_eighteen_hundred@i+1,f
  7349  151B  3000               	movlw	0
  7350  151C  07A1               	addwf	display_eighteen_hundred@i+1,f
  7351  151D                     l4298:
  7352  151D  0821               	movf	display_eighteen_hundred@i+1,w
  7353  151E  3A80               	xorlw	128
  7354  151F  00FF               	movwf	btemp+1
  7355  1520  3080               	movlw	128
  7356  1521  027F               	subwf	btemp+1,w
  7357  1522  1D03               	skipz
  7358  1523  2D26               	goto	u6005
  7359  1524  3005               	movlw	5
  7360  1525  0220               	subwf	display_eighteen_hundred@i,w
  7361  1526                     u6005:
  7362  1526  1C03               	skipc
  7363  1527  2D29               	goto	u6001
  7364  1528  2D2A               	goto	u6000
  7365  1529                     u6001:
  7366  1529  2D01               	goto	l4294
  7367  152A                     u6000:
  7368  152A                     l148:
  7369  152A  0008               	return
  7370  152B                     __end_of_display_eighteen_hundred:
  7371                           
  7372                           	psect	text22
  7373  1272                     __ptext22:	
  7374 ;; *************** function _eeprom_read *****************
  7375 ;; Defined at:
  7376 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/pic/__eeread.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  addr            1    wreg     unsigned char 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  addr            1    3[COMMON] unsigned char 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      unsigned char 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7390 ;;      Params:         0       0       0       0       0
  7391 ;;      Locals:         1       0       0       0       0
  7392 ;;      Temps:          1       0       0       0       0
  7393 ;;      Totals:         2       0       0       0       0
  7394 ;;Total ram usage:        2 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; Hardware stack levels required when called: 1
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_main
  7401 ;;		_display_zero_six
  7402 ;;		_display_twelve_hundred
  7403 ;;		_display_eighteen_hundred
  7404 ;;		_display_zero_zero
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           
  7409                           ;psect for function _eeprom_read
  7410  1272                     _eeprom_read:
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  7414                           ;eeprom_read@addr stored from wreg
  7415  1272  00F3               	movwf	eeprom_read@addr
  7416  1273                     l411:	
  7417                           ;__eeread.c: 8: do
  7418                           
  7419  1273  0064               	clrwdt	;# 
  7420                           
  7421                           ;__eeread.c: 12: while(EECON1bits.WR);
  7422  1274  1683               	bsf	3,5	;RP0=1, select bank3
  7423  1275  1703               	bsf	3,6	;RP1=1, select bank3
  7424  1276  188C               	btfsc	12,1	;volsfr
  7425  1277  2A79               	goto	u4841
  7426  1278  2A7A               	goto	u4840
  7427  1279                     u4841:
  7428  1279  2A73               	goto	l411
  7429  127A                     u4840:
  7430  127A                     l3678:
  7431                           
  7432                           ;__eeread.c: 18: return ( EEADR = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  7433  127A  0873               	movf	eeprom_read@addr,w
  7434  127B  1283               	bcf	3,5	;RP0=0, select bank2
  7435  127C  1703               	bsf	3,6	;RP1=1, select bank2
  7436  127D  008D               	movwf	13	;volatile
  7437  127E  303F               	movlw	63
  7438  127F  00F2               	movwf	??_eeprom_read
  7439  1280  0872               	movf	??_eeprom_read,w
  7440  1281  1683               	bsf	3,5	;RP0=1, select bank3
  7441  1282  1703               	bsf	3,6	;RP1=1, select bank3
  7442  1283  058C               	andwf	12,f	;volsfr
  7443  1284  140C               	bsf	12,0	;volsfr
  7444  1285  1283               	bcf	3,5	;RP0=0, select bank2
  7445  1286  1703               	bsf	3,6	;RP1=1, select bank2
  7446  1287  080C               	movf	12,w	;volatile
  7447  1288                     l413:
  7448  1288  0008               	return
  7449  1289                     __end_of_eeprom_read:
  7450                           
  7451                           	psect	text23
  7452  075E                     __ptext23:	
  7453 ;; *************** function _display_Time *****************
  7454 ;; Defined at:
  7455 ;;		line 138 in file "rg_877a.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;		None
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  hour_1          1    7[BANK0 ] unsigned char 
  7460 ;;  hour_0          1    6[BANK0 ] unsigned char 
  7461 ;;  min_1           1    5[BANK0 ] unsigned char 
  7462 ;;  min_0           1    4[BANK0 ] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      void 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0, pclath, cstack
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7472 ;;      Params:         0       0       0       0       0
  7473 ;;      Locals:         0       4       0       0       0
  7474 ;;      Temps:          1       0       0       0       0
  7475 ;;      Totals:         1       4       0       0       0
  7476 ;;Total ram usage:        5 bytes
  7477 ;; Hardware stack levels used: 1
  7478 ;; Hardware stack levels required when called: 6
  7479 ;; This function calls:
  7480 ;;		_LCD_Write_Char
  7481 ;;		___awdiv
  7482 ;;		___awmod
  7483 ;; This function is called by:
  7484 ;;		_main
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           
  7489                           ;psect for function _display_Time
  7490  075E                     _display_Time:
  7491  075E                     l4202:	
  7492                           ;incstack = 0
  7493                           ; Regs used in _display_Time: [wreg+status,2+status,0+pclath+cstack]
  7494                           
  7495                           
  7496                           ;rg_877a.c: 139: LCD_Write_Char(76);
  7497  075E  304C               	movlw	76
  7498  075F  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7499                           
  7500                           ;rg_877a.c: 140: LCD_Write_Char(84);
  7501  0764  3054               	movlw	84
  7502  0765  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7503                           
  7504                           ;rg_877a.c: 141: LCD_Write_Char(45);
  7505  076A  302D               	movlw	45
  7506  076B  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7507  0770                     l4204:
  7508                           
  7509                           ;rg_877a.c: 143: hour = hour-8;
  7510  0770  1283               	bcf	3,5	;RP0=0, select bank0
  7511  0771  1303               	bcf	3,6	;RP1=0, select bank0
  7512  0772  0868               	movf	_hour,w
  7513  0773  3EF8               	addlw	248
  7514  0774  00E8               	movwf	_hour
  7515  0775  0869               	movf	_hour+1,w
  7516  0776  1803               	skipnc
  7517  0777  3E01               	addlw	1
  7518  0778  3EFF               	addlw	255
  7519  0779  00E9               	movwf	_hour+1
  7520  077A                     l4206:
  7521                           
  7522                           ;rg_877a.c: 148: char min_0 = min%10;
  7523  077A  300A               	movlw	10
  7524  077B  00F2               	movwf	___awmod@divisor
  7525  077C  3000               	movlw	0
  7526  077D  00F3               	movwf	___awmod@divisor+1
  7527  077E  086B               	movf	_min+1,w
  7528  077F  00F5               	movwf	___awmod@dividend+1
  7529  0780  086A               	movf	_min,w
  7530  0781  00F4               	movwf	___awmod@dividend
  7531  0782  160A  118A  265A  120A  118A  	fcall	___awmod
  7532  0787  0872               	movf	?___awmod,w
  7533  0788  00F9               	movwf	??_display_Time
  7534  0789  0879               	movf	??_display_Time,w
  7535  078A  1283               	bcf	3,5	;RP0=0, select bank0
  7536  078B  1303               	bcf	3,6	;RP1=0, select bank0
  7537  078C  00A4               	movwf	display_Time@min_0
  7538  078D                     l4208:
  7539                           
  7540                           ;rg_877a.c: 149: char min_1 = min/10;
  7541  078D  300A               	movlw	10
  7542  078E  00F2               	movwf	___awdiv@divisor
  7543  078F  3000               	movlw	0
  7544  0790  00F3               	movwf	___awdiv@divisor+1
  7545  0791  086B               	movf	_min+1,w
  7546  0792  00F5               	movwf	___awdiv@dividend+1
  7547  0793  086A               	movf	_min,w
  7548  0794  00F4               	movwf	___awdiv@dividend
  7549  0795  160A  118A  271B  120A  118A  	fcall	___awdiv
  7550  079A  0872               	movf	?___awdiv,w
  7551  079B  00F9               	movwf	??_display_Time
  7552  079C  0879               	movf	??_display_Time,w
  7553  079D  1283               	bcf	3,5	;RP0=0, select bank0
  7554  079E  1303               	bcf	3,6	;RP1=0, select bank0
  7555  079F  00A5               	movwf	display_Time@min_1
  7556  07A0                     l4210:
  7557                           
  7558                           ;rg_877a.c: 150: char hour_0 = hour%10;
  7559  07A0  300A               	movlw	10
  7560  07A1  00F2               	movwf	___awmod@divisor
  7561  07A2  3000               	movlw	0
  7562  07A3  00F3               	movwf	___awmod@divisor+1
  7563  07A4  0869               	movf	_hour+1,w
  7564  07A5  00F5               	movwf	___awmod@dividend+1
  7565  07A6  0868               	movf	_hour,w
  7566  07A7  00F4               	movwf	___awmod@dividend
  7567  07A8  160A  118A  265A  120A  118A  	fcall	___awmod
  7568  07AD  0872               	movf	?___awmod,w
  7569  07AE  00F9               	movwf	??_display_Time
  7570  07AF  0879               	movf	??_display_Time,w
  7571  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  7572  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  7573  07B2  00A6               	movwf	display_Time@hour_0
  7574  07B3                     l4212:
  7575                           
  7576                           ;rg_877a.c: 151: char hour_1 = hour/10;
  7577  07B3  300A               	movlw	10
  7578  07B4  00F2               	movwf	___awdiv@divisor
  7579  07B5  3000               	movlw	0
  7580  07B6  00F3               	movwf	___awdiv@divisor+1
  7581  07B7  0869               	movf	_hour+1,w
  7582  07B8  00F5               	movwf	___awdiv@dividend+1
  7583  07B9  0868               	movf	_hour,w
  7584  07BA  00F4               	movwf	___awdiv@dividend
  7585  07BB  160A  118A  271B  120A  118A  	fcall	___awdiv
  7586  07C0  0872               	movf	?___awdiv,w
  7587  07C1  00F9               	movwf	??_display_Time
  7588  07C2  0879               	movf	??_display_Time,w
  7589  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  7590  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  7591  07C5  00A7               	movwf	display_Time@hour_1
  7592  07C6                     l4214:
  7593                           
  7594                           ;rg_877a.c: 154: LCD_Write_Char(hour_1+'0');
  7595  07C6  0827               	movf	display_Time@hour_1,w
  7596  07C7  3E30               	addlw	48
  7597  07C8  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7598  07CD                     l4216:
  7599                           
  7600                           ;rg_877a.c: 155: LCD_Write_Char(hour_0+'0');
  7601  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  7602  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  7603  07CF  0826               	movf	display_Time@hour_0,w
  7604  07D0  3E30               	addlw	48
  7605  07D1  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7606  07D6                     l4218:
  7607                           
  7608                           ;rg_877a.c: 156: LCD_Write_Char(':');
  7609  07D6  303A               	movlw	58
  7610  07D7  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7611  07DC                     l4220:
  7612                           
  7613                           ;rg_877a.c: 157: LCD_Write_Char(min_1+'0');
  7614  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  7615  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  7616  07DE  0825               	movf	display_Time@min_1,w
  7617  07DF  3E30               	addlw	48
  7618  07E0  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7619  07E5                     l4222:
  7620                           
  7621                           ;rg_877a.c: 158: LCD_Write_Char(min_0+'0');
  7622  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  7623  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  7624  07E7  0824               	movf	display_Time@min_0,w
  7625  07E8  3E30               	addlw	48
  7626  07E9  160A  118A  22DC  120A  118A  	fcall	_LCD_Write_Char
  7627  07EE                     l133:
  7628  07EE  0008               	return
  7629  07EF                     __end_of_display_Time:
  7630                           
  7631                           	psect	text24
  7632  165A                     __ptext24:	
  7633 ;; *************** function ___awmod *****************
  7634 ;; Defined at:
  7635 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/awmod.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  divisor         2    2[COMMON] int 
  7638 ;;  dividend        2    4[COMMON] int 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  sign            1    8[COMMON] unsigned char 
  7641 ;;  counter         1    7[COMMON] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  2    2[COMMON] int 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7651 ;;      Params:         4       0       0       0       0
  7652 ;;      Locals:         2       0       0       0       0
  7653 ;;      Temps:          1       0       0       0       0
  7654 ;;      Totals:         7       0       0       0       0
  7655 ;;Total ram usage:        7 bytes
  7656 ;; Hardware stack levels used: 1
  7657 ;; Hardware stack levels required when called: 1
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_display_Time
  7662 ;;		_DEC_2_BCD
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function ___awmod
  7668  165A                     ___awmod:
  7669  165A                     l2742:	
  7670                           ;incstack = 0
  7671                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7672                           
  7673  165A  01F8               	clrf	___awmod@sign
  7674  165B                     l2744:
  7675  165B  1FF5               	btfss	___awmod@dividend+1,7
  7676  165C  2E5E               	goto	u3271
  7677  165D  2E5F               	goto	u3270
  7678  165E                     u3271:
  7679  165E  2E66               	goto	l2750
  7680  165F                     u3270:
  7681  165F                     l2746:
  7682  165F  09F4               	comf	___awmod@dividend,f
  7683  1660  09F5               	comf	___awmod@dividend+1,f
  7684  1661  0AF4               	incf	___awmod@dividend,f
  7685  1662  1903               	skipnz
  7686  1663  0AF5               	incf	___awmod@dividend+1,f
  7687  1664                     l2748:
  7688  1664  01F8               	clrf	___awmod@sign
  7689  1665  0AF8               	incf	___awmod@sign,f
  7690  1666                     l2750:
  7691  1666  1FF3               	btfss	___awmod@divisor+1,7
  7692  1667  2E69               	goto	u3281
  7693  1668  2E6A               	goto	u3280
  7694  1669                     u3281:
  7695  1669  2E6F               	goto	l2754
  7696  166A                     u3280:
  7697  166A                     l2752:
  7698  166A  09F2               	comf	___awmod@divisor,f
  7699  166B  09F3               	comf	___awmod@divisor+1,f
  7700  166C  0AF2               	incf	___awmod@divisor,f
  7701  166D  1903               	skipnz
  7702  166E  0AF3               	incf	___awmod@divisor+1,f
  7703  166F                     l2754:
  7704  166F  0872               	movf	___awmod@divisor,w
  7705  1670  0473               	iorwf	___awmod@divisor+1,w
  7706  1671  1903               	btfsc	3,2
  7707  1672  2E74               	goto	u3291
  7708  1673  2E75               	goto	u3290
  7709  1674                     u3291:
  7710  1674  2EA4               	goto	l2772
  7711  1675                     u3290:
  7712  1675                     l2756:
  7713  1675  01F7               	clrf	___awmod@counter
  7714  1676  0AF7               	incf	___awmod@counter,f
  7715  1677  2E83               	goto	l2762
  7716  1678                     l2758:
  7717  1678  3001               	movlw	1
  7718  1679                     u3305:
  7719  1679  1003               	clrc
  7720  167A  0DF2               	rlf	___awmod@divisor,f
  7721  167B  0DF3               	rlf	___awmod@divisor+1,f
  7722  167C  3EFF               	addlw	-1
  7723  167D  1D03               	skipz
  7724  167E  2E79               	goto	u3305
  7725  167F                     l2760:
  7726  167F  3001               	movlw	1
  7727  1680  00F6               	movwf	??___awmod
  7728  1681  0876               	movf	??___awmod,w
  7729  1682  07F7               	addwf	___awmod@counter,f
  7730  1683                     l2762:
  7731  1683  1FF3               	btfss	___awmod@divisor+1,7
  7732  1684  2E86               	goto	u3311
  7733  1685  2E87               	goto	u3310
  7734  1686                     u3311:
  7735  1686  2E78               	goto	l2758
  7736  1687                     u3310:
  7737  1687                     l2764:
  7738  1687  0873               	movf	___awmod@divisor+1,w
  7739  1688  0275               	subwf	___awmod@dividend+1,w
  7740  1689  1D03               	skipz
  7741  168A  2E8D               	goto	u3325
  7742  168B  0872               	movf	___awmod@divisor,w
  7743  168C  0274               	subwf	___awmod@dividend,w
  7744  168D                     u3325:
  7745  168D  1C03               	skipc
  7746  168E  2E90               	goto	u3321
  7747  168F  2E91               	goto	u3320
  7748  1690                     u3321:
  7749  1690  2E97               	goto	l2768
  7750  1691                     u3320:
  7751  1691                     l2766:
  7752  1691  0872               	movf	___awmod@divisor,w
  7753  1692  02F4               	subwf	___awmod@dividend,f
  7754  1693  0873               	movf	___awmod@divisor+1,w
  7755  1694  1C03               	skipc
  7756  1695  03F5               	decf	___awmod@dividend+1,f
  7757  1696  02F5               	subwf	___awmod@dividend+1,f
  7758  1697                     l2768:
  7759  1697  3001               	movlw	1
  7760  1698                     u3335:
  7761  1698  1003               	clrc
  7762  1699  0CF3               	rrf	___awmod@divisor+1,f
  7763  169A  0CF2               	rrf	___awmod@divisor,f
  7764  169B  3EFF               	addlw	-1
  7765  169C  1D03               	skipz
  7766  169D  2E98               	goto	u3335
  7767  169E                     l2770:
  7768  169E  3001               	movlw	1
  7769  169F  02F7               	subwf	___awmod@counter,f
  7770  16A0  1D03               	btfss	3,2
  7771  16A1  2EA3               	goto	u3341
  7772  16A2  2EA4               	goto	u3340
  7773  16A3                     u3341:
  7774  16A3  2E87               	goto	l2764
  7775  16A4                     u3340:
  7776  16A4                     l2772:
  7777  16A4  0878               	movf	___awmod@sign,w
  7778  16A5  1903               	btfsc	3,2
  7779  16A6  2EA8               	goto	u3351
  7780  16A7  2EA9               	goto	u3350
  7781  16A8                     u3351:
  7782  16A8  2EAE               	goto	l2776
  7783  16A9                     u3350:
  7784  16A9                     l2774:
  7785  16A9  09F4               	comf	___awmod@dividend,f
  7786  16AA  09F5               	comf	___awmod@dividend+1,f
  7787  16AB  0AF4               	incf	___awmod@dividend,f
  7788  16AC  1903               	skipnz
  7789  16AD  0AF5               	incf	___awmod@dividend+1,f
  7790  16AE                     l2776:
  7791  16AE  0875               	movf	___awmod@dividend+1,w
  7792  16AF  00F3               	movwf	?___awmod+1
  7793  16B0  0874               	movf	___awmod@dividend,w
  7794  16B1  00F2               	movwf	?___awmod
  7795  16B2                     l607:
  7796  16B2  0008               	return
  7797  16B3                     __end_of___awmod:
  7798                           
  7799                           	psect	text25
  7800  171B                     __ptext25:	
  7801 ;; *************** function ___awdiv *****************
  7802 ;; Defined at:
  7803 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/awdiv.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  divisor         2    2[COMMON] int 
  7806 ;;  dividend        2    4[COMMON] int 
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;  quotient        2    2[BANK0 ] int 
  7809 ;;  sign            1    1[BANK0 ] unsigned char 
  7810 ;;  counter         1    0[BANK0 ] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  2    2[COMMON] int 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7820 ;;      Params:         4       0       0       0       0
  7821 ;;      Locals:         0       4       0       0       0
  7822 ;;      Temps:          1       0       0       0       0
  7823 ;;      Totals:         5       4       0       0       0
  7824 ;;Total ram usage:        9 bytes
  7825 ;; Hardware stack levels used: 1
  7826 ;; Hardware stack levels required when called: 1
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_display_Time
  7831 ;;		_DEC_2_BCD
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           
  7836                           ;psect for function ___awdiv
  7837  171B                     ___awdiv:
  7838  171B                     l3692:	
  7839                           ;incstack = 0
  7840                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7841                           
  7842  171B  1283               	bcf	3,5	;RP0=0, select bank0
  7843  171C  1303               	bcf	3,6	;RP1=0, select bank0
  7844  171D  01A1               	clrf	___awdiv@sign
  7845  171E                     l3694:
  7846  171E  1FF3               	btfss	___awdiv@divisor+1,7
  7847  171F  2F21               	goto	u4871
  7848  1720  2F22               	goto	u4870
  7849  1721                     u4871:
  7850  1721  2F29               	goto	l3700
  7851  1722                     u4870:
  7852  1722                     l3696:
  7853  1722  09F2               	comf	___awdiv@divisor,f
  7854  1723  09F3               	comf	___awdiv@divisor+1,f
  7855  1724  0AF2               	incf	___awdiv@divisor,f
  7856  1725  1903               	skipnz
  7857  1726  0AF3               	incf	___awdiv@divisor+1,f
  7858  1727                     l3698:
  7859  1727  01A1               	clrf	___awdiv@sign
  7860  1728  0AA1               	incf	___awdiv@sign,f
  7861  1729                     l3700:
  7862  1729  1FF5               	btfss	___awdiv@dividend+1,7
  7863  172A  2F2C               	goto	u4881
  7864  172B  2F2D               	goto	u4880
  7865  172C                     u4881:
  7866  172C  2F36               	goto	l3706
  7867  172D                     u4880:
  7868  172D                     l3702:
  7869  172D  09F4               	comf	___awdiv@dividend,f
  7870  172E  09F5               	comf	___awdiv@dividend+1,f
  7871  172F  0AF4               	incf	___awdiv@dividend,f
  7872  1730  1903               	skipnz
  7873  1731  0AF5               	incf	___awdiv@dividend+1,f
  7874  1732                     l3704:
  7875  1732  3001               	movlw	1
  7876  1733  00F6               	movwf	??___awdiv
  7877  1734  0876               	movf	??___awdiv,w
  7878  1735  06A1               	xorwf	___awdiv@sign,f
  7879  1736                     l3706:
  7880  1736  01A2               	clrf	___awdiv@quotient
  7881  1737  01A3               	clrf	___awdiv@quotient+1
  7882  1738                     l3708:
  7883  1738  0872               	movf	___awdiv@divisor,w
  7884  1739  0473               	iorwf	___awdiv@divisor+1,w
  7885  173A  1903               	btfsc	3,2
  7886  173B  2F3D               	goto	u4891
  7887  173C  2F3E               	goto	u4890
  7888  173D                     u4891:
  7889  173D  2F75               	goto	l3728
  7890  173E                     u4890:
  7891  173E                     l3710:
  7892  173E  01A0               	clrf	___awdiv@counter
  7893  173F  0AA0               	incf	___awdiv@counter,f
  7894  1740  2F4C               	goto	l3716
  7895  1741                     l3712:
  7896  1741  3001               	movlw	1
  7897  1742                     u4905:
  7898  1742  1003               	clrc
  7899  1743  0DF2               	rlf	___awdiv@divisor,f
  7900  1744  0DF3               	rlf	___awdiv@divisor+1,f
  7901  1745  3EFF               	addlw	-1
  7902  1746  1D03               	skipz
  7903  1747  2F42               	goto	u4905
  7904  1748                     l3714:
  7905  1748  3001               	movlw	1
  7906  1749  00F6               	movwf	??___awdiv
  7907  174A  0876               	movf	??___awdiv,w
  7908  174B  07A0               	addwf	___awdiv@counter,f
  7909  174C                     l3716:
  7910  174C  1FF3               	btfss	___awdiv@divisor+1,7
  7911  174D  2F4F               	goto	u4911
  7912  174E  2F50               	goto	u4910
  7913  174F                     u4911:
  7914  174F  2F41               	goto	l3712
  7915  1750                     u4910:
  7916  1750                     l3718:
  7917  1750  3001               	movlw	1
  7918  1751                     u4925:
  7919  1751  1003               	clrc
  7920  1752  0DA2               	rlf	___awdiv@quotient,f
  7921  1753  0DA3               	rlf	___awdiv@quotient+1,f
  7922  1754  3EFF               	addlw	-1
  7923  1755  1D03               	skipz
  7924  1756  2F51               	goto	u4925
  7925  1757  0873               	movf	___awdiv@divisor+1,w
  7926  1758  0275               	subwf	___awdiv@dividend+1,w
  7927  1759  1D03               	skipz
  7928  175A  2F5D               	goto	u4935
  7929  175B  0872               	movf	___awdiv@divisor,w
  7930  175C  0274               	subwf	___awdiv@dividend,w
  7931  175D                     u4935:
  7932  175D  1C03               	skipc
  7933  175E  2F60               	goto	u4931
  7934  175F  2F61               	goto	u4930
  7935  1760                     u4931:
  7936  1760  2F68               	goto	l3724
  7937  1761                     u4930:
  7938  1761                     l3720:
  7939  1761  0872               	movf	___awdiv@divisor,w
  7940  1762  02F4               	subwf	___awdiv@dividend,f
  7941  1763  0873               	movf	___awdiv@divisor+1,w
  7942  1764  1C03               	skipc
  7943  1765  03F5               	decf	___awdiv@dividend+1,f
  7944  1766  02F5               	subwf	___awdiv@dividend+1,f
  7945  1767                     l3722:
  7946  1767  1422               	bsf	___awdiv@quotient,0
  7947  1768                     l3724:
  7948  1768  3001               	movlw	1
  7949  1769                     u4945:
  7950  1769  1003               	clrc
  7951  176A  0CF3               	rrf	___awdiv@divisor+1,f
  7952  176B  0CF2               	rrf	___awdiv@divisor,f
  7953  176C  3EFF               	addlw	-1
  7954  176D  1D03               	skipz
  7955  176E  2F69               	goto	u4945
  7956  176F                     l3726:
  7957  176F  3001               	movlw	1
  7958  1770  02A0               	subwf	___awdiv@counter,f
  7959  1771  1D03               	btfss	3,2
  7960  1772  2F74               	goto	u4951
  7961  1773  2F75               	goto	u4950
  7962  1774                     u4951:
  7963  1774  2F50               	goto	l3718
  7964  1775                     u4950:
  7965  1775                     l3728:
  7966  1775  0821               	movf	___awdiv@sign,w
  7967  1776  1903               	btfsc	3,2
  7968  1777  2F79               	goto	u4961
  7969  1778  2F7A               	goto	u4960
  7970  1779                     u4961:
  7971  1779  2F7F               	goto	l3732
  7972  177A                     u4960:
  7973  177A                     l3730:
  7974  177A  09A2               	comf	___awdiv@quotient,f
  7975  177B  09A3               	comf	___awdiv@quotient+1,f
  7976  177C  0AA2               	incf	___awdiv@quotient,f
  7977  177D  1903               	skipnz
  7978  177E  0AA3               	incf	___awdiv@quotient+1,f
  7979  177F                     l3732:
  7980  177F  0823               	movf	___awdiv@quotient+1,w
  7981  1780  00F3               	movwf	?___awdiv+1
  7982  1781  0822               	movf	___awdiv@quotient,w
  7983  1782  00F2               	movwf	?___awdiv
  7984  1783                     l594:
  7985  1783  0008               	return
  7986  1784                     __end_of___awdiv:
  7987                           
  7988                           	psect	text26
  7989  15B4                     __ptext26:	
  7990 ;; *************** function ___fleq *****************
  7991 ;; Defined at:
  7992 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/fleq.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  ff1             4   12[BANK0 ] int 
  7995 ;;  ff2             4   16[BANK0 ] int 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;		None               void
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8007 ;;      Params:         0       8       0       0       0
  8008 ;;      Locals:         0       0       0       0       0
  8009 ;;      Temps:          0       4       0       0       0
  8010 ;;      Totals:         0      12       0       0       0
  8011 ;;Total ram usage:       12 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 1
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_main
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           
  8022                           ;psect for function ___fleq
  8023  15B4                     ___fleq:
  8024  15B4                     l3402:	
  8025                           ;incstack = 0
  8026                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8027                           
  8028  15B4  3000               	movlw	0
  8029  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  8030  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  8031  15B7  052C               	andwf	___fleq@ff1,w
  8032  15B8  00B4               	movwf	??___fleq
  8033  15B9  3000               	movlw	0
  8034  15BA  052D               	andwf	___fleq@ff1+1,w
  8035  15BB  00B5               	movwf	??___fleq+1
  8036  15BC  3080               	movlw	128
  8037  15BD  052E               	andwf	___fleq@ff1+2,w
  8038  15BE  00B6               	movwf	??___fleq+2
  8039  15BF  307F               	movlw	127
  8040  15C0  052F               	andwf	___fleq@ff1+3,w
  8041  15C1  00B7               	movwf	??___fleq+3
  8042  15C2  0837               	movf	??___fleq+3,w
  8043  15C3  0436               	iorwf	??___fleq+2,w
  8044  15C4  0435               	iorwf	??___fleq+1,w
  8045  15C5  0434               	iorwf	??___fleq,w
  8046  15C6  1D03               	skipz
  8047  15C7  2DC9               	goto	u4491
  8048  15C8  2DCA               	goto	u4490
  8049  15C9                     u4491:
  8050  15C9  2DD2               	goto	l610
  8051  15CA                     u4490:
  8052  15CA                     l3404:
  8053  15CA  3000               	movlw	0
  8054  15CB  00AF               	movwf	___fleq@ff1+3
  8055  15CC  3000               	movlw	0
  8056  15CD  00AE               	movwf	___fleq@ff1+2
  8057  15CE  3000               	movlw	0
  8058  15CF  00AD               	movwf	___fleq@ff1+1
  8059  15D0  3000               	movlw	0
  8060  15D1  00AC               	movwf	___fleq@ff1
  8061  15D2                     l610:
  8062  15D2  3000               	movlw	0
  8063  15D3  0530               	andwf	___fleq@ff2,w
  8064  15D4  00B4               	movwf	??___fleq
  8065  15D5  3000               	movlw	0
  8066  15D6  0531               	andwf	___fleq@ff2+1,w
  8067  15D7  00B5               	movwf	??___fleq+1
  8068  15D8  3080               	movlw	128
  8069  15D9  0532               	andwf	___fleq@ff2+2,w
  8070  15DA  00B6               	movwf	??___fleq+2
  8071  15DB  307F               	movlw	127
  8072  15DC  0533               	andwf	___fleq@ff2+3,w
  8073  15DD  00B7               	movwf	??___fleq+3
  8074  15DE  0837               	movf	??___fleq+3,w
  8075  15DF  0436               	iorwf	??___fleq+2,w
  8076  15E0  0435               	iorwf	??___fleq+1,w
  8077  15E1  0434               	iorwf	??___fleq,w
  8078  15E2  1D03               	skipz
  8079  15E3  2DE5               	goto	u4501
  8080  15E4  2DE6               	goto	u4500
  8081  15E5                     u4501:
  8082  15E5  2DEE               	goto	l611
  8083  15E6                     u4500:
  8084  15E6                     l3406:
  8085  15E6  3000               	movlw	0
  8086  15E7  00B3               	movwf	___fleq@ff2+3
  8087  15E8  3000               	movlw	0
  8088  15E9  00B2               	movwf	___fleq@ff2+2
  8089  15EA  3000               	movlw	0
  8090  15EB  00B1               	movwf	___fleq@ff2+1
  8091  15EC  3000               	movlw	0
  8092  15ED  00B0               	movwf	___fleq@ff2
  8093  15EE                     l611:
  8094  15EE  0833               	movf	___fleq@ff2+3,w
  8095  15EF  062F               	xorwf	___fleq@ff1+3,w
  8096  15F0  1D03               	skipz
  8097  15F1  2DFC               	goto	u4515
  8098  15F2  0832               	movf	___fleq@ff2+2,w
  8099  15F3  062E               	xorwf	___fleq@ff1+2,w
  8100  15F4  1D03               	skipz
  8101  15F5  2DFC               	goto	u4515
  8102  15F6  0831               	movf	___fleq@ff2+1,w
  8103  15F7  062D               	xorwf	___fleq@ff1+1,w
  8104  15F8  1D03               	skipz
  8105  15F9  2DFC               	goto	u4515
  8106  15FA  0830               	movf	___fleq@ff2,w
  8107  15FB  062C               	xorwf	___fleq@ff1,w
  8108  15FC                     u4515:
  8109  15FC  1903               	skipnz
  8110  15FD  2DFF               	goto	u4511
  8111  15FE  2E00               	goto	u4510
  8112  15FF                     u4511:
  8113  15FF  2E02               	goto	l3410
  8114  1600                     u4510:
  8115  1600                     l3408:
  8116  1600  1003               	clrc
  8117  1601  2E03               	goto	l612
  8118  1602                     l3410:
  8119  1602  1403               	setc
  8120  1603                     l612:
  8121  1603  0008               	return
  8122  1604                     __end_of___fleq:
  8123                           
  8124                           	psect	text27
  8125  0AD7                     __ptext27:	
  8126 ;; *************** function _Update_Current_Date_Time *****************
  8127 ;; Defined at:
  8128 ;;		line 41 in file "DS3231_1.h"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;		None
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;		None
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  1    wreg      void 
  8135 ;; Registers used:
  8136 ;;		wreg, status,2, status,0, pclath, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8142 ;;      Params:         0       0       0       0       0
  8143 ;;      Locals:         0       0       0       0       0
  8144 ;;      Temps:          0       0       0       0       0
  8145 ;;      Totals:         0       0       0       0       0
  8146 ;;Total ram usage:        0 bytes
  8147 ;; Hardware stack levels used: 1
  8148 ;; Hardware stack levels required when called: 3
  8149 ;; This function calls:
  8150 ;;		_BCD_2_DEC
  8151 ;;		_I2C_Master_Start
  8152 ;;		_I2C_Master_Stop
  8153 ;;		_I2C_Master_Write
  8154 ;;		_I2C_Read
  8155 ;; This function is called by:
  8156 ;;		_main
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           
  8161                           ;psect for function _Update_Current_Date_Time
  8162  0AD7                     _Update_Current_Date_Time:
  8163  0AD7                     l4064:	
  8164                           ;incstack = 0
  8165                           ; Regs used in _Update_Current_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  8166                           
  8167                           
  8168                           ;DS3231_1.h: 44: I2C_Master_Start();
  8169  0AD7  160A  118A  2219  120A  158A  	fcall	_I2C_Master_Start
  8170                           
  8171                           ;DS3231_1.h: 45: I2C_Master_Write(0xD0);
  8172  0ADC  30D0               	movlw	208
  8173  0ADD  120A  118A  27EF  120A  158A  	fcall	_I2C_Master_Write
  8174                           
  8175                           ;DS3231_1.h: 46: I2C_Master_Write(0);
  8176  0AE2  3000               	movlw	0
  8177  0AE3  120A  118A  27EF  120A  158A  	fcall	_I2C_Master_Write
  8178                           
  8179                           ;DS3231_1.h: 47: I2C_Master_Stop();
  8180  0AE8  160A  118A  2222  120A  158A  	fcall	_I2C_Master_Stop
  8181                           
  8182                           ;DS3231_1.h: 50: I2C_Master_Start();
  8183  0AED  160A  118A  2219  120A  158A  	fcall	_I2C_Master_Start
  8184                           
  8185                           ;DS3231_1.h: 51: I2C_Master_Write(0xD1);
  8186  0AF2  30D1               	movlw	209
  8187  0AF3  120A  118A  27EF  120A  158A  	fcall	_I2C_Master_Write
  8188                           
  8189                           ;DS3231_1.h: 52: sec = BCD_2_DEC(I2C_Read(1));
  8190  0AF8  3001               	movlw	1
  8191  0AF9  00F2               	movwf	I2C_Read@ack
  8192  0AFA  3000               	movlw	0
  8193  0AFB  00F3               	movwf	I2C_Read@ack+1
  8194  0AFC  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8195  0B01  0873               	movf	?_I2C_Read+1,w
  8196  0B02  00F9               	movwf	BCD_2_DEC@to_convert+1
  8197  0B03  0872               	movf	?_I2C_Read,w
  8198  0B04  00F8               	movwf	BCD_2_DEC@to_convert
  8199  0B05  160A  118A  236B  120A  158A  	fcall	_BCD_2_DEC
  8200  0B0A  0879               	movf	?_BCD_2_DEC+1,w
  8201  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  8202  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  8203  0B0D  00E0               	movwf	_sec+1
  8204  0B0E  0878               	movf	?_BCD_2_DEC,w
  8205  0B0F  00DF               	movwf	_sec
  8206                           
  8207                           ;DS3231_1.h: 53: min = BCD_2_DEC(I2C_Read(1));
  8208  0B10  3001               	movlw	1
  8209  0B11  00F2               	movwf	I2C_Read@ack
  8210  0B12  3000               	movlw	0
  8211  0B13  00F3               	movwf	I2C_Read@ack+1
  8212  0B14  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8213  0B19  0873               	movf	?_I2C_Read+1,w
  8214  0B1A  00F9               	movwf	BCD_2_DEC@to_convert+1
  8215  0B1B  0872               	movf	?_I2C_Read,w
  8216  0B1C  00F8               	movwf	BCD_2_DEC@to_convert
  8217  0B1D  160A  118A  236B  120A  158A  	fcall	_BCD_2_DEC
  8218  0B22  0879               	movf	?_BCD_2_DEC+1,w
  8219  0B23  1283               	bcf	3,5	;RP0=0, select bank0
  8220  0B24  1303               	bcf	3,6	;RP1=0, select bank0
  8221  0B25  00EB               	movwf	_min+1
  8222  0B26  0878               	movf	?_BCD_2_DEC,w
  8223  0B27  00EA               	movwf	_min
  8224                           
  8225                           ;DS3231_1.h: 54: hour = BCD_2_DEC(I2C_Read(1));
  8226  0B28  3001               	movlw	1
  8227  0B29  00F2               	movwf	I2C_Read@ack
  8228  0B2A  3000               	movlw	0
  8229  0B2B  00F3               	movwf	I2C_Read@ack+1
  8230  0B2C  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8231  0B31  0873               	movf	?_I2C_Read+1,w
  8232  0B32  00F9               	movwf	BCD_2_DEC@to_convert+1
  8233  0B33  0872               	movf	?_I2C_Read,w
  8234  0B34  00F8               	movwf	BCD_2_DEC@to_convert
  8235  0B35  160A  118A  236B  120A  158A  	fcall	_BCD_2_DEC
  8236  0B3A  0879               	movf	?_BCD_2_DEC+1,w
  8237  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8238  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  8239  0B3D  00E9               	movwf	_hour+1
  8240  0B3E  0878               	movf	?_BCD_2_DEC,w
  8241  0B3F  00E8               	movwf	_hour
  8242                           
  8243                           ;DS3231_1.h: 55: I2C_Read(1);
  8244  0B40  3001               	movlw	1
  8245  0B41  00F2               	movwf	I2C_Read@ack
  8246  0B42  3000               	movlw	0
  8247  0B43  00F3               	movwf	I2C_Read@ack+1
  8248  0B44  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8249                           
  8250                           ;DS3231_1.h: 56: date = BCD_2_DEC(I2C_Read(1));
  8251  0B49  3001               	movlw	1
  8252  0B4A  00F2               	movwf	I2C_Read@ack
  8253  0B4B  3000               	movlw	0
  8254  0B4C  00F3               	movwf	I2C_Read@ack+1
  8255  0B4D  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8256  0B52  0873               	movf	?_I2C_Read+1,w
  8257  0B53  00F9               	movwf	BCD_2_DEC@to_convert+1
  8258  0B54  0872               	movf	?_I2C_Read,w
  8259  0B55  00F8               	movwf	BCD_2_DEC@to_convert
  8260  0B56  160A  118A  236B  120A  158A  	fcall	_BCD_2_DEC
  8261  0B5B  0879               	movf	?_BCD_2_DEC+1,w
  8262  0B5C  1683               	bsf	3,5	;RP0=1, select bank1
  8263  0B5D  1303               	bcf	3,6	;RP1=0, select bank1
  8264  0B5E  00B8               	movwf	(_date+1)^(0+128)
  8265  0B5F  0878               	movf	?_BCD_2_DEC,w
  8266  0B60  00B7               	movwf	_date^(0+128)
  8267                           
  8268                           ;DS3231_1.h: 57: month = BCD_2_DEC(I2C_Read(1));
  8269  0B61  3001               	movlw	1
  8270  0B62  00F2               	movwf	I2C_Read@ack
  8271  0B63  3000               	movlw	0
  8272  0B64  00F3               	movwf	I2C_Read@ack+1
  8273  0B65  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8274  0B6A  0873               	movf	?_I2C_Read+1,w
  8275  0B6B  00F9               	movwf	BCD_2_DEC@to_convert+1
  8276  0B6C  0872               	movf	?_I2C_Read,w
  8277  0B6D  00F8               	movwf	BCD_2_DEC@to_convert
  8278  0B6E  160A  118A  236B  120A  158A  	fcall	_BCD_2_DEC
  8279  0B73  0879               	movf	?_BCD_2_DEC+1,w
  8280  0B74  1683               	bsf	3,5	;RP0=1, select bank1
  8281  0B75  1303               	bcf	3,6	;RP1=0, select bank1
  8282  0B76  00B6               	movwf	(_month+1)^(0+128)
  8283  0B77  0878               	movf	?_BCD_2_DEC,w
  8284  0B78  00B5               	movwf	_month^(0+128)
  8285                           
  8286                           ;DS3231_1.h: 58: year = BCD_2_DEC(I2C_Read(1));
  8287  0B79  3001               	movlw	1
  8288  0B7A  00F2               	movwf	I2C_Read@ack
  8289  0B7B  3000               	movlw	0
  8290  0B7C  00F3               	movwf	I2C_Read@ack+1
  8291  0B7D  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8292  0B82  0873               	movf	?_I2C_Read+1,w
  8293  0B83  00F9               	movwf	BCD_2_DEC@to_convert+1
  8294  0B84  0872               	movf	?_I2C_Read,w
  8295  0B85  00F8               	movwf	BCD_2_DEC@to_convert
  8296  0B86  160A  118A  236B  120A  158A  	fcall	_BCD_2_DEC
  8297  0B8B  0879               	movf	?_BCD_2_DEC+1,w
  8298  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  8299  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  8300  0B8E  00B4               	movwf	(_year+1)^(0+128)
  8301  0B8F  0878               	movf	?_BCD_2_DEC,w
  8302  0B90  00B3               	movwf	_year^(0+128)
  8303                           
  8304                           ;DS3231_1.h: 59: I2C_Master_Stop();
  8305  0B91  160A  118A  2222  120A  158A  	fcall	_I2C_Master_Stop
  8306                           
  8307                           ;DS3231_1.h: 62: I2C_Master_Start();
  8308  0B96  160A  118A  2219  120A  158A  	fcall	_I2C_Master_Start
  8309                           
  8310                           ;DS3231_1.h: 63: I2C_Master_Write(0xD1);
  8311  0B9B  30D1               	movlw	209
  8312  0B9C  120A  118A  27EF  120A  158A  	fcall	_I2C_Master_Write
  8313                           
  8314                           ;DS3231_1.h: 64: I2C_Read(1);
  8315  0BA1  3001               	movlw	1
  8316  0BA2  00F2               	movwf	I2C_Read@ack
  8317  0BA3  3000               	movlw	0
  8318  0BA4  00F3               	movwf	I2C_Read@ack+1
  8319  0BA5  160A  118A  23E7  120A  158A  	fcall	_I2C_Read
  8320                           
  8321                           ;DS3231_1.h: 65: I2C_Master_Stop();
  8322  0BAA  160A  118A  2222  120A  158A  	fcall	_I2C_Master_Stop
  8323  0BAF                     l84:
  8324  0BAF  0008               	return
  8325  0BB0                     __end_of_Update_Current_Date_Time:
  8326                           
  8327                           	psect	text28
  8328  13E7                     __ptext28:	
  8329 ;; *************** function _I2C_Read *****************
  8330 ;; Defined at:
  8331 ;;		line 81 in file "I2C_LCD.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  ack             2    2[COMMON] unsigned short 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  incoming        2    6[COMMON] unsigned short 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  2    2[COMMON] unsigned short 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8345 ;;      Params:         2       0       0       0       0
  8346 ;;      Locals:         2       0       0       0       0
  8347 ;;      Temps:          2       0       0       0       0
  8348 ;;      Totals:         6       0       0       0       0
  8349 ;;Total ram usage:        6 bytes
  8350 ;; Hardware stack levels used: 1
  8351 ;; Hardware stack levels required when called: 2
  8352 ;; This function calls:
  8353 ;;		_I2C_Master_Wait
  8354 ;; This function is called by:
  8355 ;;		_Update_Current_Date_Time
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function _I2C_Read
  8361  13E7                     _I2C_Read:
  8362  13E7                     l3662:	
  8363                           ;incstack = 0
  8364                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  8365                           
  8366                           
  8367                           ;I2C_LCD.c: 83: unsigned short incoming;;I2C_LCD.c: 84: I2C_Master_Wait();
  8368  13E7  160A  118A  2243  160A  118A  	fcall	_I2C_Master_Wait
  8369  13EC                     l3664:
  8370                           
  8371                           ;I2C_LCD.c: 85: RCEN = 1;
  8372  13EC  1683               	bsf	3,5	;RP0=1, select bank1
  8373  13ED  1303               	bcf	3,6	;RP1=0, select bank1
  8374  13EE  1591               	bsf	17,3	;volatile
  8375                           
  8376                           ;I2C_LCD.c: 87: I2C_Master_Wait();
  8377  13EF  160A  118A  2243  160A  118A  	fcall	_I2C_Master_Wait
  8378  13F4                     l3666:
  8379                           
  8380                           ;I2C_LCD.c: 88: incoming = SSPBUF;
  8381  13F4  1283               	bcf	3,5	;RP0=0, select bank0
  8382  13F5  1303               	bcf	3,6	;RP1=0, select bank0
  8383  13F6  0813               	movf	19,w	;volatile
  8384  13F7  00F4               	movwf	??_I2C_Read
  8385  13F8  01F5               	clrf	??_I2C_Read+1
  8386  13F9  0874               	movf	??_I2C_Read,w
  8387  13FA  00F6               	movwf	I2C_Read@incoming
  8388  13FB  0875               	movf	??_I2C_Read+1,w
  8389  13FC  00F7               	movwf	I2C_Read@incoming+1
  8390  13FD                     l3668:
  8391                           
  8392                           ;I2C_LCD.c: 90: I2C_Master_Wait();
  8393  13FD  160A  118A  2243  160A  118A  	fcall	_I2C_Master_Wait
  8394  1402                     l3670:
  8395                           
  8396                           ;I2C_LCD.c: 91: ACKDT = (ack)?0:1;
  8397  1402  0872               	movf	I2C_Read@ack,w
  8398  1403  0473               	iorwf	I2C_Read@ack+1,w
  8399  1404  1903               	btfsc	3,2
  8400  1405  2C07               	goto	u4821
  8401  1406  2C0B               	goto	u4820
  8402  1407                     u4821:
  8403  1407  1683               	bsf	3,5	;RP0=1, select bank1
  8404  1408  1303               	bcf	3,6	;RP1=0, select bank1
  8405  1409  1691               	bsf	17,5	;volatile
  8406  140A  2C0E               	goto	u4834
  8407  140B                     u4820:
  8408  140B  1683               	bsf	3,5	;RP0=1, select bank1
  8409  140C  1303               	bcf	3,6	;RP1=0, select bank1
  8410  140D  1291               	bcf	17,5	;volatile
  8411  140E                     u4834:
  8412  140E                     l3672:
  8413                           
  8414                           ;I2C_LCD.c: 92: ACKEN = 1;
  8415  140E  1611               	bsf	17,4	;volatile
  8416  140F                     l3674:
  8417                           
  8418                           ;I2C_LCD.c: 94: return incoming;
  8419  140F  0877               	movf	I2C_Read@incoming+1,w
  8420  1410  00F3               	movwf	?_I2C_Read+1
  8421  1411  0876               	movf	I2C_Read@incoming,w
  8422  1412  00F2               	movwf	?_I2C_Read
  8423  1413                     l268:
  8424  1413  0008               	return
  8425  1414                     __end_of_I2C_Read:
  8426                           
  8427                           	psect	text29
  8428  136B                     __ptext29:	
  8429 ;; *************** function _BCD_2_DEC *****************
  8430 ;; Defined at:
  8431 ;;		line 16 in file "DS3231_1.h"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  to_convert      2    8[COMMON] int 
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  2    8[COMMON] int 
  8438 ;; Registers used:
  8439 ;;		wreg, status,2, status,0, pclath, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8445 ;;      Params:         2       0       0       0       0
  8446 ;;      Locals:         0       0       0       0       0
  8447 ;;      Temps:          0       2       0       0       0
  8448 ;;      Totals:         2       2       0       0       0
  8449 ;;Total ram usage:        4 bytes
  8450 ;; Hardware stack levels used: 1
  8451 ;; Hardware stack levels required when called: 2
  8452 ;; This function calls:
  8453 ;;		___wmul
  8454 ;; This function is called by:
  8455 ;;		_Update_Current_Date_Time
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           
  8460                           ;psect for function _BCD_2_DEC
  8461  136B                     _BCD_2_DEC:
  8462  136B                     l3658:	
  8463                           ;incstack = 0
  8464                           ; Regs used in _BCD_2_DEC: [wreg+status,2+status,0+pclath+cstack]
  8465                           
  8466                           
  8467                           ;DS3231_1.h: 18: return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  8468  136B  300F               	movlw	15
  8469  136C  0578               	andwf	BCD_2_DEC@to_convert,w
  8470  136D  1283               	bcf	3,5	;RP0=0, select bank0
  8471  136E  1303               	bcf	3,6	;RP1=0, select bank0
  8472  136F  00A0               	movwf	??_BCD_2_DEC
  8473  1370  3000               	movlw	0
  8474  1371  0579               	andwf	BCD_2_DEC@to_convert+1,w
  8475  1372  00A1               	movwf	??_BCD_2_DEC+1
  8476  1373  0E78               	swapf	BCD_2_DEC@to_convert,w
  8477  1374  390F               	andlw	15
  8478  1375  00F2               	movwf	___wmul@multiplier
  8479  1376  0E79               	swapf	BCD_2_DEC@to_convert+1,w
  8480  1377  39F0               	andlw	240
  8481  1378  04F2               	iorwf	___wmul@multiplier,f
  8482  1379  0E79               	swapf	BCD_2_DEC@to_convert+1,w
  8483  137A  390F               	andlw	15
  8484  137B  00F3               	movwf	___wmul@multiplier+1
  8485  137C  30F0               	movlw	240
  8486  137D  1DF3               	btfss	___wmul@multiplier+1,3
  8487  137E  3000               	movlw	0
  8488  137F  04F3               	iorwf	___wmul@multiplier+1,f
  8489  1380  300A               	movlw	10
  8490  1381  00F4               	movwf	___wmul@multiplicand
  8491  1382  3000               	movlw	0
  8492  1383  00F5               	movwf	___wmul@multiplicand+1
  8493  1384  160A  118A  231D  160A  118A  	fcall	___wmul
  8494  1389  1283               	bcf	3,5	;RP0=0, select bank0
  8495  138A  1303               	bcf	3,6	;RP1=0, select bank0
  8496  138B  0820               	movf	??_BCD_2_DEC,w
  8497  138C  0772               	addwf	?___wmul,w
  8498  138D  00F8               	movwf	?_BCD_2_DEC
  8499  138E  0821               	movf	??_BCD_2_DEC+1,w
  8500  138F  1803               	skipnc
  8501  1390  0A21               	incf	??_BCD_2_DEC+1,w
  8502  1391  0773               	addwf	?___wmul+1,w
  8503  1392  00F9               	movwf	?_BCD_2_DEC+1
  8504  1393                     l75:
  8505  1393  0008               	return
  8506  1394                     __end_of_BCD_2_DEC:
  8507                           
  8508                           	psect	text30
  8509  131D                     __ptext30:	
  8510 ;; *************** function ___wmul *****************
  8511 ;; Defined at:
  8512 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c90/common/Umul16.c"
  8513 ;; Parameters:    Size  Location     Type
  8514 ;;  multiplier      2    2[COMMON] unsigned int 
  8515 ;;  multiplicand    2    4[COMMON] unsigned int 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  product         2    6[COMMON] unsigned int 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  2    2[COMMON] unsigned int 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8527 ;;      Params:         4       0       0       0       0
  8528 ;;      Locals:         2       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0
  8530 ;;      Totals:         6       0       0       0       0
  8531 ;;Total ram usage:        6 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 1
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_BCD_2_DEC
  8538 ;;		_sprintf
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           
  8543                           ;psect for function ___wmul
  8544  131D                     ___wmul:
  8545  131D                     l2352:	
  8546                           ;incstack = 0
  8547                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8548                           
  8549  131D  01F6               	clrf	___wmul@product
  8550  131E  01F7               	clrf	___wmul@product+1
  8551  131F                     l2354:
  8552  131F  1C72               	btfss	___wmul@multiplier,0
  8553  1320  2B22               	goto	u2381
  8554  1321  2B23               	goto	u2380
  8555  1322                     u2381:
  8556  1322  2B29               	goto	l441
  8557  1323                     u2380:
  8558  1323                     l2356:
  8559  1323  0874               	movf	___wmul@multiplicand,w
  8560  1324  07F6               	addwf	___wmul@product,f
  8561  1325  1803               	skipnc
  8562  1326  0AF7               	incf	___wmul@product+1,f
  8563  1327  0875               	movf	___wmul@multiplicand+1,w
  8564  1328  07F7               	addwf	___wmul@product+1,f
  8565  1329                     l441:
  8566  1329  3001               	movlw	1
  8567  132A                     u2395:
  8568  132A  1003               	clrc
  8569  132B  0DF4               	rlf	___wmul@multiplicand,f
  8570  132C  0DF5               	rlf	___wmul@multiplicand+1,f
  8571  132D  3EFF               	addlw	-1
  8572  132E  1D03               	skipz
  8573  132F  2B2A               	goto	u2395
  8574  1330                     l2358:
  8575  1330  3001               	movlw	1
  8576  1331                     u2405:
  8577  1331  1003               	clrc
  8578  1332  0CF3               	rrf	___wmul@multiplier+1,f
  8579  1333  0CF2               	rrf	___wmul@multiplier,f
  8580  1334  3EFF               	addlw	-1
  8581  1335  1D03               	skipz
  8582  1336  2B31               	goto	u2405
  8583  1337                     l2360:
  8584  1337  0872               	movf	___wmul@multiplier,w
  8585  1338  0473               	iorwf	___wmul@multiplier+1,w
  8586  1339  1D03               	btfss	3,2
  8587  133A  2B3C               	goto	u2411
  8588  133B  2B3D               	goto	u2410
  8589  133C                     u2411:
  8590  133C  2B1F               	goto	l2354
  8591  133D                     u2410:
  8592  133D                     l2362:
  8593  133D  0877               	movf	___wmul@product+1,w
  8594  133E  00F3               	movwf	?___wmul+1
  8595  133F  0876               	movf	___wmul@product,w
  8596  1340  00F2               	movwf	?___wmul
  8597  1341                     l443:
  8598  1341  0008               	return
  8599  1342                     __end_of___wmul:
  8600                           
  8601                           	psect	text31
  8602  1342                     __ptext31:	
  8603 ;; *************** function _LCD_Write_F1 *****************
  8604 ;; Defined at:
  8605 ;;		line 161 in file "I2C_LCD.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  Str             1    wreg     PTR unsigned char 
  8608 ;;		 -> NULL(0), ftoa@buf(17), 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  Str             1    0[BANK0 ] PTR unsigned char 
  8611 ;;		 -> NULL(0), ftoa@buf(17), 
  8612 ;;  i               2    1[BANK0 ] int 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  1    wreg      void 
  8615 ;; Registers used:
  8616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8622 ;;      Params:         0       0       0       0       0
  8623 ;;      Locals:         0       3       0       0       0
  8624 ;;      Temps:          1       0       0       0       0
  8625 ;;      Totals:         1       3       0       0       0
  8626 ;;Total ram usage:        4 bytes
  8627 ;; Hardware stack levels used: 1
  8628 ;; Hardware stack levels required when called: 6
  8629 ;; This function calls:
  8630 ;;		_LCD_Write_Char
  8631 ;; This function is called by:
  8632 ;;		_main
  8633 ;; This function uses a non-reentrant model
  8634 ;;
  8635                           
  8636                           
  8637                           ;psect for function _LCD_Write_F1
  8638  1342                     _LCD_Write_F1:
  8639                           
  8640                           ;incstack = 0
  8641                           ; Regs used in _LCD_Write_F1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8642                           ;LCD_Write_F1@Str stored from wreg
  8643  1342  1283               	bcf	3,5	;RP0=0, select bank0
  8644  1343  1303               	bcf	3,6	;RP1=0, select bank0
  8645  1344  00A0               	movwf	LCD_Write_F1@Str
  8646  1345                     l4246:
  8647                           
  8648                           ;I2C_LCD.c: 163: for(int i=0; i<5; i++)
  8649  1345  01A1               	clrf	LCD_Write_F1@i
  8650  1346  01A2               	clrf	LCD_Write_F1@i+1
  8651  1347                     l4252:
  8652                           
  8653                           ;I2C_LCD.c: 164: LCD_Write_Char(Str[i]);
  8654  1347  1283               	bcf	3,5	;RP0=0, select bank0
  8655  1348  1303               	bcf	3,6	;RP1=0, select bank0
  8656  1349  0821               	movf	LCD_Write_F1@i,w
  8657  134A  0720               	addwf	LCD_Write_F1@Str,w
  8658  134B  00F8               	movwf	??_LCD_Write_F1
  8659  134C  0878               	movf	??_LCD_Write_F1,w
  8660  134D  0084               	movwf	4
  8661  134E  1383               	bcf	3,7	;select IRP bank0
  8662  134F  0800               	movf	0,w
  8663  1350  160A  118A  22DC  160A  118A  	fcall	_LCD_Write_Char
  8664  1355                     l4254:
  8665  1355  3001               	movlw	1
  8666  1356  1283               	bcf	3,5	;RP0=0, select bank0
  8667  1357  1303               	bcf	3,6	;RP1=0, select bank0
  8668  1358  07A1               	addwf	LCD_Write_F1@i,f
  8669  1359  1803               	skipnc
  8670  135A  0AA2               	incf	LCD_Write_F1@i+1,f
  8671  135B  3000               	movlw	0
  8672  135C  07A2               	addwf	LCD_Write_F1@i+1,f
  8673  135D                     l4256:
  8674  135D  0822               	movf	LCD_Write_F1@i+1,w
  8675  135E  3A80               	xorlw	128
  8676  135F  00FF               	movwf	btemp+1
  8677  1360  3080               	movlw	128
  8678  1361  027F               	subwf	btemp+1,w
  8679  1362  1D03               	skipz
  8680  1363  2B66               	goto	u5975
  8681  1364  3005               	movlw	5
  8682  1365  0221               	subwf	LCD_Write_F1@i,w
  8683  1366                     u5975:
  8684  1366  1C03               	skipc
  8685  1367  2B69               	goto	u5971
  8686  1368  2B6A               	goto	u5970
  8687  1369                     u5971:
  8688  1369  2B47               	goto	l4252
  8689  136A                     u5970:
  8690  136A                     l294:
  8691  136A  0008               	return
  8692  136B                     __end_of_LCD_Write_F1:
  8693                           
  8694                           	psect	text32
  8695  12DC                     __ptext32:	
  8696 ;; *************** function _LCD_Write_Char *****************
  8697 ;; Defined at:
  8698 ;;		line 148 in file "I2C_LCD.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;  Data            1    wreg     unsigned char 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;  Data            1    7[COMMON] unsigned char 
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  1    wreg      void 
  8705 ;; Registers used:
  8706 ;;		wreg, status,2, status,0, pclath, cstack
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8712 ;;      Params:         0       0       0       0       0
  8713 ;;      Locals:         1       0       0       0       0
  8714 ;;      Temps:          1       0       0       0       0
  8715 ;;      Totals:         2       0       0       0       0
  8716 ;;Total ram usage:        2 bytes
  8717 ;; Hardware stack levels used: 1
  8718 ;; Hardware stack levels required when called: 5
  8719 ;; This function calls:
  8720 ;;		_LCD_Write_4Bit
  8721 ;; This function is called by:
  8722 ;;		_main
  8723 ;;		_display_Time
  8724 ;;		_display_zero_six
  8725 ;;		_display_twelve_hundred
  8726 ;;		_display_eighteen_hundred
  8727 ;;		_display_zero_zero
  8728 ;;		_LCD_Write_F1
  8729 ;;		_LCD_Write_String
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           
  8734                           ;psect for function _LCD_Write_Char
  8735  12DC                     _LCD_Write_Char:
  8736                           
  8737                           ;incstack = 0
  8738                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8739                           ;LCD_Write_Char@Data stored from wreg
  8740  12DC  00F7               	movwf	LCD_Write_Char@Data
  8741  12DD                     l3682:
  8742                           
  8743                           ;I2C_LCD.c: 150: RS = 1;
  8744  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  8745  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  8746  12DF  01E1               	clrf	_RS
  8747  12E0  0AE1               	incf	_RS,f
  8748  12E1                     l3684:
  8749                           
  8750                           ;I2C_LCD.c: 151: LCD_Write_4Bit(Data & 0xF0);
  8751  12E1  0877               	movf	LCD_Write_Char@Data,w
  8752  12E2  39F0               	andlw	240
  8753  12E3  160A  118A  2289  160A  118A  	fcall	_LCD_Write_4Bit
  8754                           
  8755                           ;I2C_LCD.c: 152: LCD_Write_4Bit((Data << 4) & 0xF0);
  8756  12E8  0877               	movf	LCD_Write_Char@Data,w
  8757  12E9  00F6               	movwf	??_LCD_Write_Char
  8758  12EA  3003               	movlw	3
  8759  12EB                     u4855:
  8760  12EB  1003               	clrc
  8761  12EC  0DF6               	rlf	??_LCD_Write_Char,f
  8762  12ED  3EFF               	addlw	-1
  8763  12EE  1D03               	skipz
  8764  12EF  2AEB               	goto	u4855
  8765  12F0  1003               	clrc
  8766  12F1  0D76               	rlf	??_LCD_Write_Char,w
  8767  12F2  39F0               	andlw	240
  8768  12F3  160A  118A  2289  160A  118A  	fcall	_LCD_Write_4Bit
  8769  12F8                     l283:
  8770  12F8  0008               	return
  8771  12F9                     __end_of_LCD_Write_Char:
  8772                           
  8773                           	psect	text33
  8774  1441                     __ptext33:	
  8775 ;; *************** function _LCD_Set_Cursor *****************
  8776 ;; Defined at:
  8777 ;;		line 167 in file "I2C_LCD.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  ROW             1    wreg     unsigned char 
  8780 ;;  COL             1    8[COMMON] unsigned char 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;  ROW             1    9[COMMON] unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8792 ;;      Params:         1       0       0       0       0
  8793 ;;      Locals:         1       0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0
  8795 ;;      Totals:         2       0       0       0       0
  8796 ;;Total ram usage:        2 bytes
  8797 ;; Hardware stack levels used: 1
  8798 ;; Hardware stack levels required when called: 6
  8799 ;; This function calls:
  8800 ;;		_LCD_CMD
  8801 ;; This function is called by:
  8802 ;;		_main
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           
  8807                           ;psect for function _LCD_Set_Cursor
  8808  1441                     _LCD_Set_Cursor:
  8809                           
  8810                           ;incstack = 0
  8811                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8812                           ;LCD_Set_Cursor@ROW stored from wreg
  8813  1441  00F9               	movwf	LCD_Set_Cursor@ROW
  8814  1442                     l4190:
  8815                           
  8816                           ;I2C_LCD.c: 169: switch(ROW)
  8817  1442  2C63               	goto	l4200
  8818  1443                     l4192:
  8819                           
  8820                           ;I2C_LCD.c: 172: LCD_CMD(0xC0 + COL-1);
  8821  1443  0878               	movf	LCD_Set_Cursor@COL,w
  8822  1444  3EBF               	addlw	191
  8823  1445  160A  118A  22A3  160A  118A  	fcall	_LCD_CMD
  8824                           
  8825                           ;I2C_LCD.c: 173: break;
  8826  144A  2C6E               	goto	l303
  8827  144B                     l4194:
  8828                           
  8829                           ;I2C_LCD.c: 175: LCD_CMD(0x94 + COL-1);
  8830  144B  0878               	movf	LCD_Set_Cursor@COL,w
  8831  144C  3E93               	addlw	147
  8832  144D  160A  118A  22A3  160A  118A  	fcall	_LCD_CMD
  8833                           
  8834                           ;I2C_LCD.c: 176: break;
  8835  1452  2C6E               	goto	l303
  8836  1453                     l4196:
  8837                           
  8838                           ;I2C_LCD.c: 178: LCD_CMD(0xD4 + COL-1);
  8839  1453  0878               	movf	LCD_Set_Cursor@COL,w
  8840  1454  3ED3               	addlw	211
  8841  1455  160A  118A  22A3  160A  118A  	fcall	_LCD_CMD
  8842                           
  8843                           ;I2C_LCD.c: 179: break;
  8844  145A  2C6E               	goto	l303
  8845  145B                     l4198:
  8846                           
  8847                           ;I2C_LCD.c: 182: LCD_CMD(0x80 + COL-1);
  8848  145B  0878               	movf	LCD_Set_Cursor@COL,w
  8849  145C  3E7F               	addlw	127
  8850  145D  160A  118A  22A3  160A  118A  	fcall	_LCD_CMD
  8851                           
  8852                           ;I2C_LCD.c: 183: }
  8853  1462  2C6E               	goto	l303
  8854  1463                     l4200:
  8855  1463  0879               	movf	LCD_Set_Cursor@ROW,w
  8856                           
  8857                           ; Switch size 1, requested type "simple"
  8858                           ; Number of cases is 3, Range of values is 2 to 4
  8859                           ; switch strategies available:
  8860                           ; Name         Instructions Cycles
  8861                           ; simple_byte           10     6 (average)
  8862                           ; direct_byte           20    11 (fixed)
  8863                           ; jumptable            263     9 (fixed)
  8864                           ;	Chosen strategy is simple_byte
  8865  1464  3A02               	xorlw	2	; case 2
  8866  1465  1903               	skipnz
  8867  1466  2C43               	goto	l4192
  8868  1467  3A01               	xorlw	1	; case 3
  8869  1468  1903               	skipnz
  8870  1469  2C4B               	goto	l4194
  8871  146A  3A07               	xorlw	7	; case 4
  8872  146B  1903               	skipnz
  8873  146C  2C53               	goto	l4196
  8874  146D  2C5B               	goto	l4198
  8875  146E                     l303:
  8876  146E  0008               	return
  8877  146F                     __end_of_LCD_Set_Cursor:
  8878                           
  8879                           	psect	text34
  8880  0814                     __ptext34:	
  8881 ;; *************** function _LCD_Init *****************
  8882 ;; Defined at:
  8883 ;;		line 101 in file "I2C_LCD.c"
  8884 ;; Parameters:    Size  Location     Type
  8885 ;;  I2C_Add         1    wreg     unsigned char 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  I2C_Add         1    0[BANK0 ] unsigned char 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0, pclath, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8897 ;;      Params:         0       0       0       0       0
  8898 ;;      Locals:         0       1       0       0       0
  8899 ;;      Temps:          2       0       0       0       0
  8900 ;;      Totals:         2       1       0       0       0
  8901 ;;Total ram usage:        3 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 6
  8904 ;; This function calls:
  8905 ;;		_IO_Expander_Write
  8906 ;;		_LCD_CMD
  8907 ;; This function is called by:
  8908 ;;		_main
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           
  8913                           ;psect for function _LCD_Init
  8914  0814                     _LCD_Init:
  8915                           
  8916                           ;incstack = 0
  8917                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8918                           ;LCD_Init@I2C_Add stored from wreg
  8919  0814  1283               	bcf	3,5	;RP0=0, select bank0
  8920  0815  1303               	bcf	3,6	;RP1=0, select bank0
  8921  0816  00A0               	movwf	LCD_Init@I2C_Add
  8922  0817                     l4066:
  8923                           
  8924                           ;I2C_LCD.c: 103: i2c_add = I2C_Add;
  8925  0817  0820               	movf	LCD_Init@I2C_Add,w
  8926  0818  00F8               	movwf	??_LCD_Init
  8927  0819  0878               	movf	??_LCD_Init,w
  8928  081A  00ED               	movwf	_i2c_add
  8929  081B                     l4068:
  8930                           
  8931                           ;I2C_LCD.c: 104: IO_Expander_Write(0x00);
  8932  081B  3000               	movlw	0
  8933  081C  160A  118A  22BF  120A  158A  	fcall	_IO_Expander_Write
  8934  0821                     l4070:
  8935                           
  8936                           ;I2C_LCD.c: 105: _delay((unsigned long)((30)*(8000000/4000.0)));
  8937  0821  304E               	movlw	78
  8938  0822  00F9               	movwf	??_LCD_Init+1
  8939  0823  30EB               	movlw	235
  8940  0824  00F8               	movwf	??_LCD_Init
  8941  0825                     u6167:
  8942  0825  0BF8               	decfsz	??_LCD_Init,f
  8943  0826  2825               	goto	u6167
  8944  0827  0BF9               	decfsz	??_LCD_Init+1,f
  8945  0828  2825               	goto	u6167
  8946                           
  8947                           ;I2C_LCD.c: 106: LCD_CMD(0x03);
  8948  0829  3003               	movlw	3
  8949  082A  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  8950  082F                     l4072:
  8951                           
  8952                           ;I2C_LCD.c: 107: _delay((unsigned long)((5)*(8000000/4000.0)));
  8953  082F  300D               	movlw	13
  8954  0830  00F9               	movwf	??_LCD_Init+1
  8955  0831  30FB               	movlw	251
  8956  0832  00F8               	movwf	??_LCD_Init
  8957  0833                     u6177:
  8958  0833  0BF8               	decfsz	??_LCD_Init,f
  8959  0834  2833               	goto	u6177
  8960  0835  0BF9               	decfsz	??_LCD_Init+1,f
  8961  0836  2833               	goto	u6177
  8962  0837  2838               	nop2
  8963  0838                     l4074:
  8964                           
  8965                           ;I2C_LCD.c: 108: LCD_CMD(0x03);
  8966  0838  3003               	movlw	3
  8967  0839  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  8968                           
  8969                           ;I2C_LCD.c: 109: _delay((unsigned long)((5)*(8000000/4000.0)));
  8970  083E  300D               	movlw	13
  8971  083F  00F9               	movwf	??_LCD_Init+1
  8972  0840  30FB               	movlw	251
  8973  0841  00F8               	movwf	??_LCD_Init
  8974  0842                     u6187:
  8975  0842  0BF8               	decfsz	??_LCD_Init,f
  8976  0843  2842               	goto	u6187
  8977  0844  0BF9               	decfsz	??_LCD_Init+1,f
  8978  0845  2842               	goto	u6187
  8979  0846  2847               	nop2
  8980  0847                     l4076:
  8981                           
  8982                           ;I2C_LCD.c: 110: LCD_CMD(0x03);
  8983  0847  3003               	movlw	3
  8984  0848  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  8985  084D                     l4078:
  8986                           
  8987                           ;I2C_LCD.c: 111: _delay((unsigned long)((5)*(8000000/4000.0)));
  8988  084D  300D               	movlw	13
  8989  084E  00F9               	movwf	??_LCD_Init+1
  8990  084F  30FB               	movlw	251
  8991  0850  00F8               	movwf	??_LCD_Init
  8992  0851                     u6197:
  8993  0851  0BF8               	decfsz	??_LCD_Init,f
  8994  0852  2851               	goto	u6197
  8995  0853  0BF9               	decfsz	??_LCD_Init+1,f
  8996  0854  2851               	goto	u6197
  8997  0855  2856               	nop2
  8998                           
  8999                           ;I2C_LCD.c: 112: LCD_CMD(0x02);
  9000  0856  3002               	movlw	2
  9001  0857  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  9002  085C                     l4080:
  9003                           
  9004                           ;I2C_LCD.c: 113: _delay((unsigned long)((5)*(8000000/4000.0)));
  9005  085C  300D               	movlw	13
  9006  085D  00F9               	movwf	??_LCD_Init+1
  9007  085E  30FB               	movlw	251
  9008  085F  00F8               	movwf	??_LCD_Init
  9009  0860                     u6207:
  9010  0860  0BF8               	decfsz	??_LCD_Init,f
  9011  0861  2860               	goto	u6207
  9012  0862  0BF9               	decfsz	??_LCD_Init+1,f
  9013  0863  2860               	goto	u6207
  9014  0864  2865               	nop2
  9015  0865                     l4082:
  9016                           
  9017                           ;I2C_LCD.c: 114: LCD_CMD(0x20 | (2 << 2));
  9018  0865  3028               	movlw	40
  9019  0866  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  9020                           
  9021                           ;I2C_LCD.c: 115: _delay((unsigned long)((50)*(8000000/4000.0)));
  9022  086B  3082               	movlw	130
  9023  086C  00F9               	movwf	??_LCD_Init+1
  9024  086D  30DD               	movlw	221
  9025  086E  00F8               	movwf	??_LCD_Init
  9026  086F                     u6217:
  9027  086F  0BF8               	decfsz	??_LCD_Init,f
  9028  0870  286F               	goto	u6217
  9029  0871  0BF9               	decfsz	??_LCD_Init+1,f
  9030  0872  286F               	goto	u6217
  9031  0873  2874               	nop2
  9032  0874                     l4084:
  9033                           
  9034                           ;I2C_LCD.c: 116: LCD_CMD(0x0C);
  9035  0874  300C               	movlw	12
  9036  0875  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  9037  087A                     l4086:
  9038                           
  9039                           ;I2C_LCD.c: 117: _delay((unsigned long)((50)*(8000000/4000.0)));
  9040  087A  3082               	movlw	130
  9041  087B  00F9               	movwf	??_LCD_Init+1
  9042  087C  30DD               	movlw	221
  9043  087D  00F8               	movwf	??_LCD_Init
  9044  087E                     u6227:
  9045  087E  0BF8               	decfsz	??_LCD_Init,f
  9046  087F  287E               	goto	u6227
  9047  0880  0BF9               	decfsz	??_LCD_Init+1,f
  9048  0881  287E               	goto	u6227
  9049  0882  2883               	nop2
  9050                           
  9051                           ;I2C_LCD.c: 118: LCD_CMD(0x01);
  9052  0883  3001               	movlw	1
  9053  0884  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  9054  0889                     l4088:
  9055                           
  9056                           ;I2C_LCD.c: 119: _delay((unsigned long)((50)*(8000000/4000.0)));
  9057  0889  3082               	movlw	130
  9058  088A  00F9               	movwf	??_LCD_Init+1
  9059  088B  30DD               	movlw	221
  9060  088C  00F8               	movwf	??_LCD_Init
  9061  088D                     u6237:
  9062  088D  0BF8               	decfsz	??_LCD_Init,f
  9063  088E  288D               	goto	u6237
  9064  088F  0BF9               	decfsz	??_LCD_Init+1,f
  9065  0890  288D               	goto	u6237
  9066  0891  2892               	nop2
  9067  0892                     l4090:
  9068                           
  9069                           ;I2C_LCD.c: 120: LCD_CMD(0x04 | 0x02);
  9070  0892  3006               	movlw	6
  9071  0893  160A  118A  22A3  120A  158A  	fcall	_LCD_CMD
  9072                           
  9073                           ;I2C_LCD.c: 121: _delay((unsigned long)((50)*(8000000/4000.0)));
  9074  0898  3082               	movlw	130
  9075  0899  00F9               	movwf	??_LCD_Init+1
  9076  089A  30DD               	movlw	221
  9077  089B  00F8               	movwf	??_LCD_Init
  9078  089C                     u6247:
  9079  089C  0BF8               	decfsz	??_LCD_Init,f
  9080  089D  289C               	goto	u6247
  9081  089E  0BF9               	decfsz	??_LCD_Init+1,f
  9082  089F  289C               	goto	u6247
  9083  08A0  28A1               	nop2
  9084  08A1                     l271:
  9085  08A1  0008               	return
  9086  08A2                     __end_of_LCD_Init:
  9087                           
  9088                           	psect	text35
  9089  12A3                     __ptext35:	
  9090 ;; *************** function _LCD_CMD *****************
  9091 ;; Defined at:
  9092 ;;		line 141 in file "I2C_LCD.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  CMD             1    wreg     unsigned char 
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;  CMD             1    7[COMMON] unsigned char 
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      void 
  9099 ;; Registers used:
  9100 ;;		wreg, status,2, status,0, pclath, cstack
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9106 ;;      Params:         0       0       0       0       0
  9107 ;;      Locals:         1       0       0       0       0
  9108 ;;      Temps:          1       0       0       0       0
  9109 ;;      Totals:         2       0       0       0       0
  9110 ;;Total ram usage:        2 bytes
  9111 ;; Hardware stack levels used: 1
  9112 ;; Hardware stack levels required when called: 5
  9113 ;; This function calls:
  9114 ;;		_LCD_Write_4Bit
  9115 ;; This function is called by:
  9116 ;;		_LCD_Init
  9117 ;;		_LCD_Set_Cursor
  9118 ;;		_LCD_SL
  9119 ;;		_LCD_SR
  9120 ;;		_LCD_Clear
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _LCD_CMD
  9126  12A3                     _LCD_CMD:
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  9130                           ;LCD_CMD@CMD stored from wreg
  9131  12A3  00F7               	movwf	LCD_CMD@CMD
  9132  12A4                     l3686:
  9133                           
  9134                           ;I2C_LCD.c: 143: RS = 0;
  9135  12A4  1283               	bcf	3,5	;RP0=0, select bank0
  9136  12A5  1303               	bcf	3,6	;RP1=0, select bank0
  9137  12A6  01E1               	clrf	_RS
  9138  12A7                     l3688:
  9139                           
  9140                           ;I2C_LCD.c: 144: LCD_Write_4Bit(CMD & 0xF0);
  9141  12A7  0877               	movf	LCD_CMD@CMD,w
  9142  12A8  39F0               	andlw	240
  9143  12A9  160A  118A  2289  160A  118A  	fcall	_LCD_Write_4Bit
  9144  12AE                     l3690:
  9145                           
  9146                           ;I2C_LCD.c: 145: LCD_Write_4Bit((CMD << 4) & 0xF0);
  9147  12AE  0877               	movf	LCD_CMD@CMD,w
  9148  12AF  00F6               	movwf	??_LCD_CMD
  9149  12B0  3003               	movlw	3
  9150  12B1                     u4865:
  9151  12B1  1003               	clrc
  9152  12B2  0DF6               	rlf	??_LCD_CMD,f
  9153  12B3  3EFF               	addlw	-1
  9154  12B4  1D03               	skipz
  9155  12B5  2AB1               	goto	u4865
  9156  12B6  1003               	clrc
  9157  12B7  0D76               	rlf	??_LCD_CMD,w
  9158  12B8  39F0               	andlw	240
  9159  12B9  160A  118A  2289  160A  118A  	fcall	_LCD_Write_4Bit
  9160  12BE                     l280:
  9161  12BE  0008               	return
  9162  12BF                     __end_of_LCD_CMD:
  9163                           
  9164                           	psect	text36
  9165  1289                     __ptext36:	
  9166 ;; *************** function _LCD_Write_4Bit *****************
  9167 ;; Defined at:
  9168 ;;		line 132 in file "I2C_LCD.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  Nibble          1    wreg     unsigned char 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  Nibble          1    5[COMMON] unsigned char 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      void 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0, pclath, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9182 ;;      Params:         0       0       0       0       0
  9183 ;;      Locals:         1       0       0       0       0
  9184 ;;      Temps:          1       0       0       0       0
  9185 ;;      Totals:         2       0       0       0       0
  9186 ;;Total ram usage:        2 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 4
  9189 ;; This function calls:
  9190 ;;		_IO_Expander_Write
  9191 ;; This function is called by:
  9192 ;;		_LCD_CMD
  9193 ;;		_LCD_Write_Char
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           
  9198                           ;psect for function _LCD_Write_4Bit
  9199  1289                     _LCD_Write_4Bit:
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  9203                           ;LCD_Write_4Bit@Nibble stored from wreg
  9204  1289  00F5               	movwf	LCD_Write_4Bit@Nibble
  9205  128A                     l3594:
  9206                           
  9207                           ;I2C_LCD.c: 135: Nibble |= RS;
  9208  128A  1283               	bcf	3,5	;RP0=0, select bank0
  9209  128B  1303               	bcf	3,6	;RP1=0, select bank0
  9210  128C  0861               	movf	_RS,w
  9211  128D  00F4               	movwf	??_LCD_Write_4Bit
  9212  128E  0874               	movf	??_LCD_Write_4Bit,w
  9213  128F  04F5               	iorwf	LCD_Write_4Bit@Nibble,f
  9214  1290                     l3596:
  9215                           
  9216                           ;I2C_LCD.c: 136: IO_Expander_Write(Nibble | 0x04);
  9217  1290  0875               	movf	LCD_Write_4Bit@Nibble,w
  9218  1291  3804               	iorlw	4
  9219  1292  160A  118A  22BF  160A  118A  	fcall	_IO_Expander_Write
  9220  1297                     l3598:
  9221                           
  9222                           ;I2C_LCD.c: 137: IO_Expander_Write(Nibble & 0xFB);
  9223  1297  0875               	movf	LCD_Write_4Bit@Nibble,w
  9224  1298  39FB               	andlw	251
  9225  1299  160A  118A  22BF  160A  118A  	fcall	_IO_Expander_Write
  9226                           
  9227                           ;I2C_LCD.c: 138: _delay((unsigned long)((50)*(8000000/4000000.0)));
  9228  129E  3021               	movlw	33
  9229  129F  00F4               	movwf	??_LCD_Write_4Bit
  9230  12A0                     u6257:
  9231  12A0  0BF4               	decfsz	??_LCD_Write_4Bit,f
  9232  12A1  2AA0               	goto	u6257
  9233  12A2                     l277:
  9234  12A2  0008               	return
  9235  12A3                     __end_of_LCD_Write_4Bit:
  9236                           
  9237                           	psect	text37
  9238  12BF                     __ptext37:	
  9239 ;; *************** function _IO_Expander_Write *****************
  9240 ;; Defined at:
  9241 ;;		line 124 in file "I2C_LCD.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  Data            1    wreg     unsigned char 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  Data            1    3[COMMON] unsigned char 
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0, pclath, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9255 ;;      Params:         0       0       0       0       0
  9256 ;;      Locals:         1       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0
  9258 ;;      Totals:         1       0       0       0       0
  9259 ;;Total ram usage:        1 bytes
  9260 ;; Hardware stack levels used: 1
  9261 ;; Hardware stack levels required when called: 3
  9262 ;; This function calls:
  9263 ;;		_I2C_Master_Start
  9264 ;;		_I2C_Master_Stop
  9265 ;;		_I2C_Master_Write
  9266 ;; This function is called by:
  9267 ;;		_LCD_Init
  9268 ;;		_LCD_Write_4Bit
  9269 ;;		_Backlight
  9270 ;;		_noBacklight
  9271 ;; This function uses a non-reentrant model
  9272 ;;
  9273                           
  9274                           
  9275                           ;psect for function _IO_Expander_Write
  9276  12BF                     _IO_Expander_Write:
  9277                           
  9278                           ;incstack = 0
  9279                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  9280                           ;IO_Expander_Write@Data stored from wreg
  9281  12BF  00F3               	movwf	IO_Expander_Write@Data
  9282  12C0                     l3592:
  9283                           
  9284                           ;I2C_LCD.c: 126: I2C_Master_Start();
  9285  12C0  160A  118A  2219  160A  118A  	fcall	_I2C_Master_Start
  9286                           
  9287                           ;I2C_LCD.c: 127: I2C_Master_Write(i2c_add);
  9288  12C5  1283               	bcf	3,5	;RP0=0, select bank0
  9289  12C6  1303               	bcf	3,6	;RP1=0, select bank0
  9290  12C7  086D               	movf	_i2c_add,w
  9291  12C8  120A  118A  27EF  160A  118A  	fcall	_I2C_Master_Write
  9292                           
  9293                           ;I2C_LCD.c: 128: I2C_Master_Write(Data | BackLight_State);
  9294  12CD  0873               	movf	IO_Expander_Write@Data,w
  9295  12CE  1283               	bcf	3,5	;RP0=0, select bank0
  9296  12CF  1303               	bcf	3,6	;RP1=0, select bank0
  9297  12D0  046C               	iorwf	_BackLight_State,w
  9298  12D1  120A  118A  27EF  160A  118A  	fcall	_I2C_Master_Write
  9299                           
  9300                           ;I2C_LCD.c: 129: I2C_Master_Stop();
  9301  12D6  160A  118A  2222  160A  118A  	fcall	_I2C_Master_Stop
  9302  12DB                     l274:
  9303  12DB  0008               	return
  9304  12DC                     __end_of_IO_Expander_Write:
  9305                           
  9306                           	psect	text38
  9307  07EF                     __ptext38:	
  9308 ;; *************** function _I2C_Master_Write *****************
  9309 ;; Defined at:
  9310 ;;		line 61 in file "I2C_LCD.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;  data            1    wreg     unsigned char 
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;  data            1    2[COMMON] unsigned char 
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      unsigned char 
  9317 ;; Registers used:
  9318 ;;		wreg, status,2, status,0, pclath, cstack
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9324 ;;      Params:         0       0       0       0       0
  9325 ;;      Locals:         1       0       0       0       0
  9326 ;;      Temps:          0       0       0       0       0
  9327 ;;      Totals:         1       0       0       0       0
  9328 ;;Total ram usage:        1 bytes
  9329 ;; Hardware stack levels used: 1
  9330 ;; Hardware stack levels required when called: 2
  9331 ;; This function calls:
  9332 ;;		_I2C_Master_Wait
  9333 ;; This function is called by:
  9334 ;;		_Update_Current_Date_Time
  9335 ;;		_IO_Expander_Write
  9336 ;;		_Set_Time_Date
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           
  9341                           ;psect for function _I2C_Master_Write
  9342  07EF                     _I2C_Master_Write:
  9343                           
  9344                           ;incstack = 0
  9345                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9346                           ;I2C_Master_Write@data stored from wreg
  9347  07EF  00F2               	movwf	I2C_Master_Write@data
  9348  07F0                     l3584:
  9349                           
  9350                           ;I2C_LCD.c: 63: I2C_Master_Wait();
  9351  07F0  160A  118A  2243  120A  118A  	fcall	_I2C_Master_Wait
  9352  07F5                     l3586:
  9353                           
  9354                           ;I2C_LCD.c: 64: SSPBUF = data;
  9355  07F5  0872               	movf	I2C_Master_Write@data,w
  9356  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  9357  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  9358  07F8  0093               	movwf	19	;volatile
  9359  07F9                     l256:	
  9360                           ;I2C_LCD.c: 65: while(!SSPIF);
  9361                           
  9362  07F9  1D8C               	btfss	12,3	;volatile
  9363  07FA  2FFC               	goto	u4651
  9364  07FB  2FFD               	goto	u4650
  9365  07FC                     u4651:
  9366  07FC  2FF9               	goto	l256
  9367  07FD                     u4650:
  9368  07FD                     l258:
  9369                           
  9370                           ;I2C_LCD.c: 66: SSPIF = 0;
  9371  07FD  118C               	bcf	12,3	;volatile
  9372  07FE                     l259:	
  9373                           ;I2C_LCD.c: 67: return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  9374                           
  9375  07FE  0008               	return
  9376  07FF                     __end_of_I2C_Master_Write:
  9377                           
  9378                           	psect	text39
  9379  1222                     __ptext39:	
  9380 ;; *************** function _I2C_Master_Stop *****************
  9381 ;; Defined at:
  9382 ;;		line 41 in file "I2C_LCD.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;		None
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		wreg, status,2, status,0, pclath, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9396 ;;      Params:         0       0       0       0       0
  9397 ;;      Locals:         0       0       0       0       0
  9398 ;;      Temps:          0       0       0       0       0
  9399 ;;      Totals:         0       0       0       0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 2
  9403 ;; This function calls:
  9404 ;;		_I2C_Master_Wait
  9405 ;; This function is called by:
  9406 ;;		_Update_Current_Date_Time
  9407 ;;		_IO_Expander_Write
  9408 ;;		_Set_Time_Date
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           
  9413                           ;psect for function _I2C_Master_Stop
  9414  1222                     _I2C_Master_Stop:
  9415  1222                     l3588:	
  9416                           ;incstack = 0
  9417                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9418                           
  9419                           
  9420                           ;I2C_LCD.c: 43: I2C_Master_Wait();
  9421  1222  160A  118A  2243  160A  118A  	fcall	_I2C_Master_Wait
  9422  1227                     l3590:
  9423                           
  9424                           ;I2C_LCD.c: 44: PEN = 1;
  9425  1227  1683               	bsf	3,5	;RP0=1, select bank1
  9426  1228  1303               	bcf	3,6	;RP1=0, select bank1
  9427  1229  1511               	bsf	17,2	;volatile
  9428  122A                     l247:
  9429  122A  0008               	return
  9430  122B                     __end_of_I2C_Master_Stop:
  9431                           
  9432                           	psect	text40
  9433  1219                     __ptext40:	
  9434 ;; *************** function _I2C_Master_Start *****************
  9435 ;; Defined at:
  9436 ;;		line 29 in file "I2C_LCD.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      void 
  9443 ;; Registers used:
  9444 ;;		wreg, status,2, status,0, pclath, cstack
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9450 ;;      Params:         0       0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0
  9453 ;;      Totals:         0       0       0       0       0
  9454 ;;Total ram usage:        0 bytes
  9455 ;; Hardware stack levels used: 1
  9456 ;; Hardware stack levels required when called: 2
  9457 ;; This function calls:
  9458 ;;		_I2C_Master_Wait
  9459 ;; This function is called by:
  9460 ;;		_Update_Current_Date_Time
  9461 ;;		_IO_Expander_Write
  9462 ;;		_Set_Time_Date
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           
  9467                           ;psect for function _I2C_Master_Start
  9468  1219                     _I2C_Master_Start:
  9469  1219                     l3580:	
  9470                           ;incstack = 0
  9471                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9472                           
  9473                           
  9474                           ;I2C_LCD.c: 31: I2C_Master_Wait();
  9475  1219  160A  118A  2243  160A  118A  	fcall	_I2C_Master_Wait
  9476  121E                     l3582:
  9477                           
  9478                           ;I2C_LCD.c: 32: SEN = 1;
  9479  121E  1683               	bsf	3,5	;RP0=1, select bank1
  9480  121F  1303               	bcf	3,6	;RP1=0, select bank1
  9481  1220  1411               	bsf	17,0	;volatile
  9482  1221                     l241:
  9483  1221  0008               	return
  9484  1222                     __end_of_I2C_Master_Start:
  9485                           
  9486                           	psect	text41
  9487  1243                     __ptext41:	
  9488 ;; *************** function _I2C_Master_Wait *****************
  9489 ;; Defined at:
  9490 ;;		line 19 in file "I2C_LCD.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;		None
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9504 ;;      Params:         0       0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0
  9507 ;;      Totals:         0       0       0       0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used: 1
  9510 ;; Hardware stack levels required when called: 1
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_I2C_Master_Start
  9515 ;;		_I2C_Master_Stop
  9516 ;;		_I2C_Master_Write
  9517 ;;		_I2C_Read
  9518 ;;		_I2C_Master_RepeatedStart
  9519 ;;		_I2C_ACK
  9520 ;;		_I2C_NACK
  9521 ;;		_I2C_Read_Byte
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           
  9526                           ;psect for function _I2C_Master_Wait
  9527  1243                     _I2C_Master_Wait:
  9528  1243                     l3576:	
  9529                           ;incstack = 0
  9530                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9531                           
  9532  1243                     l235:	
  9533                           ;I2C_LCD.c: 21: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9534                           
  9535  1243  1683               	bsf	3,5	;RP0=1, select bank1
  9536  1244  1303               	bcf	3,6	;RP1=0, select bank1
  9537  1245  1914               	btfsc	20,2	;volatile
  9538  1246  2A48               	goto	u4631
  9539  1247  2A49               	goto	u4630
  9540  1248                     u4631:
  9541  1248  2A43               	goto	l235
  9542  1249                     u4630:
  9543  1249                     l3578:
  9544  1249  0811               	movf	17,w	;volatile
  9545  124A  391F               	andlw	31
  9546  124B  1D03               	btfss	3,2
  9547  124C  2A4E               	goto	u4641
  9548  124D  2A4F               	goto	u4640
  9549  124E                     u4641:
  9550  124E  2A43               	goto	l235
  9551  124F                     u4640:
  9552  124F                     l238:
  9553  124F  0008               	return
  9554  1250                     __end_of_I2C_Master_Wait:
  9555                           
  9556                           	psect	text42
  9557  1236                     __ptext42:	
  9558 ;; *************** function _I2C_Master_Init *****************
  9559 ;; Defined at:
  9560 ;;		line 9 in file "I2C_LCD.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;		None
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  1    wreg      void 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9574 ;;      Params:         0       0       0       0       0
  9575 ;;      Locals:         0       0       0       0       0
  9576 ;;      Temps:          0       0       0       0       0
  9577 ;;      Totals:         0       0       0       0       0
  9578 ;;Total ram usage:        0 bytes
  9579 ;; Hardware stack levels used: 1
  9580 ;; Hardware stack levels required when called: 1
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_main
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           
  9589                           ;psect for function _I2C_Master_Init
  9590  1236                     _I2C_Master_Init:
  9591  1236                     l3144:	
  9592                           ;incstack = 0
  9593                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  9594                           
  9595                           
  9596                           ;I2C_LCD.c: 11: SSPCON = 0x28;
  9597  1236  3028               	movlw	40
  9598  1237  1283               	bcf	3,5	;RP0=0, select bank0
  9599  1238  1303               	bcf	3,6	;RP1=0, select bank0
  9600  1239  0094               	movwf	20	;volatile
  9601  123A                     l3146:
  9602                           
  9603                           ;I2C_LCD.c: 12: SSPCON2 = 0x00;
  9604  123A  1683               	bsf	3,5	;RP0=1, select bank1
  9605  123B  1303               	bcf	3,6	;RP1=0, select bank1
  9606  123C  0191               	clrf	17	;volatile
  9607  123D                     l3148:
  9608                           
  9609                           ;I2C_LCD.c: 13: SSPSTAT = 0x00;
  9610  123D  0194               	clrf	20	;volatile
  9611                           
  9612                           ;I2C_LCD.c: 14: SSPADD = ((8000000/4)/100000) - 1;
  9613  123E  3013               	movlw	19
  9614  123F  0093               	movwf	19	;volatile
  9615  1240                     l3150:
  9616                           
  9617                           ;I2C_LCD.c: 15: TRISC3 = 1;
  9618  1240  1587               	bsf	7,3	;volatile
  9619  1241                     l3152:
  9620                           
  9621                           ;I2C_LCD.c: 16: TRISC4 = 1;
  9622  1241  1607               	bsf	7,4	;volatile
  9623  1242                     l232:
  9624  1242  0008               	return
  9625  1243                     __end_of_I2C_Master_Init:
  9626                           
  9627                           	psect	text43
  9628  1250                     __ptext43:	
  9629 ;; *************** function _ISR_sample *****************
  9630 ;; Defined at:
  9631 ;;		line 131 in file "rg_877a.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		None
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9645 ;;      Params:         0       0       0       0       0
  9646 ;;      Locals:         0       0       0       0       0
  9647 ;;      Temps:          2       0       0       0       0
  9648 ;;      Totals:         2       0       0       0       0
  9649 ;;Total ram usage:        2 bytes
  9650 ;; Hardware stack levels used: 1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		Interrupt level 1
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           
  9659                           ;psect for function _ISR_sample
  9660  1250                     _ISR_sample:
  9661  1250                     i1l3518:
  9662                           
  9663                           ;rg_877a.c: 132: if(INTF == 1){
  9664  1250  1C8B               	btfss	11,1	;volatile
  9665  1251  2A53               	goto	u460_21
  9666  1252  2A54               	goto	u460_20
  9667  1253                     u460_21:
  9668  1253  2A59               	goto	i1l130
  9669  1254                     u460_20:
  9670  1254                     i1l3520:
  9671                           
  9672                           ;rg_877a.c: 133: flag = 1;
  9673  1254  1283               	bcf	3,5	;RP0=0, select bank0
  9674  1255  1303               	bcf	3,6	;RP1=0, select bank0
  9675  1256  01E7               	clrf	_flag
  9676  1257  0AE7               	incf	_flag,f
  9677                           
  9678                           ;rg_877a.c: 134: INTF = 0;
  9679  1258  108B               	bcf	11,1	;volatile
  9680  1259                     i1l130:
  9681  1259  0871               	movf	??_ISR_sample+1,w
  9682  125A  008A               	movwf	10
  9683  125B  0E70               	swapf	??_ISR_sample,w
  9684  125C  0083               	movwf	3
  9685  125D  0EFE               	swapf	btemp,f
  9686  125E  0E7E               	swapf	btemp,w
  9687  125F  0009               	retfie
  9688  1260                     __end_of_ISR_sample:
  9689  007E                     btemp	set	126	;btemp
  9690  007E                     wtemp0	set	126
  9691                           
  9692                           	psect	intentry
  9693  0004                     __pintentry:	
  9694                           ;incstack = 0
  9695                           ; Regs used in _ISR_sample: []
  9696                           
  9697  0004                     interrupt_function:
  9698  007E                     saved_w	set	btemp
  9699  0004  00FE               	movwf	btemp
  9700  0005  0E03               	swapf	3,w
  9701  0006  00F0               	movwf	??_ISR_sample
  9702  0007  080A               	movf	10,w
  9703  0008  00F1               	movwf	??_ISR_sample+1
  9704  0009  160A  118A  2A50   	ljmp	_ISR_sample
  9705                           
  9706                           	psect	config
  9707                           
  9708                           ;Config register CONFIG @ 0x2007
  9709                           ;	Oscillator Selection bits
  9710                           ;	FOSC = HS, HS oscillator
  9711                           ;	Watchdog Timer Enable bit
  9712                           ;	WDTE = OFF, WDT disabled
  9713                           ;	Power-up Timer Enable bit
  9714                           ;	PWRTE = ON, PWRT enabled
  9715                           ;	Brown-out Reset Enable bit
  9716                           ;	BOREN = ON, BOR enabled
  9717                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9718                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9719                           ;	Data EEPROM Memory Code Protection bit
  9720                           ;	CPD = ON, Data EEPROM code-protected
  9721                           ;	Flash Program Memory Write Enable bits
  9722                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9723                           ;	In-Circuit Debugger Mode bit
  9724                           ;	DEBUG = 0x1, unprogrammed default
  9725                           ;	Flash Program Memory Code Protection bit
  9726                           ;	CP = OFF, Code protection off
  9727  2007                     	org	8199
  9728  2007  3E72               	dw	15986

Data Sizes:
    Strings     11
    Constant    40
    Data        11
    BSS         36
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     57      78
    BANK1            80      4      29
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(1) Largest target is 2
		 -> status(BANK1[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    LCD_Write_F1@Str	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    button_press	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _main->___fladd
    _main->_display_Time
    _write_x->_reset_eeprom
    _reset_eeprom->_eeprom_write
    _reset->_eeprom_write
    _ftoa->___flge
    _sprintf->___lldiv
    ___llmod->___lldiv
    ___xxtofl->_eeprom_read
    ___flsub->___fladd
    ___flmul->__Umul8_16
    _display_zero_zero->_LCD_Write_Char
    _display_zero_six->_LCD_Write_Char
    _display_twelve_hundred->_LCD_Write_Char
    _display_eighteen_hundred->_LCD_Write_Char
    _display_Time->___awmod
    ___fleq->___fladd
    _Update_Current_Date_Time->_BCD_2_DEC
    _BCD_2_DEC->_I2C_Read
    _BCD_2_DEC->___wmul
    _LCD_Write_F1->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _ISR_sample in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ftoa
    _ftoa->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___flmul->__Umul8_16
    _display_Time->___awdiv
    ___fleq->___fladd
    _Update_Current_Date_Time->_BCD_2_DEC

Critical Paths under _ISR_sample in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_sample in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_sample in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_sample in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   27519
                                              0 BANK1      4     4      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                       _LCD_Write_F1
           _Update_Current_Date_Time
                            ___fladd
                             ___fleq
                            ___fltol
                           ___xxtofl
                       _display_Time
           _display_eighteen_hundred
             _display_twelve_hundred
                   _display_zero_six
                  _display_zero_zero
                        _eeprom_read
                       _eeprom_write
                               _ftoa
                              _reset
                            _write_x
 ---------------------------------------------------------------------------------
 (1) _write_x                                             11    11      0    3338
                                              0 BANK0     11    11      0
                       _eeprom_write
                              _reset
                       _reset_eeprom
 ---------------------------------------------------------------------------------
 (2) _reset_eeprom                                         3     3      0    1058
                                              5 COMMON     3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _reset                                                0     0      0     880
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     880
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                15    10      5   11369
                                             42 BANK0     15    10      5
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             34    25      9    2911
                                             16 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     412
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              4 COMMON     4     0      4
                                              0 BANK0     10    10      0
                        _eeprom_read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                              6 COMMON     2     2      0
                                             31 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2789
                                             12 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2592
                                              2 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3353
                                              5 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _display_zero_zero                                    3     3      0     319
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _display_zero_six                                     3     3      0     319
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _display_twelve_hundred                               3     3      0     319
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _display_eighteen_hundred                             3     3      0     319
                                              8 COMMON     1     1      0
                                              0 BANK0      2     2      0
                     _LCD_Write_Char
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _display_Time                                         5     5      0    2062
                                              9 COMMON     1     1      0
                                              4 BANK0      4     4      0
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___fleq                                              12     4      8     242
                                             12 BANK0     12     4      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_Current_Date_Time                             0     0      0    1966
                          _BCD_2_DEC
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             6     4      2     785
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _BCD_2_DEC                                            4     2      2    1150
                                              8 COMMON     2     0      2
                                              0 BANK0      2     2      0
                           _I2C_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_F1                                         4     4      0     355
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       2     1      1     704
                                              8 COMMON     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     282
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     127
                                              4 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_sample                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_Char
     _LCD_Write_4Bit
   _LCD_Write_F1
     _LCD_Write_Char
   _Update_Current_Date_Time
     _BCD_2_DEC
       _I2C_Read (ARG)
         _I2C_Master_Wait
       ___wmul (ARG)
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _I2C_Read
   ___fladd
   ___fleq
     ___fladd (ARG)
     ___xxtofl (ARG)
       _eeprom_read (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
   ___xxtofl
   _display_Time
     _LCD_Write_Char
     ___awdiv
     ___awmod
   _display_eighteen_hundred
     _LCD_Write_Char
     _eeprom_read
   _display_twelve_hundred
     _LCD_Write_Char
     _eeprom_read
   _display_zero_six
     _LCD_Write_Char
     _eeprom_read
   _display_zero_zero
     _LCD_Write_Char
     _eeprom_read
   _eeprom_read
   _eeprom_write
   _ftoa
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _reset
     _eeprom_write
   _write_x
     _eeprom_write
     _reset
     _reset_eeprom
       _eeprom_write

 _ISR_sample (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      1D       7       36.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      77      12        0.0%
ABS                  0      0      77       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 12 21:54:13 2022

                                pc 0002                                 l75 1393  
                               l84 0BAF                                 _RS 0061  
                     ___awdiv@sign 0021                                 _rr 005D  
                               fsr 0004                ___wmul@multiplicand 0074  
              __Umul8_16@word_mpld 0022                      ?_display_Time 0070  
                              l133 07EE                                l303 146E  
                              l143 14AC                                l232 1242  
                              l241 1221                                l153 156A  
                              l138 14EA                                l235 1243  
                              l411 1273                                l148 152A  
                              l413 1288                                l238 124F  
                              l430 1415                                l158 13E6  
                              l247 122A                                l271 08A1  
                              l431 1415                                l167 15B3  
                              l256 07F9                                l280 12BE  
                              l441 1329                                l177 075D  
                              l258 07FD                                l274 12DB  
                              l610 15D2                                l434 142F  
                              l259 07FE                                l283 12F8  
                              l443 1341                                l611 15EE  
                              l187 075D                                l268 1413  
                              l612 1603                                l277 12A2  
                              l437 1440                                l294 136A  
                              l607 16B2                                l615 08C0  
                              l623 1235                                l618 092C  
                              l634 17EA                                l619 0945  
                              l627 17FF                                l740 0482  
                              l637 17FF                                l477 171A  
                              l830 03A0                                l734 0404  
                              l663 1659                                l594 1783  
                              l842 0394                                l738 04AB  
                              l851 13BC                                l755 0576  
                              l747 0628                                l923 0E7E  
                              l836 030C                                l780 131C  
                              l765 05BC                                l950 1271  
                              l934 0F46                                l926 0E9C  
                              l759 059A                                l776 061C  
                              l768 05FA                                l880 09AF  
                              l849 13AA                                l777 0628  
                              l945 0FFF                                l874 096A  
                              l876 0A01                                l887 09CB  
                              l888 09D7                                l897 0AD6  
                              _GIE 005F                                _RB1 0031  
                              _RD0 0040                                _PEN 048A  
                              _SEN 0488                                _min 006A  
                              _sec 005F                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0078  
                     ___flmul@aexp 0033                       ___flmul@bexp 0038  
                     ___flmul@sign 0032                       ___flmul@temp 003D  
                     ___flmul@prod 0039                    __end_of_LCD_CMD 12BF  
                   _LCD_Set_Cursor 1441                       ___fltol@exp1 0077  
                             l4000 0EA0                               l2410 03A1  
                             l4010 0ECB                               l4002 0EAE  
                             l2330 1427                               l2500 0495  
                             l2420 03B8                               l2412 03A8  
                             l4020 0EDB                               l4012 0ED3  
                             l4004 0EB3                               l2340 1438  
                             l2332 142A                               l3150 1240  
                             l2510 04B4                               l2502 0496  
                             l2430 03D0                               l2422 03BD  
                             l2414 03AE                               l4030 0F2E  
                             l4014 0ED9                               l4006 0EC1  
                             l2342 1439                               l2334 142E  
                             l2326 141B                               l4110 0668  
                             l3152 1241                               l3144 1236  
                             l4200 1463                               l2360 1337  
                             l2352 131D                               l2600 0623  
                             l2520 04DC                               l2504 049F  
                             l2440 03E6                               l2432 03D5  
                             l2424 03C5                               l2416 03B2  
                             l4040 0F69                               l4032 0F3D  
                             l4024 0F12                               l4008 0EC5  
                             l2344 143F                               l2336 1433  
                             l2328 1421                               l4120 068F  
                             l4112 0676                               l4104 0640  
                             l3146 123A                               l2362 133D  
                             l2354 131F                               l3410 1602  
                             l3402 15B4                               l4210 07A0  
                             l4202 075E                               l2602 0627  
                             l2530 04F5                               l2522 04E5  
                             l2514 04BD                               l2506 04A3  
                             l2450 03FA                               l2442 03E7  
                             l2434 03DB                               l2426 03C6  
                             l2418 03B3                               l4050 0FD7  
                             l4042 0F70                               l4034 0F53  
                             l4026 0F1C                               l2338 1437  
                             l4130 06AC                               l4106 0653  
                             l4114 067C                               l3148 123D  
                             l2356 1323                               l3404 15CA  
                             l4220 07DC                               l4212 07B3  
                             l4204 0770                               l4300 152B  
                             l2540 0559                               l2524 04E7  
                             l2516 04D4                               l2508 04AF  
                             l2532 04FA                               l2460 0416  
                             l2444 03EC                               l2452 03FC  
                             l2436 03DC                               l2428 03C8  
                             l2620 1262                               l4044 0F74  
                             l4052 0FDB                               l4036 0F5F  
                             l4028 0F27                               l4140 06C7  
                             l4116 0683                               l4108 065B  
                             l4070 0821                               l2358 1330  
                             l3406 15E6                               l4222 07E5  
                             l4214 07C6                               l4206 077A  
                             l4310 1555                               l4302 153D  
                             l2550 058C                               l2534 0510  
                             l2542 0568                               l2526 04EB  
                             l2518 04D8                               l2470 042A  
                             l2462 041A                               l2454 040A  
                             l2446 03F1                               l2438 03E2  
                             l2622 1268                               l4046 0F81  
                             l4038 0F63                               l4054 0FE9  
                             l4230 0A2A                               l4150 06E2  
                             l4142 06CD                               l4126 0691  
                             l4118 0689                               l4080 085C  
                             l4072 082F                               l4064 0AD7  
                             l3408 1600                               l4216 07CD  
                             l4208 078D                               l4312 155D  
                             l2800 122B                               l2560 05A3  
                             l2552 0595                               l2544 057E  
                             l2536 054E                               l2528 04EC  
                             l2480 043E                               l2472 042E  
                             l2464 041E                               l2456 040E  
                             l2448 03F9                               l3600 16B3  
                             l2624 126E                               l4048 0FD0  
                             l4056 0FFB                               l4240 0ABB  
                             l4232 0A2E                               l4224 0A02  
                             l4160 06FF                               l4152 06EA  
                             l4128 06A4                               l4136 06BA  
                             l4400 0D5A                               l4320 0BB5  
                             l4090 0892                               l4082 0865  
                             l4074 0838                               l4066 0817  
                             l4218 07D6                               l2802 1233  
                             l2570 05B3                               l2562 05A8  
                             l2554 0599                               l2546 0583  
                             l2538 0554                               l2490 044F  
                             l2482 0442                               l2474 0432  
                             l2466 0422                               l2458 0412  
                             l3610 16E2                               l3602 16C5  
                             l2626 1270                               l2618 1261  
                             l4242 0AD5                               l4234 0A45  
                             l4226 0A08                               l2650 13BD  
                             l4170 070D                               l4162 0705  
                             l4138 06C1                               l4410 0D90  
                             l4402 0D66                               l4330 0BBE  
                             l4322 0BB8                               l4084 0874  
                             l4076 0847                               l4068 081B  
                             l4252 1347                               l3700 1729  
                             l4260 14BF                               l4308 1541  
                             l2804 1235                               l2580 05D4  
                             l2572 05B9                               l2556 059E  
                             l2564 05AA                               l2492 0466  
                             l2484 0446                               l2476 0436  
                             l2468 0426                               l3612 16F4  
                             l3604 16C8                               l3620 1712  
                             l4236 0A5E                               l4228 0A21  
                             l2660 13DF                               l2652 13C5  
                             l4172 0720                               l4164 070B  
                             l4180 0736                               l4148 06CF  
                             l4092 0629                               l4412 0D9F  
                             l4404 0D75                               l4340 0BD2  
                             l4332 0BBF                               l4324 0BBB  
                             l4316 0BB0                               l4086 087A  
                             l4078 084D                               l4190 1442  
                             l4254 1355                               l4246 1345  
                             l3710 173E                               l3702 172D  
                             l2750 1666                               l2742 165A  
                             l4270 14DD                               l2590 060C  
                             l2582 05D8                               l2558 05A1  
                             l2566 05AE                               l2494 0486  
                             l2486 044A                               l2478 043A  
                             l3614 1702                               l3606 16D5  
                             l3630 161E                               l4238 0A8D  
                             l2654 13CC                               l2670 156B  
                             l4182 073D                               l4174 0728  
                             l4158 06F8                               l4094 0632  
                             l4414 0DA5                               l4406 0D7B  
                             l4350 0BE5                               l4342 0BD7  
                             l4334 0BC2                               l4326 0BBC  
                             l4318 0BB4                               l4088 0889  
                             l4192 1443                               l4256 135D  
                             l3720 1761                               l3712 1741  
                             l3704 1732                               l2760 167F  
                             l2752 166A                               l2744 165B  
                             l4280 1485                               l4272 146F  
                             l3800 0083                               l2592 0611  
                             l2584 05F6                               l2576 05C1  
                             l2568 05AF                               l2496 048F  
                             l2488 044E                               l3616 1703  
                             l3608 16D9                               l3632 1622  
                             l3640 1651                               l3624 1604  
                             l2656 13D5                               l2680 157D  
                             l4184 0743                               l4096 0638  
                             l4408 0D8A                               l4416 0DAA  
                             l4360 0C60                               l4352 0BEC  
                             l4344 0BDB                               l4336 0BC7  
                             l4328 0BBD                               l4194 144B  
                             l3730 177A                               l3722 1767  
                             l3714 1748                               l3706 1736  
                             l2770 169E                               l2762 1683  
                             l2754 166F                               l2746 165F  
                             l4282 1497                               l4274 1481  
                             l4266 14C3                               l4258 14AD  
                             l3650 13A4                               l3810 009F  
                             l3802 0088                               l2594 0612  
                             l2586 05FF                               l2578 05C6  
                             l2498 0491                               l3618 170C  
                             l3634 1634                               l3626 160E  
                             l2658 13DD                               l2690 15A6  
                             l2682 1584                               l4186 0749  
                             l4098 063E                               l4370 0C92  
                             l4362 0C63                               l4354 0BED  
                             l4346 0BDC                               l4338 0BCD  
                             l3580 1219                               l4196 1453  
                             l3732 177F                               l3724 1768  
                             l3716 174C                               l3708 1738  
                             l2764 1687                               l2756 1675  
                             l2772 16A4                               l2748 1664  
                             l4284 149F                               l4268 14D5  
                             l2780 08A2                               l3652 13B3  
                             l3644 1397                               l3900 037A  
                             l3820 00CA                               l3812 00A4  
                             l3804 0090                               l2596 0616  
                             l2588 0604                               l2844 12F9  
                             l3636 1642                               l3628 1611  
                             l2684 158B                               l2676 156F  
                             l4188 0757                               l4380 0CCD  
                             l4372 0C97                               l4364 0C71  
                             l4356 0C0C                               l4348 0BE0  
                             l3582 121E                               l3590 1227  
                             l4198 145B                               l3670 1402  
                             l3662 13E7                               l3726 176F  
                             l3718 1750                               l2774 16A9  
                             l2766 1691                               l2758 1678  
                             l4294 1501                               l4286 14EB  
                             l2790 0904                               l2782 08B8  
                             l3654 13B8                               l3646 1399  
                             l3902 0388                               l3830 0167  
                             l3822 00E7                               l3806 0092  
                             l2598 0618                               l2846 12FD  
                             l3750 17BA                               l3742 179A  
                             l3638 164B                               l2686 1596  
                             l2678 1576                               l4390 0D10  
                             l4382 0CDA                               l4374 0CA5  
                             l4366 0C7F                               l4358 0C1F  
                             l3576 1243                               l3584 07F0  
                             l3592 12C0                               l3672 140E  
                             l3664 13EC                               l3728 1775  
                             l2776 16AE                               l2768 1697  
                             l4296 1515                               l4288 14FD  
                             l2792 0908                               l2784 08D4  
                             l3648 13A0                               l3904 038C  
                             l3840 01CA                               l3832 0170  
                             l3824 0103                               l3816 00AD  
                             l3808 009A                               l3752 17BE  
                             l3760 17D8                               l3744 17AF  
                             l3736 1784                               l3920 0972  
                             l3912 0949                               l2688 15A0  
                             l4392 0D2C                               l4384 0CE7  
                             l4376 0CA8                               l4368 0C86  
                             l3578 1249                               l3586 07F5  
                             l3594 128A                               l3690 12AE  
                             l3682 12DD                               l3658 136B  
                             l3674 140F                               l3666 13F4  
                             l4298 151D                               l2794 0942  
                             l2786 08DC                               l3906 038D  
                             l3850 026A                               l3842 01E3  
                             l3834 0180                               l3826 012F  
                             l3818 00BD                               l3770 17F4  
                             l3746 17B0                               l3738 1791  
                             l3930 0994                               l3914 094E  
                             l4394 0D40                               l4386 0CEC  
                             l4378 0CA9                               l3588 1222  
                             l3596 1290                               l3684 12E1  
                             l3668 13FD                               l3692 171B  
                             l2796 0944                               l2788 08E0  
                             l3908 0398                               l3860 02D8  
                             l3852 0290                               l3844 0200  
                             l3836 019D                               l3828 014B  
                             l3780 0052                               l3772 0040  
                             l3748 17B8                               l3940 09C5  
                             l3932 0998                               l3924 097B  
                             l3916 0952                               l4396 0D48  
                             l4388 0CF1                               l3598 1297  
                             l3686 12A4                               l3694 171E  
                             l3678 127A                               l3870 02F0  
                             l3862 02DC                               l3854 02B8  
                             l3846 022D                               l3838 01AD  
                             l3790 006E                               l3782 0057  
                             l3774 0047                               l3766 17DF  
                             l3758 17C6                               l3950 09F8  
                             l3942 09CF                               l3934 09A6  
                             l3926 0980                               l3918 0962  
                             l4398 0D54                               l3688 12A7  
                             l3696 1722                               l3880 0311  
                             l3872 02F1                               l3864 02DD  
                             l3856 02C1                               l3848 023D  
                             l3792 0073                               l3784 005C  
                             l3776 004D                               l3768 17EF  
                             l3952 09F9                               l3944 09D9  
                             l3936 09B6                               l3928 098D  
                             l3960 0DCA                               l3698 1727  
                             l3882 0316                               l3890 0347  
                             l3874 02F5                               l3866 02E6  
                             l3858 02CF                               l3794 0079  
                             l3786 0064                               l3778 0051  
                             l3946 09EF                               l3938 09C1  
                             l3970 0DED                               l3962 0DD1  
                             l3892 0354                               l3884 0324  
                             l3876 0309                               l3868 02EC  
                             l3796 007D                               l3788 0066  
                             l3948 09F4                               l3980 0E37  
                             l3972 0E02                               l3964 0DD6  
                             l3956 0DBF                               l3894 035F  
                             l3886 0328                               l3798 007E  
                             l3990 0E6A                               l3982 0E3B  
                             l3974 0E15                               l3966 0DD9  
                             l3958 0DC4                               l3896 036E  
                             l3888 0341                               l3984 0E3E  
                             l3992 0E7B                               l3976 0E19  
                             l3968 0DE9                               l3898 0378  
                             l3994 0E80                               l3986 0E53  
                             l3978 0E29                               l3988 0E66  
                             l3998 0E85                               STR_1 102E  
                             u3000 0627                               u3001 0626  
                             u3110 1576                               u3111 1575  
                             u3040 1268                               u3120 157D  
                             u3041 1267                               u3121 157C  
                             u2410 133D                               u3050 126E  
                             u3130 1584                               u2411 133C  
                             u3051 126D                               u3131 1583  
                             u3140 158B                               u2405 1331  
                             u3141 158A                               u3310 1687  
                             u2350 141B                               u3150 15B3  
                             u3311 1686                               u2351 141A  
                             u3151 15B2                               u3320 1691  
                             u3400 0908                               u2600 03EC  
                             u5000 17C5                               u2360 142E  
                             u3080 13CC                               u3321 1690  
                             u3305 1679                               u3401 0907  
                             u2601 03EB                               u5001 17C4  
                             u2361 142D                               u3081 13CB  
                             u2610 03F1                               u2370 143F  
                             u3411 0917                               u2611 03F0  
                             u2371 143E                               u3155 15AF  
                             u2380 1323                               u3340 16A4  
                             u3420 0942                               u3412 0918  
                             u5100 007D                               u2700 04AB  
                             u2620 040A                               u5020 17D7  
                             u2381 1322                               u3341 16A3  
                             u3325 168D                               u3421 0941  
                             u3413 091D                               u5101 007C  
                             u2701 04AA                               u2621 0409  
                             u5021 17D6                               u3350 16A9  
                             u3270 165F                               u3414 091E  
                             u5110 0083                               u3430 1233  
                             u2710 04AF                               u2630 040E  
                             u2550 03B2                               u5030 17DE  
                             u3351 16A8                               u3335 1698  
                             u3271 165E                               u3415 0923  
                             u5111 0082                               u3431 1232  
                             u2711 04AE                               u2631 040D  
                             u2551 03B1                               u5031 17DD  
                             u5015 17C7                               u3280 166A  
                             u6000 152A                               u3416 0924  
                             u3360 08B8                               u5120 0088  
                             u2800 053B                               u2720 04B4  
                             u2640 0466                               u2560 03B8  
                             u3281 1669                               u6001 1529  
                             u3425 093E                               u3361 08B7  
                             u5201 018F                               u5121 0087  
                             u2801 053C                               u2721 04B3  
                             u2641 0465                               u2561 03B7  
                             u3290 1675                               u6010 156A  
                             u3370 08D4                               u5202 0196  
                             u5130 009F                               u2810 0559  
                             u2802 0541                               u2650 046F  
                             u2570 03BD                               u5050 17EF  
                             u2395 132A                               u3291 1674  
                             u6011 1569                               u3371 08D3  
                             u5211 01BC                               u5203 019D  
                             u5131 009E                               u2811 0558  
                             u2803 0542                               u2731 04C6  
                             u2651 046D                               u2571 03BC  
                             u5051 17EE                               u4500 15E6  
                             u3380 08E0                               u5212 01C3  
                             u5140 00A4                               u2900 05B9  
                             u2820 057E                               u2740 04D8  
                             u2732 04CD                               u2660 0470  
                             u2580 03DB                               u5060 17F4  
                             u6020 0BE0                               u4501 15E5  
                             u6005 1526                               u3381 08DF  
                             u5213 01CA                               u5141 00A3  
                             u2901 05B8                               u2821 057D  
                             u2741 04D7                               u2733 04D4  
                             u2645 0462                               u2581 03DA  
                             u5061 17F3                               u5045 17E1  
                             u6021 0BDF                               u4510 1600  
                             u5070 0051                               u2910 05C0  
                             u2830 0583                               u2750 04DC  
                             u2670 0486                               u2590 03E6  
                             u6030 0BEC                               u4511 15FF  
                             u6015 1566                               u3391 08EF  
                             u5231 01F2                               u5151 00F5  
                             u5071 0050                               u2911 05BF  
                             u2831 0582                               u2751 04DB  
                             u2671 0485                               u2591 03E5  
                             u6031 0BEB                               u3392 08F0  
                             u5400 0337                               u5320 02DC  
                             u5232 01F9                               u5152 00FC  
                             u5080 0057                               u2920 05C6  
                             u2760 04EB                               u2680 0495  
                             u6040 0C60                               u3393 08F5  
                             u5321 02DB                               u5305 02BA  
                             u5241 021F                               u5233 0200  
                             u5225 01CC                               u5161 0111  
                             u5153 0103                               u5081 0056  
                             u2921 05C5                               u2761 04EA  
                             u2681 0494                               u6041 0C5F  
                             u3394 08F6                               u5410 0354  
                             u5242 0226                               u5162 0118  
                             u5090 005C                               u2930 05D8  
                             u2850 0599                               u6050 0CEC  
                             u4515 15FC                               u3395 08FB  
                             u5411 0353                               u5315 02D1  
                             u5251 024C                               u5243 022D  
                             u5171 013D                               u5163 011F  
                             u5091 005B                               u2931 05D7  
                             u2851 0598                               u6051 0CEB  
                             _PEIE 005E                               u3396 08FC  
                             u5420 036E                               u5340 02F0  
                             u5260 0276                               u5252 0253  
                             u5172 0144                               u2940 05E7  
                             u2860 059E                               u2780 0510  
                             u5500 09B5                               u4700 16F4  
                             u6060 0CF1                               u5421 036D  
                             u5405 0332                               u5341 02EF  
                             u5253 025A                               u5181 0159  
                             u5173 014B                               u2861 059D  
                             u2845 058E                               u2781 050F  
                             u5501 09B4                               u4701 16F3  
                             u6061 0CF0                               _INTE 005C  
                             u4630 1249                               u5430 038C  
                             u5350 02F5                               u5182 0160  
                             u2950 05F6                               u2870 05A8  
                             u6070 0D75                               _INTF 0059  
                             u4631 1248                               u6207 0860  
                             u5431 038B                               u5415 0350  
                             u5351 02F4                               u5335 02DF  
                             u5271 0282                               u5183 0167  
                             u2951 05F5                               u2871 05A7  
                             u2791 0527                               u2783 050C  
                             u2775 04EE                               u2695 0498  
                             u6071 0D74                               u6127 0C9F  
                             u4640 124F                               u5360 0309  
                             u5280 029E                               u5272 0289  
                             u2960 05FF                               u2880 05AE  
                             u2792 0528                               u5520 09C5  
                             u5440 094E                               u4720 1712  
                             u5600 0E29                               u6080 0D8A  
                             u4641 124E                               u6217 086F  
                             u5425 036A                               u5361 0308  
                             u5273 0290                               u5265 0271  
                             u2961 05FE                               u2945 05E2  
                             u2881 05AD                               u2793 052D  
                             u5521 09C4                               u5441 094D  
                             u4721 1711                               u4705 16F0  
                             u5601 0E28                               u6137 0DB2  
                             u6081 0D89                               u4650 07FD  
                             u4490 15CA                               u4810 13B8  
                             u5370 0310                               u2970 0604  
                             u2890 05B3                               u2794 052E  
                             u5530 09CB                               u5450 0952  
                             u4730 160E                               u5610 0E37  
                             u6090 0D9F                               u4651 07FC  
                             u6227 087E                               u4491 15C9  
                             u4811 13B7                               u5371 030F  
                             u5291 02AA                               u5195 0169  
                             u2971 0603                               u2891 05B2  
                             u2795 0533                               u5531 09CA  
                             u5515 09BA                               u5451 0951  
                             u4715 1704                               u4731 160D  
                             u5611 0E36                               u6147 0670  
                             u6091 0D9E                               u6075 0D71  
                             u4820 140B                               u5380 0316  
                             u5292 02B1                               u2980 0611  
                             u2796 0534                               u5540 09CF  
                             u5460 0972                               u4660 16C5  
                             u5700 0F3D                               u5620 0E7A  
                             _RCEN 048B                               u6237 088D  
                             u4821 1407                               u4805 13AB  
                             u5381 0315                               u5293 02B8  
                             u5285 0299                               u2981 0610  
                             u5541 09CE                               u5461 0971  
                             u4661 16C4                               u5701 0F3C  
                             u5621 0E79                               u6157 0751  
                             u6085 0D86                               u4910 1750  
                             u5390 0328                               u2990 0616  
                             u5550 09E4                               u4750 1622  
                             u5710 0F53                               u5630 0EA0  
                             u6247 089C                               u6167 0825  
                             u4911 174F                               u5391 0327  
                             u2991 0615                               u4751 1621  
                             u5711 0F52                               u5631 0E9F  
                             u6095 0D9B                               u4840 127A  
                             u5560 09F4                               u5480 0993  
                             u4680 16D9                               u4760 1634  
                             u5720 0F69                               u5640 0ECB  
                             u5800 0668                               u6257 12A0  
                             u6177 0833                               u4905 1742  
                             u4841 1279                               u5561 09F3  
                             u5481 0992                               u4681 16D8  
                             u4761 1633                               u4745 1613  
                             u5721 0F68                               u5705 0F39  
                             u5641 0ECA                               u5801 0667  
                             u4834 140E                               u4930 1761  
                             u5570 09F8                               u5730 0F80  
                             u5650 0ED3                               u5810 0683  
                             u6187 0842                               u4931 1760  
                             u5571 09F7                               u5555 09DF  
                             u5475 0985                               u4675 16CA  
                             u5731 0F7F                               u5715 0F4F  
                             u5651 0ED2                               u5811 0682  
                             u4780 1651                               u5580 0DCA  
                             u5900 0705                               u5820 0689  
                             u6197 0851                               u4925 1751  
                             u4781 1650                               u4765 1630  
                             u5581 0DC9                               u5901 0704  
                             u5821 0688                               u5805 0664  
                             u4950 1775                               u4870 1722  
                             u4790 13A4                               u5750 0FE9  
                             u5670 0F11                               u5590 0DE9  
                             u5910 070B                               u5830 068F  
                             u4855 12EB                               u4951 1774  
                             u4935 175D                               u4871 1721  
                             u4791 13A3                               u5495 09A7  
                             u4695 16DB                               u4775 1643  
                             u5751 0FE8                               u5671 0F10  
                             u5591 0DE8                               u5911 070A  
                             u5831 068E                               u4960 177A  
                             u4880 172D                               u5760 0FFB  
                             u5680 0F1C                               u5920 0735  
                             u5840 06B9                               u4865 12B1  
                             u4961 1779                               u4945 1769  
                             u4881 172C                               u5761 0FFA  
                             u5745 0F8C                               u5681 0F1B  
                             u5665 0EDE                               u5921 0734  
                             u5841 06B8                               u4890 173E  
                             u4970 1791                               u5690 0F27  
                             u5930 073D                               u5850 06C1  
                             u5770 0632                               u4891 173D  
                             u4971 1790                               u5691 0F26  
                             u5675 0F0D                               u5931 073C  
                             u5851 06C0                               u5771 0631  
                             u4980 17A8                               u5940 0743  
                             u5860 06C7                               u5780 0638  
                             u5941 0742                               u5925 0731  
                             u5861 06C6                               u5845 06B5  
                             u5781 0637                               u4990 17BE  
                             u5950 0749                               u5870 06CD  
                             u5790 063E                               u4991 17BD  
                             u5695 0F23                               u5951 0748  
                             u5871 06CC                               u5791 063D  
                             u5960 0A21                               u5880 06F7  
                             u4985 17A3                               u5961 0A20  
                             u5881 06F6                               u5970 136A  
                             u5890 06FF                               u5971 1369  
                             u5891 06FE                               u5980 14EA  
                             u5981 14E9                               u5885 06F3  
                             u5990 14AC                               u5975 1366  
                             u5991 14AB                               u5985 14E6  
                             u5995 14A8                               _RSEN 0489  
                   ??_eeprom_write 0073                               _date 00B7  
                             _flag 0067                               _main 0BB0  
                             _ftoa 0A02                               _hour 0068  
                 __end_of_I2C_Read 1414                               _year 00B3  
                             btemp 007E                               start 000C  
                    ?_LCD_Write_F1 0070               LCD_Write_4Bit@Nibble 0075  
               display_Time@hour_0 0026                 display_Time@hour_1 0027  
                 __end_of_LCD_Init 08A2                   ?_I2C_Master_Init 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                   ??_display_Time 0079                      ___fltol@sign1 0076  
                  __end_of___fladd 0629                              ?_main 0070  
                            _ACKEN 048C                              ?_ftoa 004A  
                            _ACKDT 048D                    __end_of___awdiv 1784  
                  __end_of___flneg 1236                              _EEADR 010D  
                  __end_of___awmod 16B3                    __end_of___flmul 03A1  
                  __end_of___flsub 131D                    __end_of___fltol 1800  
                  __end_of___lldiv 171B                    ___awdiv@divisor 0072  
                  __end_of___llmod 165A                              i1l130 1259  
                  ___awdiv@counter 0020                              _PORTD 0008  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIF 0063                        ?_ISR_sample 0070  
           __end_of_LCD_Set_Cursor 146F                              _nRBPU 040F  
                __end_of_BCD_2_DEC 1394                              _flag1 0066  
                            _flag2 0065                    __end_of_dpowers 102E  
                  __end_of_isdigit 1272                              _month 00B5  
                            _reset 13BD                              ftoa@f 004A  
                            ftoa@l 0054                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 1000           __end_of_display_zero_six 14EB  
                  __end_of_write_x 075E                     ??_LCD_Write_F1 0078  
                   _LCD_Write_4Bit 1289                     _LCD_Write_Char 12DC  
                  __initialization 000F         ??_display_eighteen_hundred 0078  
                     __end_of_main 0DBC                       __end_of_ftoa 0AD7  
                _IO_Expander_Write 12BF                 ?_IO_Expander_Write 0070  
                           ??_main 00B9                             ??_ftoa 004F  
                        ??_LCD_CMD 0076                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                ??_IO_Expander_Write 0073  
                  ?_LCD_Set_Cursor 0078                 ??_I2C_Master_Start 0072  
               ??_I2C_Master_Write 0072                   ___llmod@dividend 002A  
                           _EEDATA 010C                             _EECON1 018C  
                           _EECON2 018D                             ?_reset 0070  
                 ___awdiv@dividend 0074                             i1l3520 1254  
                           i1l3518 1250                             u460_20 1254  
                           u460_21 1253                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
           __end_of_LCD_Write_4Bit 12A3                   __end_of___xxtofl 0A02  
           __end_of_LCD_Write_Char 12F9               __size_of_eeprom_read 0017  
        __end_of_IO_Expander_Write 12DC                             ___flge 08A2  
                           ___fleq 15B4                __size_of_ISR_sample 0010  
                        ??___fladd 0020                             ___wmul 131D  
                        ??___awdiv 0076                          ??___flneg 0076  
                        ??___awmod 0076                          ??___flmul 002D  
                        ??___flsub 007A                          ??___fltol 0043  
                        ??___lldiv 0020                          ??___llmod 002E  
                 ___awdiv@quotient 0022            ?_display_twelve_hundred 0070  
                  ___awmod@divisor 0072               __end_of_eeprom_write 1441  
                  ___awmod@counter 0077   __end_of_Update_Current_Date_Time 0BB0  
                           _status 00B1                             ftoa@cp 0058  
                        ??_isdigit 0072                          ?_I2C_Read 0072  
               __size_of__Umul8_16 0029                             saved_w 007E  
                        ??_sprintf 0039                          ??_write_x 0020  
                       ___flge@ff1 0072                         ___flge@ff2 0076  
                     ___xxtofl@arg 0026                       ___xxtofl@exp 0025  
                     ___xxtofl@val 0074                         ___fleq@ff1 002C  
                       ___fleq@ff2 0030            __end_of__initialization 003C  
                        ?_LCD_Init 0070               __end_of_display_Time 07EF  
                       ___flneg@f1 0072                    eeprom_read@addr 0073  
                  ?_LCD_Write_4Bit 0070                         ___fltol@f1 003F  
                  ?_LCD_Write_Char 0070                     __pcstackCOMMON 0070  
                     __pidataBANK0 1206                       __pidataBANK1 120B  
   __end_of_display_twelve_hundred 14AD                      __end_of_reset 13E7  
                       ??_I2C_Read 0074               __end_of_LCD_Write_F1 136B  
                eeprom_write@value 0072                            ??_reset 0075  
                     sprintf@width 0045                         __pbssBANK0 0059  
                       __pbssBANK1 00A0                         ??_LCD_Init 0078  
                __end_of__Umul8_16 13BD   __end_of_display_eighteen_hundred 152B  
       __size_of_IO_Expander_Write 001D                         __pmaintext 0BB0  
                          ?___flge 0072                            ?___fleq 002C  
                          ?___wmul 0072                         __pintentry 0004  
                          _ACKSTAT 048E                            _LCD_CMD 12A3  
                 I2C_Read@incoming 0076                          ?___xxtofl 0074  
                     ??_ISR_sample 0070           _Update_Current_Date_Time 0AD7  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 1000                          _BCD_2_DEC 136B  
                    ?_reset_eeprom 0070                            _i2c_add 006D  
        display_eighteen_hundred@i 0020                  ?_display_zero_six 0070  
                    LCD_Write_F1@i 0021                 ??_display_zero_six 0078  
          display_twelve_hundred@i 0020              __size_of_eeprom_write 002D  
                  __size_of___flge 00A4                    __size_of___fleq 0050  
                          ___fladd 03A1                            ___awdiv 171B  
                          ___flneg 122B                            ___awmod 165A  
                          ___flmul 0040                 __end_of_ISR_sample 1260  
                          ___flsub 12F9                            ___fltol 1784  
                          ___lldiv 16B3                    __size_of___wmul 0025  
                          ___llmod 1604                   ??_LCD_Set_Cursor 0079  
                          __ptext1 0629                            __ptext2 156B  
                          __ptext3 13BD                            __ptext4 1414  
                          __ptext5 0A02                            __ptext6 0DBC  
                          __ptext7 1260                            __ptext8 1604  
                          __ptext9 16B3                            _dpowers 1006  
                          _isdigit 1260                         ??___xxtofl 0020  
                 ___awmod@dividend 0074           __size_of_I2C_Master_Init 000D  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
            __size_of_display_Time 0091                            _sprintf 0DBC  
                          clrloop0 1212               end_of_initialization 003C  
                          _write_x 0629                   _eighteen_hundred 0063  
                          ftoa@buf 00A0                            ftoa@rem 0050  
                       ?_BCD_2_DEC 0078                     ??_reset_eeprom 0075  
                     _eeprom_write 1414          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 0010                    ___lldiv@divisor 0072  
                  ___lldiv@counter 0025              __size_of_LCD_Write_F1 0029  
                     _display_Time 075E                         LCD_CMD@CMD 0077  
                      ___fladd@grs 002B                      ___xxtofl@sign 0024  
__size_of_display_eighteen_hundred 0040          ?_display_eighteen_hundred 0070  
                __size_of_I2C_Read 002D                   ??_LCD_Write_4Bit 0074  
                 ??_LCD_Write_Char 0076                       write_x@i_181 0025  
                     write_x@i_182 0027                       write_x@i_183 0029  
                      ___flmul@grs 0034                      ??_eeprom_read 0072  
                __size_of_LCD_Init 008E                       _LCD_Write_F1 1342  
                display_Time@min_0 0024                  display_Time@min_1 0025  
              BCD_2_DEC@to_convert 0078                     __end_of___flge 0946  
                   __end_of___fleq 1604                     __end_of___wmul 1342  
              start_initialization 000F                         ftoa@status 004E  
                      ??_BCD_2_DEC 0020                  ??_I2C_Master_Init 0072  
                ??_I2C_Master_Wait 0072                  ??_I2C_Master_Stop 0072  
                  ___llmod@divisor 0026                    ___llmod@counter 002F  
                  LCD_Write_F1@Str 0020                     _twelve_hundred 007A  
                         ??___flge 0020                           ??___fleq 0034  
                         ??___wmul 0076                __end_of_eeprom_read 1289  
                       init_fetch0 0801                          __Umul8_16 1394  
                      __pdataBANK0 0068                        __pdataBANK1 00B3  
       ??_Update_Current_Date_Time 007A               __end_of_reset_eeprom 15B4  
                        ___fladd@a 0076                          ___fladd@b 0072  
                         ?_LCD_CMD 0070                          ___flmul@a 0029  
                        ___flmul@b 0025                        __pbssCOMMON 007A  
                        ___flsub@a 002C                          ___flsub@b 0030  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00B9                  __size_of___xxtofl 00BC  
                 eeprom_write@addr 0074                        sprintf@flag 003E  
                      sprintf@prec 0047                          __pnvBANK0 006D  
                 _I2C_Master_Start 1219                   _I2C_Master_Write 07EF  
                     _button_press 0064              IO_Expander_Write@Data 0073  
                      I2C_Read@ack 0072                           ?___fladd 0072  
                         ?___awdiv 0072                           ?___flneg 0072  
                         ?___awmod 0072                           ?___flmul 0025  
                         ?___flsub 002C                           ?___fltol 003F  
                         ?___lldiv 0072                           ?___llmod 0026  
                       ?__Umul8_16 0072               I2C_Master_Write@data 0072  
                        __pstrings 1000                          _btn_press 0059  
        __size_of_display_zero_six 003E                           ?_isdigit 0070  
                         _I2C_Read 13E7                      reset_eeprom@i 0076  
                         ?_sprintf 0030                     __size_of_reset 002A  
                         ?_write_x 0070                  interrupt_function 0004  
                         _LCD_Init 0814                     ___wmul@product 0076  
                        clear_ram0 1211                        _eeprom_read 1272  
         ??_display_twelve_hundred 0078                        __stringbase 1005  
                ___wmul@multiplier 0072                 display_zero_zero@i 0020  
                 __size_of_LCD_CMD 001C                          _zero_zero 0062  
                _display_zero_zero 152B                 ?_display_zero_zero 0070  
                       _EECON1bits 018C                ??_display_zero_zero 0078  
            __size_of_reset_eeprom 0049                        ??__Umul8_16 0074  
                 __size_of___fladd 0288                   __size_of___awdiv 0069  
                 __size_of___flneg 000B                   __size_of___awmod 0059  
                 __size_of___flmul 0361                   __size_of___flsub 0024  
                 __size_of___fltol 007C                   __size_of___lldiv 0068  
                 __size_of___llmod 0056                 __end_of__stringtab 1006  
                      _isdigit$814 0072                         sprintf@val 0040  
                  _I2C_Master_Init 1236                           ___xxtofl 0946  
                  _I2C_Master_Wait 1243                    _I2C_Master_Stop 1222  
                 __size_of_isdigit 0012                           __ptext10 0946  
                         __ptext11 1784                           __ptext20 146F  
                         __ptext12 12F9                           __ptext21 14EB  
                         __ptext13 03A1                           __ptext30 131D  
                         __ptext22 1272                           __ptext14 122B  
                         __ptext31 1342                           __ptext23 075E  
                         __ptext15 0040                           __ptext40 1219  
                         __ptext32 12DC                           __ptext24 165A  
                         __ptext16 1394                           __ptext41 1243  
                         __ptext33 1441                           __ptext25 171B  
                         __ptext17 08A2                           __ptext42 1236  
                         __ptext34 0814                           __ptext26 15B4  
                         __ptext18 152B                           __ptext43 1250  
                         __ptext35 12A3                           __ptext27 0AD7  
                         __ptext19 14AD                           __ptext36 1289  
                         __ptext28 13E7                           __ptext37 12BF  
                         __ptext29 136B                           __ptext38 07EF  
                         __ptext39 1222          __end_of_display_zero_zero 156B  
          __size_of_LCD_Set_Cursor 002E                   __size_of_sprintf 0244  
                 __size_of_write_x 0135                    _BackLight_State 006C  
                    __size_of_main 020C                      __size_of_ftoa 00D5  
                     _reset_eeprom 156B    __size_of_display_twelve_hundred 003E  
                display_zero_six@i 0020                           _zero_six 007B  
         _display_eighteen_hundred 14EB                   _display_zero_six 14AD  
         __end_of_I2C_Master_Start 1222           __end_of_I2C_Master_Write 07FF  
                       _INTCONbits 000B                 LCD_Write_Char@Data 0077  
                         init_ram0 0805                           isdigit@c 0073  
                         intlevel1 0000                          sprintf@ap 003F  
                        sprintf@sp 0044                   ___lldiv@dividend 0076  
                        stringcode 1000            __size_of_LCD_Write_4Bit 001A  
          __size_of_LCD_Write_Char 001D            __end_of_I2C_Master_Init 1243  
          __end_of_I2C_Master_Wait 1250            __end_of_I2C_Master_Stop 122B  
                  LCD_Init@I2C_Add 0020             __Umul8_16@multiplicand 0072  
                         sprintf@c 0049                           sprintf@f 0030  
                 ___lldiv@quotient 0021             _display_twelve_hundred 146F  
                         stringdir 1000                           stringtab 1000  
                       _ISR_sample 1250                  LCD_Set_Cursor@COL 0078  
                LCD_Set_Cursor@ROW 0079                           write_x@i 0023  
       __size_of_display_zero_zero 0040                      ___fladd@signs 0028  
__size_of_Update_Current_Date_Time 00D9          ?_Update_Current_Date_Time 0070  
                    ?_eeprom_write 0072                       ___fladd@aexp 0029  
                     ___fladd@bexp 002A                         _STATUSbits 0003  
             __Umul8_16@multiplier 0024                       ?_eeprom_read 0070  
                __Umul8_16@product 0020                 __size_of_BCD_2_DEC 0029  
